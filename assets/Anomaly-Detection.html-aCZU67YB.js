import{_ as i,c as e,b as a,d as s,e as p,o as l}from"./app-CNiZnG3t.js";const d={},t={class:"MathJax",jax:"SVG",style:{position:"relative"}},r={style:{"vertical-align":"-0.439ex"},xmlns:"http://www.w3.org/2000/svg",width:"15.984ex",height:"2.032ex",role:"img",focusable:"false",viewBox:"0 -704 7065.1 898","aria-hidden":"true"};function c(o,n){return l(),e("div",null,[n[4]||(n[4]=a('<h1 id="anomaly-detection" tabindex="-1"><a class="header-anchor" href="#anomaly-detection"><span>Anomaly Detection</span></a></h1><h2 id="iqr" tabindex="-1"><a class="header-anchor" href="#iqr"><span>IQR</span></a></h2><h3 id="usage" tabindex="-1"><a class="header-anchor" href="#usage"><span>Usage</span></a></h3><p>This function is used to detect anomalies based on IQR. Points distributing beyond 1.5 times IQR are selected.</p><p><strong>Name:</strong> IQR</p><p><strong>Input Series:</strong> Only support a single input series. The type is INT32 / INT64 / FLOAT / DOUBLE.</p><ul><li><code>method</code>: When set to &quot;batch&quot;, anomaly test is conducted after importing all data points; when set to &quot;stream&quot;, it is required to provide upper and lower quantiles. The default method is &quot;batch&quot;.</li><li><code>q1</code>: The lower quantile when method is set to &quot;stream&quot;.</li><li><code>q3</code>: The upper quantile when method is set to &quot;stream&quot;.</li></ul><p><strong>Output Series:</strong> Output a single series. The type is DOUBLE.</p>',8)),s("p",null,[n[2]||(n[2]=s("strong",null,"Note:",-1)),n[3]||(n[3]=p()),s("mjx-container",t,[(l(),e("svg",r,n[0]||(n[0]=[a('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D43C" d="M43 1Q26 1 26 10Q26 12 29 24Q34 43 39 45Q42 46 54 46H60Q120 46 136 53Q137 53 138 54Q143 56 149 77T198 273Q210 318 216 344Q286 624 286 626Q284 630 284 631Q274 637 213 637H193Q184 643 189 662Q193 677 195 680T209 683H213Q285 681 359 681Q481 681 487 683H497Q504 676 504 672T501 655T494 639Q491 637 471 637Q440 637 407 634Q393 631 388 623Q381 609 337 432Q326 385 315 341Q245 65 245 59Q245 52 255 50T307 46H339Q345 38 345 37T342 19Q338 6 332 0H316Q279 2 179 2Q143 2 113 2T65 2T43 1Z"></path></g><g data-mml-node="mi" transform="translate(504,0)"><path data-c="1D444" d="M399 -80Q399 -47 400 -30T402 -11V-7L387 -11Q341 -22 303 -22Q208 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435Q740 255 592 107Q529 47 461 16L444 8V3Q444 2 449 -24T470 -66T516 -82Q551 -82 583 -60T625 -3Q631 11 638 11Q647 11 649 2Q649 -6 639 -34T611 -100T557 -165T481 -194Q399 -194 399 -87V-80ZM636 468Q636 523 621 564T580 625T530 655T477 665Q429 665 379 640Q277 591 215 464T153 216Q153 110 207 59Q231 38 236 38V46Q236 86 269 120T347 155Q372 155 390 144T417 114T429 82T435 55L448 64Q512 108 557 185T619 334T636 468ZM314 18Q362 18 404 39L403 49Q399 104 366 115Q354 117 347 117Q344 117 341 117T337 118Q317 118 296 98T274 52Q274 18 314 18Z"></path></g><g data-mml-node="mi" transform="translate(1295,0)"><path data-c="1D445" d="M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z"></path></g><g data-mml-node="mo" transform="translate(2331.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="msub" transform="translate(3387.6,0)"><g data-mml-node="mi"><path data-c="1D444" d="M399 -80Q399 -47 400 -30T402 -11V-7L387 -11Q341 -22 303 -22Q208 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435Q740 255 592 107Q529 47 461 16L444 8V3Q444 2 449 -24T470 -66T516 -82Q551 -82 583 -60T625 -3Q631 11 638 11Q647 11 649 2Q649 -6 639 -34T611 -100T557 -165T481 -194Q399 -194 399 -87V-80ZM636 468Q636 523 621 564T580 625T530 655T477 665Q429 665 379 640Q277 591 215 464T153 216Q153 110 207 59Q231 38 236 38V46Q236 86 269 120T347 155Q372 155 390 144T417 114T429 82T435 55L448 64Q512 108 557 185T619 334T636 468ZM314 18Q362 18 404 39L403 49Q399 104 366 115Q354 117 347 117Q344 117 341 117T337 118Q317 118 296 98T274 52Q274 18 314 18Z"></path></g><g data-mml-node="mn" transform="translate(824,-150) scale(0.707)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></g></g><g data-mml-node="mo" transform="translate(4837.3,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msub" transform="translate(5837.6,0)"><g data-mml-node="mi"><path data-c="1D444" d="M399 -80Q399 -47 400 -30T402 -11V-7L387 -11Q341 -22 303 -22Q208 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435Q740 255 592 107Q529 47 461 16L444 8V3Q444 2 449 -24T470 -66T516 -82Q551 -82 583 -60T625 -3Q631 11 638 11Q647 11 649 2Q649 -6 639 -34T611 -100T557 -165T481 -194Q399 -194 399 -87V-80ZM636 468Q636 523 621 564T580 625T530 655T477 665Q429 665 379 640Q277 591 215 464T153 216Q153 110 207 59Q231 38 236 38V46Q236 86 269 120T347 155Q372 155 390 144T417 114T429 82T435 55L448 64Q512 108 557 185T619 334T636 468ZM314 18Q362 18 404 39L403 49Q399 104 366 115Q354 117 347 117Q344 117 341 117T337 118Q317 118 296 98T274 52Q274 18 314 18Z"></path></g><g data-mml-node="mn" transform="translate(824,-150) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></g>',1)]))),n[1]||(n[1]=s("mjx-assistive-mml",{unselectable:"on",display:"inline"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("mi",null,"I"),s("mi",null,"Q"),s("mi",null,"R"),s("mo",null,"="),s("msub",null,[s("mi",null,"Q"),s("mn",null,"3")]),s("mo",null,"âˆ’"),s("msub",null,[s("mi",null,"Q"),s("mn",null,"1")])])],-1))])]),n[5]||(n[5]=a(`<h3 id="examples" tabindex="-1"><a class="header-anchor" href="#examples"><span>Examples</span></a></h3><h4 id="batch-computing" tabindex="-1"><a class="header-anchor" href="#batch-computing"><span>Batch computing</span></a></h4><p>Input series:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+------------+</span></span>
<span class="line"><span>|                         Time|root.test.s1|</span></span>
<span class="line"><span>+-----------------------------+------------+</span></span>
<span class="line"><span>|1970-01-01T08:00:00.100+08:00|         0.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.200+08:00|         0.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.300+08:00|         1.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.400+08:00|        -1.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.500+08:00|         0.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.600+08:00|         0.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.700+08:00|        -2.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.800+08:00|         2.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.900+08:00|         0.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.000+08:00|         0.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.100+08:00|         1.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.200+08:00|        -1.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.300+08:00|        -1.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.400+08:00|         1.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.500+08:00|         0.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.600+08:00|         0.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.700+08:00|        10.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.800+08:00|         2.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.900+08:00|        -2.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:02.000+08:00|         0.0|</span></span>
<span class="line"><span>+-----------------------------+------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>SQL for query:</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">select</span><span style="color:#ABB2BF;"> iqr(s1) </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">test</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Output series:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+-----------------+</span></span>
<span class="line"><span>|                         Time|iqr(root.test.s1)|</span></span>
<span class="line"><span>+-----------------------------+-----------------+</span></span>
<span class="line"><span>|1970-01-01T08:00:01.700+08:00|             10.0|</span></span>
<span class="line"><span>+-----------------------------+-----------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="ksigma" tabindex="-1"><a class="header-anchor" href="#ksigma"><span>KSigma</span></a></h2><h3 id="usage-1" tabindex="-1"><a class="header-anchor" href="#usage-1"><span>Usage</span></a></h3><p>This function is used to detect anomalies based on the Dynamic K-Sigma Algorithm.<br> Within a sliding window, the input value with a deviation of more than k times the standard deviation from the average will be output as anomaly.</p><p><strong>Name:</strong> KSIGMA</p><p><strong>Input Series:</strong> Only support a single input series. The type is INT32 / INT64 / FLOAT / DOUBLE.</p><ul><li><code>k</code>: How many times to multiply on standard deviation to define anomaly, the default value is 3.</li><li><code>window</code>: The window size of Dynamic K-Sigma Algorithm, the default value is 10000.</li></ul><p><strong>Output Series:</strong> Output a single series. The type is same as input series.</p><p><strong>Note:</strong> Only when is larger than 0, the anomaly detection will be performed. Otherwise, nothing will be output.</p><h3 id="examples-1" tabindex="-1"><a class="header-anchor" href="#examples-1"><span>Examples</span></a></h3><h4 id="assigning-k" tabindex="-1"><a class="header-anchor" href="#assigning-k"><span>Assigning k</span></a></h4><p>Input series:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+---------------+</span></span>
<span class="line"><span>|                         Time|root.test.d1.s1|</span></span>
<span class="line"><span>+-----------------------------+---------------+</span></span>
<span class="line"><span>|2020-01-01T00:00:02.000+08:00|            0.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:03.000+08:00|           50.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:04.000+08:00|          100.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:06.000+08:00|          150.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:08.000+08:00|          200.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:10.000+08:00|          200.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:14.000+08:00|          200.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:15.000+08:00|          200.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:16.000+08:00|          200.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:18.000+08:00|          200.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:20.000+08:00|          150.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:22.000+08:00|          100.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:26.000+08:00|           50.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:28.000+08:00|            0.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:30.000+08:00|            NaN|</span></span>
<span class="line"><span>+-----------------------------+---------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>SQL for query:</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">select</span><span style="color:#ABB2BF;"> ksigma(s1,</span><span style="color:#98C379;">&quot;k&quot;</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;1.0&quot;</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">test</span><span style="color:#ABB2BF;">.d1 </span><span style="color:#C678DD;">where</span><span style="color:#C678DD;"> time</span><span style="color:#56B6C2;"> &lt;=</span><span style="color:#D19A66;"> 2020</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">01</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">01</span><span style="color:#D19A66;"> 00</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">30</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Output series:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+---------------------------------+</span></span>
<span class="line"><span>|Time                         |ksigma(root.test.d1.s1,&quot;k&quot;=&quot;3.0&quot;)|</span></span>
<span class="line"><span>+-----------------------------+---------------------------------+</span></span>
<span class="line"><span>|2020-01-01T00:00:02.000+08:00|                              0.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:03.000+08:00|                             50.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:26.000+08:00|                             50.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:28.000+08:00|                              0.0|</span></span>
<span class="line"><span>+-----------------------------+---------------------------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="lof" tabindex="-1"><a class="header-anchor" href="#lof"><span>LOF</span></a></h2><h3 id="usage-2" tabindex="-1"><a class="header-anchor" href="#usage-2"><span>Usage</span></a></h3><p>This function is used to detect density anomaly of time series. According to k-th distance calculation parameter and local outlier factor (lof) threshold, the function judges if a set of input values is an density anomaly, and a bool mark of anomaly values will be output.</p><p><strong>Name:</strong> LOF</p><p><strong>Input Series:</strong> Multiple input series. The type is INT32 / INT64 / FLOAT / DOUBLE.</p><ul><li><code>method</code>:assign a detection method. The default value is &quot;default&quot;, when input data has multiple dimensions. The alternative is &quot;series&quot;, when a input series will be transformed to high dimension.</li><li><code>k</code>:use the k-th distance to calculate lof. Default value is 3.</li><li><code>window</code>: size of window to split origin data points. Default value is 10000.</li><li><code>windowsize</code>:dimension that will be transformed into when method is &quot;series&quot;. The default value is 5.</li></ul><p><strong>Output Series:</strong> Output a single series. The type is DOUBLE.</p><p><strong>Note:</strong> Incomplete rows will be ignored. They are neither calculated nor marked as anomaly.</p><h3 id="examples-2" tabindex="-1"><a class="header-anchor" href="#examples-2"><span>Examples</span></a></h3><h4 id="using-default-parameters" tabindex="-1"><a class="header-anchor" href="#using-default-parameters"><span>Using default parameters</span></a></h4><p>Input series:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+---------------+---------------+</span></span>
<span class="line"><span>|                         Time|root.test.d1.s1|root.test.d1.s2|</span></span>
<span class="line"><span>+-----------------------------+---------------+---------------+</span></span>
<span class="line"><span>|1970-01-01T08:00:00.100+08:00|            0.0|            0.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.200+08:00|            0.0|            1.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.300+08:00|            1.0|            1.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.400+08:00|            1.0|            0.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.500+08:00|            0.0|           -1.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.600+08:00|           -1.0|           -1.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.700+08:00|           -1.0|            0.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.800+08:00|            2.0|            2.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.900+08:00|            0.0|           null|</span></span>
<span class="line"><span>+-----------------------------+---------------+---------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>SQL for query:</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">select</span><span style="color:#ABB2BF;"> lof(s1,s2) </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">test</span><span style="color:#ABB2BF;">.d1 </span><span style="color:#C678DD;">where</span><span style="color:#C678DD;"> time</span><span style="color:#56B6C2;">&lt;</span><span style="color:#D19A66;">1000</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Output series:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+-------------------------------------+</span></span>
<span class="line"><span>|                         Time|lof(root.test.d1.s1, root.test.d1.s2)|</span></span>
<span class="line"><span>+-----------------------------+-------------------------------------+</span></span>
<span class="line"><span>|1970-01-01T08:00:00.100+08:00|                   3.8274824267668244|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.200+08:00|                   3.0117631741126156|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.300+08:00|                    2.838155437762879|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.400+08:00|                   3.0117631741126156|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.500+08:00|                     2.73518261244453|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.600+08:00|                    2.371440975708148|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.700+08:00|                     2.73518261244453|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.800+08:00|                   1.7561416374270742|</span></span>
<span class="line"><span>+-----------------------------+-------------------------------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="diagnosing-1d-timeseries" tabindex="-1"><a class="header-anchor" href="#diagnosing-1d-timeseries"><span>Diagnosing 1d timeseries</span></a></h4><p>Input series:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+---------------+</span></span>
<span class="line"><span>|                         Time|root.test.d1.s1|</span></span>
<span class="line"><span>+-----------------------------+---------------+</span></span>
<span class="line"><span>|1970-01-01T08:00:00.100+08:00|            1.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.200+08:00|            2.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.300+08:00|            3.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.400+08:00|            4.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.500+08:00|            5.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.600+08:00|            6.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.700+08:00|            7.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.800+08:00|            8.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.900+08:00|            9.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.000+08:00|           10.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.100+08:00|           11.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.200+08:00|           12.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.300+08:00|           13.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.400+08:00|           14.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.500+08:00|           15.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.600+08:00|           16.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.700+08:00|           17.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.800+08:00|           18.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.900+08:00|           19.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:02.000+08:00|           20.0|</span></span>
<span class="line"><span>+-----------------------------+---------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>SQL for query:</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">select</span><span style="color:#ABB2BF;"> lof(s1, </span><span style="color:#98C379;">&quot;method&quot;</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;series&quot;</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">test</span><span style="color:#ABB2BF;">.d1 </span><span style="color:#C678DD;">where</span><span style="color:#C678DD;"> time</span><span style="color:#56B6C2;">&lt;</span><span style="color:#D19A66;">1000</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Output series:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+--------------------+</span></span>
<span class="line"><span>|                         Time|lof(root.test.d1.s1)|</span></span>
<span class="line"><span>+-----------------------------+--------------------+</span></span>
<span class="line"><span>|1970-01-01T08:00:00.100+08:00|    3.77777777777778|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.200+08:00|    4.32727272727273|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.300+08:00|    4.85714285714286|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.400+08:00|    5.40909090909091|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.500+08:00|    5.94999999999999|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.600+08:00|    6.43243243243243|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.700+08:00|    6.79999999999999|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.800+08:00|                 7.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.900+08:00|                 7.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.000+08:00|    6.79999999999999|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.100+08:00|    6.43243243243243|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.200+08:00|    5.94999999999999|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.300+08:00|    5.40909090909091|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.400+08:00|    4.85714285714286|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.500+08:00|    4.32727272727273|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.600+08:00|    3.77777777777778|</span></span>
<span class="line"><span>+-----------------------------+--------------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="missdetect" tabindex="-1"><a class="header-anchor" href="#missdetect"><span>MissDetect</span></a></h2><h3 id="usage-3" tabindex="-1"><a class="header-anchor" href="#usage-3"><span>Usage</span></a></h3><p>This function is used to detect missing anomalies.<br> In some datasets, missing values are filled by linear interpolation.<br> Thus, there are several long perfect linear segments.<br> By discovering these perfect linear segments,<br> missing anomalies are detected.</p><p><strong>Name:</strong> MISSDETECT</p><p><strong>Input Series:</strong> Only support a single input series. The data type is INT32 / INT64 / FLOAT / DOUBLE.</p><p><strong>Parameter:</strong></p><p><code>error</code>: The minimum length of the detected missing anomalies, which is an integer greater than or equal to 10. By default, it is 10.</p><p><strong>Output Series:</strong> Output a single series. The type is BOOLEAN. Each data point which is miss anomaly will be labeled as true.</p><h3 id="examples-3" tabindex="-1"><a class="header-anchor" href="#examples-3"><span>Examples</span></a></h3><p>Input series:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+---------------+</span></span>
<span class="line"><span>|                         Time|root.test.d2.s2|</span></span>
<span class="line"><span>+-----------------------------+---------------+</span></span>
<span class="line"><span>|2021-07-01T12:00:00.000+08:00|            0.0|</span></span>
<span class="line"><span>|2021-07-01T12:00:01.000+08:00|            1.0|</span></span>
<span class="line"><span>|2021-07-01T12:00:02.000+08:00|            0.0|</span></span>
<span class="line"><span>|2021-07-01T12:00:03.000+08:00|            1.0|</span></span>
<span class="line"><span>|2021-07-01T12:00:04.000+08:00|            0.0|</span></span>
<span class="line"><span>|2021-07-01T12:00:05.000+08:00|            0.0|</span></span>
<span class="line"><span>|2021-07-01T12:00:06.000+08:00|            0.0|</span></span>
<span class="line"><span>|2021-07-01T12:00:07.000+08:00|            0.0|</span></span>
<span class="line"><span>|2021-07-01T12:00:08.000+08:00|            0.0|</span></span>
<span class="line"><span>|2021-07-01T12:00:09.000+08:00|            0.0|</span></span>
<span class="line"><span>|2021-07-01T12:00:10.000+08:00|            0.0|</span></span>
<span class="line"><span>|2021-07-01T12:00:11.000+08:00|            0.0|</span></span>
<span class="line"><span>|2021-07-01T12:00:12.000+08:00|            0.0|</span></span>
<span class="line"><span>|2021-07-01T12:00:13.000+08:00|            0.0|</span></span>
<span class="line"><span>|2021-07-01T12:00:14.000+08:00|            0.0|</span></span>
<span class="line"><span>|2021-07-01T12:00:15.000+08:00|            0.0|</span></span>
<span class="line"><span>|2021-07-01T12:00:16.000+08:00|            1.0|</span></span>
<span class="line"><span>|2021-07-01T12:00:17.000+08:00|            0.0|</span></span>
<span class="line"><span>|2021-07-01T12:00:18.000+08:00|            1.0|</span></span>
<span class="line"><span>|2021-07-01T12:00:19.000+08:00|            0.0|</span></span>
<span class="line"><span>|2021-07-01T12:00:20.000+08:00|            1.0|</span></span>
<span class="line"><span>+-----------------------------+---------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>SQL for query:</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">select</span><span style="color:#ABB2BF;"> missdetect(s2,</span><span style="color:#98C379;">&#39;minlen&#39;</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&#39;10&#39;</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">test</span><span style="color:#ABB2BF;">.d2</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Output series:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+------------------------------------------+</span></span>
<span class="line"><span>|                         Time|missdetect(root.test.d2.s2, &quot;minlen&quot;=&quot;10&quot;)|</span></span>
<span class="line"><span>+-----------------------------+------------------------------------------+</span></span>
<span class="line"><span>|2021-07-01T12:00:00.000+08:00|                                     false|</span></span>
<span class="line"><span>|2021-07-01T12:00:01.000+08:00|                                     false|</span></span>
<span class="line"><span>|2021-07-01T12:00:02.000+08:00|                                     false|</span></span>
<span class="line"><span>|2021-07-01T12:00:03.000+08:00|                                     false|</span></span>
<span class="line"><span>|2021-07-01T12:00:04.000+08:00|                                      true|</span></span>
<span class="line"><span>|2021-07-01T12:00:05.000+08:00|                                      true|</span></span>
<span class="line"><span>|2021-07-01T12:00:06.000+08:00|                                      true|</span></span>
<span class="line"><span>|2021-07-01T12:00:07.000+08:00|                                      true|</span></span>
<span class="line"><span>|2021-07-01T12:00:08.000+08:00|                                      true|</span></span>
<span class="line"><span>|2021-07-01T12:00:09.000+08:00|                                      true|</span></span>
<span class="line"><span>|2021-07-01T12:00:10.000+08:00|                                      true|</span></span>
<span class="line"><span>|2021-07-01T12:00:11.000+08:00|                                      true|</span></span>
<span class="line"><span>|2021-07-01T12:00:12.000+08:00|                                      true|</span></span>
<span class="line"><span>|2021-07-01T12:00:13.000+08:00|                                      true|</span></span>
<span class="line"><span>|2021-07-01T12:00:14.000+08:00|                                      true|</span></span>
<span class="line"><span>|2021-07-01T12:00:15.000+08:00|                                      true|</span></span>
<span class="line"><span>|2021-07-01T12:00:16.000+08:00|                                     false|</span></span>
<span class="line"><span>|2021-07-01T12:00:17.000+08:00|                                     false|</span></span>
<span class="line"><span>|2021-07-01T12:00:18.000+08:00|                                     false|</span></span>
<span class="line"><span>|2021-07-01T12:00:19.000+08:00|                                     false|</span></span>
<span class="line"><span>|2021-07-01T12:00:20.000+08:00|                                     false|</span></span>
<span class="line"><span>+-----------------------------+------------------------------------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="range" tabindex="-1"><a class="header-anchor" href="#range"><span>Range</span></a></h2><h3 id="usage-4" tabindex="-1"><a class="header-anchor" href="#usage-4"><span>Usage</span></a></h3><p>This function is used to detect range anomaly of time series. According to upper bound and lower bound parameters, the function judges if a input value is beyond range, aka range anomaly, and a new time series of anomaly will be output.</p><p><strong>Name:</strong> RANGE</p><p><strong>Input Series:</strong> Only support a single input series. The type is INT32 / INT64 / FLOAT / DOUBLE.</p><ul><li><code>lower_bound</code>:lower bound of range anomaly detection.</li><li><code>upper_bound</code>:upper bound of range anomaly detection.</li></ul><p><strong>Output Series:</strong> Output a single series. The type is the same as the input.</p><p><strong>Note:</strong> Only when <code>upper_bound</code> is larger than <code>lower_bound</code>, the anomaly detection will be performed. Otherwise, nothing will be output.</p><h3 id="examples-4" tabindex="-1"><a class="header-anchor" href="#examples-4"><span>Examples</span></a></h3><h4 id="assigning-lower-and-upper-bound" tabindex="-1"><a class="header-anchor" href="#assigning-lower-and-upper-bound"><span>Assigning Lower and Upper Bound</span></a></h4><p>Input series:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+---------------+</span></span>
<span class="line"><span>|                         Time|root.test.d1.s1|</span></span>
<span class="line"><span>+-----------------------------+---------------+</span></span>
<span class="line"><span>|2020-01-01T00:00:02.000+08:00|          100.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:03.000+08:00|          101.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:04.000+08:00|          102.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:06.000+08:00|          104.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:08.000+08:00|          126.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:10.000+08:00|          108.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:14.000+08:00|          112.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:15.000+08:00|          113.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:16.000+08:00|          114.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:18.000+08:00|          116.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:20.000+08:00|          118.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:22.000+08:00|          120.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:26.000+08:00|          124.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:28.000+08:00|          126.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:30.000+08:00|            NaN|</span></span>
<span class="line"><span>+-----------------------------+---------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>SQL for query:</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">select</span><span style="color:#C678DD;"> range</span><span style="color:#ABB2BF;">(s1,</span><span style="color:#98C379;">&quot;lower_bound&quot;</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;101.0&quot;</span><span style="color:#ABB2BF;">,</span><span style="color:#98C379;">&quot;upper_bound&quot;</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;125.0&quot;</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">test</span><span style="color:#ABB2BF;">.d1 </span><span style="color:#C678DD;">where</span><span style="color:#C678DD;"> time</span><span style="color:#56B6C2;"> &lt;=</span><span style="color:#D19A66;"> 2020</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">01</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">01</span><span style="color:#D19A66;"> 00</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">30</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Output series:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+------------------------------------------------------------------+</span></span>
<span class="line"><span>|Time                         |range(root.test.d1.s1,&quot;lower_bound&quot;=&quot;101.0&quot;,&quot;upper_bound&quot;=&quot;125.0&quot;)|</span></span>
<span class="line"><span>+-----------------------------+------------------------------------------------------------------+</span></span>
<span class="line"><span>|2020-01-01T00:00:02.000+08:00|                                                             100.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:28.000+08:00|                                                             126.0|</span></span>
<span class="line"><span>+-----------------------------+------------------------------------------------------------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="twosidedfilter" tabindex="-1"><a class="header-anchor" href="#twosidedfilter"><span>TwoSidedFilter</span></a></h2><h3 id="usage-5" tabindex="-1"><a class="header-anchor" href="#usage-5"><span>Usage</span></a></h3><p>The function is used to filter anomalies of a numeric time series based on two-sided window detection.</p><p><strong>Name:</strong> TWOSIDEDFILTER</p><p><strong>Input Series:</strong> Only support a single input series. The data type is INT32 / INT64 / FLOAT / DOUBLE</p><p><strong>Output Series:</strong> Output a single series. The type is the same as the input. It is the input without anomalies.</p><p><strong>Parameter:</strong></p><ul><li><p><code>len</code>: The size of the window, which is a positive integer. By default, it&#39;s 5. When <code>len</code>=3, the algorithm detects forward window and backward window with length 3 and calculates the outlierness of the current point.</p></li><li><p><code>threshold</code>: The threshold of outlierness, which is a floating number in (0,1). By default, it&#39;s 0.3. The strict standard of detecting anomalies is in proportion to the threshold.</p></li></ul><h3 id="examples-5" tabindex="-1"><a class="header-anchor" href="#examples-5"><span>Examples</span></a></h3><p>Input series:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+------------+</span></span>
<span class="line"><span>|                         Time|root.test.s0|</span></span>
<span class="line"><span>+-----------------------------+------------+</span></span>
<span class="line"><span>|1970-01-01T08:00:00.000+08:00|      2002.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.000+08:00|      1946.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:02.000+08:00|      1958.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:03.000+08:00|      2012.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:04.000+08:00|      2051.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:05.000+08:00|      1898.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:06.000+08:00|      2014.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:07.000+08:00|      2052.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:08.000+08:00|      1935.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:09.000+08:00|      1901.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:10.000+08:00|      1972.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:11.000+08:00|      1969.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:12.000+08:00|      1984.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:13.000+08:00|      2018.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:37.000+08:00|      1484.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:38.000+08:00|      1055.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:39.000+08:00|      1050.0|</span></span>
<span class="line"><span>|1970-01-01T08:01:05.000+08:00|      1023.0|</span></span>
<span class="line"><span>|1970-01-01T08:01:06.000+08:00|      1056.0|</span></span>
<span class="line"><span>|1970-01-01T08:01:07.000+08:00|       978.0|</span></span>
<span class="line"><span>|1970-01-01T08:01:08.000+08:00|      1050.0|</span></span>
<span class="line"><span>|1970-01-01T08:01:09.000+08:00|      1123.0|</span></span>
<span class="line"><span>|1970-01-01T08:01:10.000+08:00|      1150.0|</span></span>
<span class="line"><span>|1970-01-01T08:01:11.000+08:00|      1034.0|</span></span>
<span class="line"><span>|1970-01-01T08:01:12.000+08:00|       950.0|</span></span>
<span class="line"><span>|1970-01-01T08:01:13.000+08:00|      1059.0|</span></span>
<span class="line"><span>+-----------------------------+------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>SQL for query:</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">select</span><span style="color:#ABB2BF;"> TwoSidedFilter(s0, </span><span style="color:#98C379;">&#39;len&#39;</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&#39;5&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;threshold&#39;</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&#39;0.3&#39;</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">test</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Output series:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+------------+</span></span>
<span class="line"><span>|                         Time|root.test.s0|</span></span>
<span class="line"><span>+-----------------------------+------------+</span></span>
<span class="line"><span>|1970-01-01T08:00:00.000+08:00|      2002.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.000+08:00|      1946.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:02.000+08:00|      1958.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:03.000+08:00|      2012.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:04.000+08:00|      2051.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:05.000+08:00|      1898.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:06.000+08:00|      2014.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:07.000+08:00|      2052.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:08.000+08:00|      1935.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:09.000+08:00|      1901.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:10.000+08:00|      1972.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:11.000+08:00|      1969.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:12.000+08:00|      1984.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:13.000+08:00|      2018.0|</span></span>
<span class="line"><span>|1970-01-01T08:01:05.000+08:00|      1023.0|</span></span>
<span class="line"><span>|1970-01-01T08:01:06.000+08:00|      1056.0|</span></span>
<span class="line"><span>|1970-01-01T08:01:07.000+08:00|       978.0|</span></span>
<span class="line"><span>|1970-01-01T08:01:08.000+08:00|      1050.0|</span></span>
<span class="line"><span>|1970-01-01T08:01:09.000+08:00|      1123.0|</span></span>
<span class="line"><span>|1970-01-01T08:01:10.000+08:00|      1150.0|</span></span>
<span class="line"><span>|1970-01-01T08:01:11.000+08:00|      1034.0|</span></span>
<span class="line"><span>|1970-01-01T08:01:12.000+08:00|       950.0|</span></span>
<span class="line"><span>|1970-01-01T08:01:13.000+08:00|      1059.0|</span></span>
<span class="line"><span>+-----------------------------+------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,93))])}const v=i(d,[["render",c],["__file","Anomaly-Detection.html.vue"]]),m=JSON.parse('{"path":"/UserGuide/V0.13.x/UDF-Library/Anomaly-Detection.html","title":"Anomaly Detection","lang":"en-US","frontmatter":{"description":"Anomaly Detection IQR Usage This function is used to detect anomalies based on IQR. Points distributing beyond 1.5 times IQR are selected. Name: IQR Input Series: Only support a...","head":[["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://iotdb.apache.org/zh/UserGuide/V0.13.x/UDF-Library/Anomaly-Detection.html"}],["meta",{"property":"og:url","content":"https://iotdb.apache.org/UserGuide/V0.13.x/UDF-Library/Anomaly-Detection.html"}],["meta",{"property":"og:site_name","content":"IoTDB Website"}],["meta",{"property":"og:title","content":"Anomaly Detection"}],["meta",{"property":"og:description","content":"Anomaly Detection IQR Usage This function is used to detect anomalies based on IQR. Points distributing beyond 1.5 times IQR are selected. Name: IQR Input Series: Only support a..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-07-10T03:11:17.000Z"}],["meta",{"property":"article:modified_time","content":"2023-07-10T03:11:17.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Anomaly Detection\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-07-10T03:11:17.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"IQR","slug":"iqr","link":"#iqr","children":[{"level":3,"title":"Usage","slug":"usage","link":"#usage","children":[]},{"level":3,"title":"Examples","slug":"examples","link":"#examples","children":[]}]},{"level":2,"title":"KSigma","slug":"ksigma","link":"#ksigma","children":[{"level":3,"title":"Usage","slug":"usage-1","link":"#usage-1","children":[]},{"level":3,"title":"Examples","slug":"examples-1","link":"#examples-1","children":[]}]},{"level":2,"title":"LOF","slug":"lof","link":"#lof","children":[{"level":3,"title":"Usage","slug":"usage-2","link":"#usage-2","children":[]},{"level":3,"title":"Examples","slug":"examples-2","link":"#examples-2","children":[]}]},{"level":2,"title":"MissDetect","slug":"missdetect","link":"#missdetect","children":[{"level":3,"title":"Usage","slug":"usage-3","link":"#usage-3","children":[]},{"level":3,"title":"Examples","slug":"examples-3","link":"#examples-3","children":[]}]},{"level":2,"title":"Range","slug":"range","link":"#range","children":[{"level":3,"title":"Usage","slug":"usage-4","link":"#usage-4","children":[]},{"level":3,"title":"Examples","slug":"examples-4","link":"#examples-4","children":[]}]},{"level":2,"title":"TwoSidedFilter","slug":"twosidedfilter","link":"#twosidedfilter","children":[{"level":3,"title":"Usage","slug":"usage-5","link":"#usage-5","children":[]},{"level":3,"title":"Examples","slug":"examples-5","link":"#examples-5","children":[]}]}],"git":{"createdTime":1688958677000,"updatedTime":1688958677000,"contributors":[{"name":"CritasWang","username":"CritasWang","email":"critas@outlook.com","commits":1,"url":"https://github.com/CritasWang"}]},"readingTime":{"minutes":8.9,"words":2670},"filePathRelative":"UserGuide/V0.13.x/UDF-Library/Anomaly-Detection.md","localizedDate":"July 10, 2023","autoDesc":true}');export{v as comp,m as data};
