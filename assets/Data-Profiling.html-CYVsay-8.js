import{_ as i,c as e,b as l,d as s,e as n,o as p}from"./app-DmvF8OAs.js";const d={},t={class:"MathJax",jax:"SVG",style:{position:"relative"}},T={style:{"vertical-align":"-0.186ex"},xmlns:"http://www.w3.org/2000/svg",width:"7.037ex",height:"1.731ex",role:"img",focusable:"false",viewBox:"0 -683 3110.4 765","aria-hidden":"true"},r={class:"MathJax",jax:"SVG",style:{position:"relative"}},Q={style:{"vertical-align":"-0.798ex"},xmlns:"http://www.w3.org/2000/svg",width:"23.285ex",height:"2.756ex",role:"img",focusable:"false",viewBox:"0 -865.4 10291.9 1218.2","aria-hidden":"true"},c={class:"MathJax",jax:"SVG",style:{position:"relative"}},o={style:{"vertical-align":"-0.798ex"},xmlns:"http://www.w3.org/2000/svg",width:"17.628ex",height:"2.756ex",role:"img",focusable:"false",viewBox:"0 -865.4 7791.4 1218.2","aria-hidden":"true"},m={class:"MathJax",jax:"SVG",display:"true",style:{position:"relative"}},v={style:{"vertical-align":"-1.552ex"},xmlns:"http://www.w3.org/2000/svg",width:"89.496ex",height:"4.588ex",role:"img",focusable:"false",viewBox:"0 -1342 39557.1 2028","aria-hidden":"true"},u={class:"MathJax",jax:"SVG",display:"true",style:{position:"relative"}},h={style:{"vertical-align":"-1.602ex"},xmlns:"http://www.w3.org/2000/svg",width:"95.655ex",height:"4.638ex",role:"img",focusable:"false",viewBox:"0 -1342 42279.6 2050","aria-hidden":"true"},b={class:"MathJax",jax:"SVG",display:"true",style:{position:"relative"}},g={style:{"vertical-align":"-1.552ex"},xmlns:"http://www.w3.org/2000/svg",width:"92.889ex",height:"4.588ex",role:"img",focusable:"false",viewBox:"0 -1342 41057.1 2028","aria-hidden":"true"},H={class:"MathJax",jax:"SVG",style:{position:"relative"}},L={style:{"vertical-align":"-0.566ex"},xmlns:"http://www.w3.org/2000/svg",width:"20.492ex",height:"2.262ex",role:"img",focusable:"false",viewBox:"0 -750 9057.3 1000","aria-hidden":"true"},V={class:"MathJax",jax:"SVG",style:{position:"relative"}},f={style:{"vertical-align":"-0.566ex"},xmlns:"http://www.w3.org/2000/svg",width:"20.492ex",height:"2.262ex",role:"img",focusable:"false",viewBox:"0 -750 9057.3 1000","aria-hidden":"true"},y={class:"MathJax",jax:"SVG",style:{position:"relative"}},B={style:{"vertical-align":"-0.312ex"},xmlns:"http://www.w3.org/2000/svg",width:"17.444ex",height:"1.882ex",role:"img",focusable:"false",viewBox:"0 -694 7710.1 832","aria-hidden":"true"},M={class:"MathJax",jax:"SVG",style:{position:"relative"}},k={style:{"vertical-align":"-0.581ex"},xmlns:"http://www.w3.org/2000/svg",width:"20.845ex",height:"2.278ex",role:"img",focusable:"false",viewBox:"0 -750 9213.6 1006.9","aria-hidden":"true"},Z={class:"MathJax",jax:"SVG",style:{position:"relative"}},D={style:{"vertical-align":"-0.025ex"},xmlns:"http://www.w3.org/2000/svg",width:"1.357ex",height:"1.025ex",role:"img",focusable:"false",viewBox:"0 -442 600 453","aria-hidden":"true"};function x(A,a){return p(),e("div",null,[a[45]||(a[45]=l('<h2 id="数据画像" tabindex="-1"><a class="header-anchor" href="#数据画像"><span>数据画像</span></a></h2><h3 id="acf" tabindex="-1"><a class="header-anchor" href="#acf"><span>ACF</span></a></h3><h4 id="函数简介" tabindex="-1"><a class="header-anchor" href="#函数简介"><span>函数简介</span></a></h4><p>本函数用于计算时间序列的自相关函数值，即序列与自身之间的互相关函数，详情参见<code>XCorr</code>函数文档。</p><p><strong>函数名：</strong> ACF</p><p><strong>输入序列：</strong> 仅支持单个输入序列，类型为 INT32 / INT64 / FLOAT / DOUBLE。</p>',6)),s("p",null,[a[2]||(a[2]=s("strong",null,"输出序列：",-1)),a[3]||(a[3]=n(" 输出单个序列，类型为 DOUBLE。序列中共包含")),s("mjx-container",t,[(p(),e("svg",T,a[0]||(a[0]=[l('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mi" transform="translate(500,0)"><path data-c="1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z"></path></g><g data-mml-node="mo" transform="translate(1610.2,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(2610.4,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g>',1)]))),a[1]||(a[1]=s("mjx-assistive-mml",{unselectable:"on",display:"inline"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("mn",null,"2"),s("mi",null,"N"),s("mo",null,"−"),s("mn",null,"1")])],-1))]),a[4]||(a[4]=n("个数据点，每个值的具体含义参见")),a[5]||(a[5]=s("code",null,"XCorr",-1)),a[6]||(a[6]=n("函数文档。"))]),a[46]||(a[46]=l(`<p><strong>提示：</strong></p><ul><li>序列中的<code>NaN</code>值会被忽略，在计算中表现为0。</li></ul><h4 id="使用示例" tabindex="-1"><a class="header-anchor" href="#使用示例"><span>使用示例</span></a></h4><p>输入序列：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+---------------+</span></span>
<span class="line"><span>|                         Time|root.test.d1.s1|</span></span>
<span class="line"><span>+-----------------------------+---------------+</span></span>
<span class="line"><span>|2020-01-01T00:00:01.000+08:00|              1|</span></span>
<span class="line"><span>|2020-01-01T00:00:02.000+08:00|            NaN|</span></span>
<span class="line"><span>|2020-01-01T00:00:03.000+08:00|              3|</span></span>
<span class="line"><span>|2020-01-01T00:00:04.000+08:00|            NaN|</span></span>
<span class="line"><span>|2020-01-01T00:00:05.000+08:00|              5|</span></span>
<span class="line"><span>+-----------------------------+---------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>用于查询的 SQL 语句：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">select</span><span style="color:#ABB2BF;"> acf(s1) </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">test</span><span style="color:#ABB2BF;">.d1 </span><span style="color:#C678DD;">where</span><span style="color:#C678DD;"> time</span><span style="color:#56B6C2;"> &lt;=</span><span style="color:#D19A66;"> 2020</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">01</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">01</span><span style="color:#D19A66;"> 00</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">05</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>输出序列：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+--------------------+</span></span>
<span class="line"><span>|                         Time|acf(root.test.d1.s1)|</span></span>
<span class="line"><span>+-----------------------------+--------------------+</span></span>
<span class="line"><span>|1970-01-01T08:00:00.001+08:00|                 1.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.002+08:00|                 0.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.003+08:00|                 3.6|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.004+08:00|                 0.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.005+08:00|                 7.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.006+08:00|                 0.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.007+08:00|                 3.6|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.008+08:00|                 0.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.009+08:00|                 1.0|</span></span>
<span class="line"><span>+-----------------------------+--------------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="distinct" tabindex="-1"><a class="header-anchor" href="#distinct"><span>Distinct</span></a></h3><h4 id="函数简介-1" tabindex="-1"><a class="header-anchor" href="#函数简介-1"><span>函数简介</span></a></h4><p>本函数可以返回输入序列中出现的所有不同的元素。</p><p><strong>函数名：</strong> DISTINCT</p><p><strong>输入序列：</strong> 仅支持单个输入序列，类型可以是任意的</p><p><strong>输出序列：</strong> 输出单个序列，类型与输入相同。</p><p><strong>提示：</strong></p><ul><li>输出序列的时间戳是无意义的。输出顺序是任意的。</li><li>缺失值和空值将被忽略，但<code>NaN</code>不会被忽略。</li><li>字符串区分大小写</li></ul><h4 id="使用示例-1" tabindex="-1"><a class="header-anchor" href="#使用示例-1"><span>使用示例</span></a></h4><p>输入序列：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+---------------+</span></span>
<span class="line"><span>|                         Time|root.test.d2.s2|</span></span>
<span class="line"><span>+-----------------------------+---------------+</span></span>
<span class="line"><span>|2020-01-01T08:00:00.001+08:00|          Hello|</span></span>
<span class="line"><span>|2020-01-01T08:00:00.002+08:00|          hello|</span></span>
<span class="line"><span>|2020-01-01T08:00:00.003+08:00|          Hello|</span></span>
<span class="line"><span>|2020-01-01T08:00:00.004+08:00|          World|</span></span>
<span class="line"><span>|2020-01-01T08:00:00.005+08:00|          World|</span></span>
<span class="line"><span>+-----------------------------+---------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>用于查询的 SQL 语句：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">select distinct</span><span style="color:#ABB2BF;">(s2) </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">test</span><span style="color:#ABB2BF;">.d2</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>输出序列：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+-------------------------+</span></span>
<span class="line"><span>|                         Time|distinct(root.test.d2.s2)|</span></span>
<span class="line"><span>+-----------------------------+-------------------------+</span></span>
<span class="line"><span>|1970-01-01T08:00:00.001+08:00|                    Hello|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.002+08:00|                    hello|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.003+08:00|                    World|</span></span>
<span class="line"><span>+-----------------------------+-------------------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="histogram" tabindex="-1"><a class="header-anchor" href="#histogram"><span>Histogram</span></a></h3><h4 id="函数简介-2" tabindex="-1"><a class="header-anchor" href="#函数简介-2"><span>函数简介</span></a></h4><p>本函数用于计算单列数值型数据的分布直方图。</p><p><strong>函数名：</strong> HISTOGRAM</p><p><strong>输入序列：</strong> 仅支持单个输入序列，类型为 INT32 / INT64 / FLOAT / DOUBLE。</p><p><strong>参数：</strong></p><ul><li><code>min</code>：表示所求数据范围的下限，默认值为 -Double.MAX_VALUE。</li><li><code>max</code>：表示所求数据范围的上限，默认值为 Double.MAX_VALUE，<code>start</code>的值必须小于或等于<code>end</code>。</li><li><code>count</code>: 表示直方图分桶的数量，默认值为 1，其值必须为正整数。</li></ul>`,31)),s("p",null,[a[11]||(a[11]=s("strong",null,"输出序列：",-1)),a[12]||(a[12]=n(" 直方图分桶的值，其中第 i 个桶（从 1 开始计数）表示的数据范围下界为")),s("mjx-container",r,[(p(),e("svg",Q,a[7]||(a[7]=[l('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(878,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(1223,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(2045.2,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mo" transform="translate(3045.4,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(3434.4,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(4001.7,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(5001.9,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(5501.9,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(6113.1,0)"><path data-c="22C5" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z"></path></g><g data-mml-node="mfrac" transform="translate(6613.3,0)"><g data-mml-node="mrow" transform="translate(220,398) scale(0.707)"><g data-mml-node="mi"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(878,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(1407,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(1979,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mi" transform="translate(2757,0)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(3635,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(3980,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="mrow" transform="translate(972.7,-345) scale(0.707)"><g data-mml-node="mi"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mi" transform="translate(433,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(918,0)"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(1490,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(2090,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g></g><rect width="3438.5" height="60" x="120" y="220"></rect></g></g></g>',1)]))),a[8]||(a[8]=s("mjx-assistive-mml",{unselectable:"on",display:"inline"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("mi",null,"m"),s("mi",null,"i"),s("mi",null,"n"),s("mo",null,"+"),s("mo",{stretchy:"false"},"("),s("mi",null,"i"),s("mo",null,"−"),s("mn",null,"1"),s("mo",{stretchy:"false"},")"),s("mo",null,"⋅"),s("mfrac",null,[s("mrow",null,[s("mi",null,"m"),s("mi",null,"a"),s("mi",null,"x"),s("mo",null,"−"),s("mi",null,"m"),s("mi",null,"i"),s("mi",null,"n")]),s("mrow",null,[s("mi",null,"c"),s("mi",null,"o"),s("mi",null,"u"),s("mi",null,"n"),s("mi",null,"t")])])])],-1))]),a[13]||(a[13]=n("，数据范围上界为")),s("mjx-container",c,[(p(),e("svg",o,a[9]||(a[9]=[l('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(878,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(1223,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(2045.2,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mi" transform="translate(3045.4,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(3612.7,0)"><path data-c="22C5" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z"></path></g><g data-mml-node="mfrac" transform="translate(4112.9,0)"><g data-mml-node="mrow" transform="translate(220,398) scale(0.707)"><g data-mml-node="mi"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(878,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(1407,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(1979,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mi" transform="translate(2757,0)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(3635,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(3980,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="mrow" transform="translate(972.7,-345) scale(0.707)"><g data-mml-node="mi"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mi" transform="translate(433,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(918,0)"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(1490,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(2090,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g></g><rect width="3438.5" height="60" x="120" y="220"></rect></g></g></g>',1)]))),a[10]||(a[10]=s("mjx-assistive-mml",{unselectable:"on",display:"inline"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("mi",null,"m"),s("mi",null,"i"),s("mi",null,"n"),s("mo",null,"+"),s("mi",null,"i"),s("mo",null,"⋅"),s("mfrac",null,[s("mrow",null,[s("mi",null,"m"),s("mi",null,"a"),s("mi",null,"x"),s("mo",null,"−"),s("mi",null,"m"),s("mi",null,"i"),s("mi",null,"n")]),s("mrow",null,[s("mi",null,"c"),s("mi",null,"o"),s("mi",null,"u"),s("mi",null,"n"),s("mi",null,"t")])])])],-1))]),a[14]||(a[14]=n("。"))]),a[47]||(a[47]=l(`<p><strong>提示：</strong></p><ul><li>如果某个数据点的数值小于<code>min</code>，它会被放入第 1 个桶；如果某个数据点的数值大于<code>max</code>，它会被放入最后 1 个桶。</li><li>数据中的空值、缺失值和<code>NaN</code>将会被忽略。</li></ul><h4 id="使用示例-2" tabindex="-1"><a class="header-anchor" href="#使用示例-2"><span>使用示例</span></a></h4><p>输入序列：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+---------------+</span></span>
<span class="line"><span>|                         Time|root.test.d1.s1|</span></span>
<span class="line"><span>+-----------------------------+---------------+</span></span>
<span class="line"><span>|2020-01-01T00:00:00.000+08:00|            1.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:01.000+08:00|            2.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:02.000+08:00|            3.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:03.000+08:00|            4.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:04.000+08:00|            5.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:05.000+08:00|            6.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:06.000+08:00|            7.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:07.000+08:00|            8.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:08.000+08:00|            9.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:09.000+08:00|           10.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:10.000+08:00|           11.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:11.000+08:00|           12.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:12.000+08:00|           13.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:13.000+08:00|           14.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:14.000+08:00|           15.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:15.000+08:00|           16.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:16.000+08:00|           17.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:17.000+08:00|           18.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:18.000+08:00|           19.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:19.000+08:00|           20.0|</span></span>
<span class="line"><span>+-----------------------------+---------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>用于查询的SQL语句：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">select</span><span style="color:#C678DD;"> histogram</span><span style="color:#ABB2BF;">(s1,</span><span style="color:#98C379;">&quot;min&quot;</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;1&quot;</span><span style="color:#ABB2BF;">,</span><span style="color:#98C379;">&quot;max&quot;</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;20&quot;</span><span style="color:#ABB2BF;">,</span><span style="color:#98C379;">&quot;count&quot;</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;10&quot;</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">test</span><span style="color:#ABB2BF;">.d1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>输出序列：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+---------------------------------------------------------------+</span></span>
<span class="line"><span>|                         Time|histogram(root.test.d1.s1, &quot;min&quot;=&quot;1&quot;, &quot;max&quot;=&quot;20&quot;, &quot;count&quot;=&quot;10&quot;)|</span></span>
<span class="line"><span>+-----------------------------+---------------------------------------------------------------+</span></span>
<span class="line"><span>|1970-01-01T08:00:00.000+08:00|                                                              2|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.001+08:00|                                                              2|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.002+08:00|                                                              2|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.003+08:00|                                                              2|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.004+08:00|                                                              2|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.005+08:00|                                                              2|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.006+08:00|                                                              2|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.007+08:00|                                                              2|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.008+08:00|                                                              2|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.009+08:00|                                                              2|</span></span>
<span class="line"><span>+-----------------------------+---------------------------------------------------------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="integral" tabindex="-1"><a class="header-anchor" href="#integral"><span>Integral</span></a></h3><h4 id="函数简介-3" tabindex="-1"><a class="header-anchor" href="#函数简介-3"><span>函数简介</span></a></h4><p>本函数用于计算时间序列的数值积分，即以时间为横坐标、数值为纵坐标绘制的折线图中折线以下的面积。</p><p><strong>函数名：</strong> INTEGRAL</p><p><strong>输入序列：</strong> 仅支持单个输入序列，类型为 INT32 / INT64 / FLOAT / DOUBLE。</p><p><strong>参数：</strong></p><ul><li><code>unit</code>：积分求解所用的时间轴单位，取值为 &quot;1S&quot;, &quot;1s&quot;, &quot;1m&quot;, &quot;1H&quot;, &quot;1d&quot;（区分大小写），分别表示以毫秒、秒、分钟、小时、天为单位计算积分。<br> 缺省情况下取 &quot;1s&quot;，以秒为单位。</li></ul><p><strong>输出序列：</strong> 输出单个序列，类型为 DOUBLE，序列仅包含一个时间戳为 0、值为积分结果的数据点。</p><p><strong>提示：</strong></p><ul><li><p>积分值等于折线图中每相邻两个数据点和时间轴形成的直角梯形的面积之和，不同时间单位下相当于横轴进行不同倍数放缩，得到的积分值可直接按放缩倍数转换。</p></li><li><p>数据中<code>NaN</code>将会被忽略。折线将以临近两个有值数据点为准。</p></li></ul><h4 id="使用示例-3" tabindex="-1"><a class="header-anchor" href="#使用示例-3"><span>使用示例</span></a></h4><h5 id="参数缺省" tabindex="-1"><a class="header-anchor" href="#参数缺省"><span>参数缺省</span></a></h5><p>缺省情况下积分以1s为时间单位。</p><p>输入序列：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+---------------+</span></span>
<span class="line"><span>|                         Time|root.test.d1.s1|</span></span>
<span class="line"><span>+-----------------------------+---------------+</span></span>
<span class="line"><span>|2020-01-01T00:00:01.000+08:00|              1|</span></span>
<span class="line"><span>|2020-01-01T00:00:02.000+08:00|              2|</span></span>
<span class="line"><span>|2020-01-01T00:00:03.000+08:00|              5|</span></span>
<span class="line"><span>|2020-01-01T00:00:04.000+08:00|              6|</span></span>
<span class="line"><span>|2020-01-01T00:00:05.000+08:00|              7|</span></span>
<span class="line"><span>|2020-01-01T00:00:08.000+08:00|              8|</span></span>
<span class="line"><span>|2020-01-01T00:00:09.000+08:00|            NaN|</span></span>
<span class="line"><span>|2020-01-01T00:00:10.000+08:00|             10|</span></span>
<span class="line"><span>+-----------------------------+---------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>用于查询的 SQL 语句：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">select</span><span style="color:#ABB2BF;"> integral(s1) </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">test</span><span style="color:#ABB2BF;">.d1 </span><span style="color:#C678DD;">where</span><span style="color:#C678DD;"> time</span><span style="color:#56B6C2;"> &lt;=</span><span style="color:#D19A66;"> 2020</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">01</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">01</span><span style="color:#D19A66;"> 00</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">10</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>输出序列：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+-------------------------+</span></span>
<span class="line"><span>|                         Time|integral(root.test.d1.s1)|</span></span>
<span class="line"><span>+-----------------------------+-------------------------+</span></span>
<span class="line"><span>|1970-01-01T08:00:00.000+08:00|                     57.5|</span></span>
<span class="line"><span>+-----------------------------+-------------------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其计算公式为：</p>`,29)),s("mjx-container",m,[(p(),e("svg",v,a[15]||(a[15]=[l('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mfrac"><g data-mml-node="mn" transform="translate(220,676)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mn" transform="translate(220,-686)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><rect width="700" height="60" x="120" y="220"></rect></g><g data-mml-node="mo" transform="translate(940,0)"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path></g><g data-mml-node="mo" transform="translate(1218,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(1607,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(2329.2,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(3329.4,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mo" transform="translate(3829.4,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(4440.7,0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="mn" transform="translate(5440.9,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(6163.1,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mo" transform="translate(7163.3,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(7552.3,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mo" transform="translate(8274.6,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(9274.8,0)"><path data-c="35" d="M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z"></path></g><g data-mml-node="mo" transform="translate(9774.8,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(10386,0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="mn" transform="translate(11386.2,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(12108.4,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mo" transform="translate(13108.7,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(13497.7,0)"><path data-c="35" d="M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z"></path></g><g data-mml-node="mo" transform="translate(14219.9,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(15220.1,0)"><path data-c="36" d="M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z"></path></g><g data-mml-node="mo" transform="translate(15720.1,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(16331.3,0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="mn" transform="translate(17331.6,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(18053.8,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mo" transform="translate(19054,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(19443,0)"><path data-c="36" d="M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z"></path></g><g data-mml-node="mo" transform="translate(20165.2,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(21165.4,0)"><path data-c="37" d="M55 458Q56 460 72 567L88 674Q88 676 108 676H128V672Q128 662 143 655T195 646T364 644H485V605L417 512Q408 500 387 472T360 435T339 403T319 367T305 330T292 284T284 230T278 162T275 80Q275 66 275 52T274 28V19Q270 2 255 -10T221 -22Q210 -22 200 -19T179 0T168 40Q168 198 265 368Q285 400 349 489L395 552H302Q128 552 119 546Q113 543 108 522T98 479L95 458V455H55V458Z"></path></g><g data-mml-node="mo" transform="translate(21665.4,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(22276.7,0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="mn" transform="translate(23276.9,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(23999.1,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mo" transform="translate(24999.3,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(25388.3,0)"><path data-c="37" d="M55 458Q56 460 72 567L88 674Q88 676 108 676H128V672Q128 662 143 655T195 646T364 644H485V605L417 512Q408 500 387 472T360 435T339 403T319 367T305 330T292 284T284 230T278 162T275 80Q275 66 275 52T274 28V19Q270 2 255 -10T221 -22Q210 -22 200 -19T179 0T168 40Q168 198 265 368Q285 400 349 489L395 552H302Q128 552 119 546Q113 543 108 522T98 479L95 458V455H55V458Z"></path></g><g data-mml-node="mo" transform="translate(26110.6,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(27110.8,0)"><path data-c="38" d="M70 417T70 494T124 618T248 666Q319 666 374 624T429 515Q429 485 418 459T392 417T361 389T335 371T324 363L338 354Q352 344 366 334T382 323Q457 264 457 174Q457 95 399 37T249 -22Q159 -22 101 29T43 155Q43 263 172 335L154 348Q133 361 127 368Q70 417 70 494ZM286 386L292 390Q298 394 301 396T311 403T323 413T334 425T345 438T355 454T364 471T369 491T371 513Q371 556 342 586T275 624Q268 625 242 625Q201 625 165 599T128 534Q128 511 141 492T167 463T217 431Q224 426 228 424L286 386ZM250 21Q308 21 350 55T392 137Q392 154 387 169T375 194T353 216T330 234T301 253T274 270Q260 279 244 289T218 306L210 311Q204 311 181 294T133 239T107 157Q107 98 150 60T250 21Z"></path></g><g data-mml-node="mo" transform="translate(27610.8,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(28222,0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="mn" transform="translate(29222.2,0)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></g><g data-mml-node="mo" transform="translate(29944.4,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mo" transform="translate(30944.7,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(31333.7,0)"><path data-c="38" d="M70 417T70 494T124 618T248 666Q319 666 374 624T429 515Q429 485 418 459T392 417T361 389T335 371T324 363L338 354Q352 344 366 334T382 323Q457 264 457 174Q457 95 399 37T249 -22Q159 -22 101 29T43 155Q43 263 172 335L154 348Q133 361 127 368Q70 417 70 494ZM286 386L292 390Q298 394 301 396T311 403T323 413T334 425T345 438T355 454T364 471T369 491T371 513Q371 556 342 586T275 624Q268 625 242 625Q201 625 165 599T128 534Q128 511 141 492T167 463T217 431Q224 426 228 424L286 386ZM250 21Q308 21 350 55T392 137Q392 154 387 169T375 194T353 216T330 234T301 253T274 270Q260 279 244 289T218 306L210 311Q204 311 181 294T133 239T107 157Q107 98 150 60T250 21Z"></path></g><g data-mml-node="mo" transform="translate(32055.9,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(33056.1,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(500,0)"></path></g><g data-mml-node="mo" transform="translate(34056.1,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(34667.3,0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="mn" transform="translate(35667.6,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mo" transform="translate(36167.6,0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path></g><g data-mml-node="mo" transform="translate(36723.3,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(37779.1,0)"><path data-c="35" d="M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z"></path><path data-c="37" d="M55 458Q56 460 72 567L88 674Q88 676 108 676H128V672Q128 662 143 655T195 646T364 644H485V605L417 512Q408 500 387 472T360 435T339 403T319 367T305 330T292 284T284 230T278 162T275 80Q275 66 275 52T274 28V19Q270 2 255 -10T221 -22Q210 -22 200 -19T179 0T168 40Q168 198 265 368Q285 400 349 489L395 552H302Q128 552 119 546Q113 543 108 522T98 479L95 458V455H55V458Z" transform="translate(500,0)"></path><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z" transform="translate(1000,0)"></path><path data-c="35" d="M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z" transform="translate(1278,0)"></path></g></g></g>',1)]))),a[16]||(a[16]=s("mjx-assistive-mml",{unselectable:"on",display:"block"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[s("mfrac",null,[s("mn",null,"1"),s("mn",null,"2")]),s("mo",{stretchy:"false"},"["),s("mo",{stretchy:"false"},"("),s("mn",null,"1"),s("mo",null,"+"),s("mn",null,"2"),s("mo",{stretchy:"false"},")"),s("mo",null,"×"),s("mn",null,"1"),s("mo",null,"+"),s("mo",{stretchy:"false"},"("),s("mn",null,"2"),s("mo",null,"+"),s("mn",null,"5"),s("mo",{stretchy:"false"},")"),s("mo",null,"×"),s("mn",null,"1"),s("mo",null,"+"),s("mo",{stretchy:"false"},"("),s("mn",null,"5"),s("mo",null,"+"),s("mn",null,"6"),s("mo",{stretchy:"false"},")"),s("mo",null,"×"),s("mn",null,"1"),s("mo",null,"+"),s("mo",{stretchy:"false"},"("),s("mn",null,"6"),s("mo",null,"+"),s("mn",null,"7"),s("mo",{stretchy:"false"},")"),s("mo",null,"×"),s("mn",null,"1"),s("mo",null,"+"),s("mo",{stretchy:"false"},"("),s("mn",null,"7"),s("mo",null,"+"),s("mn",null,"8"),s("mo",{stretchy:"false"},")"),s("mo",null,"×"),s("mn",null,"3"),s("mo",null,"+"),s("mo",{stretchy:"false"},"("),s("mn",null,"8"),s("mo",null,"+"),s("mn",null,"10"),s("mo",{stretchy:"false"},")"),s("mo",null,"×"),s("mn",null,"2"),s("mo",{stretchy:"false"},"]"),s("mo",null,"="),s("mn",null,"57.5")])],-1))]),a[48]||(a[48]=l(`<h5 id="指定时间单位" tabindex="-1"><a class="header-anchor" href="#指定时间单位"><span>指定时间单位</span></a></h5><p>指定以分钟为时间单位。</p><p>输入序列同上，用于查询的 SQL 语句如下：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">select</span><span style="color:#ABB2BF;"> integral(s1, </span><span style="color:#98C379;">&quot;unit&quot;</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;1m&quot;</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">test</span><span style="color:#ABB2BF;">.d1 </span><span style="color:#C678DD;">where</span><span style="color:#C678DD;"> time</span><span style="color:#56B6C2;"> &lt;=</span><span style="color:#D19A66;"> 2020</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">01</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">01</span><span style="color:#D19A66;"> 00</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">10</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>输出序列：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+-------------------------+</span></span>
<span class="line"><span>|                         Time|integral(root.test.d1.s1)|</span></span>
<span class="line"><span>+-----------------------------+-------------------------+</span></span>
<span class="line"><span>|1970-01-01T08:00:00.000+08:00|                    0.958|</span></span>
<span class="line"><span>+-----------------------------+-------------------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其计算公式为：</p>`,7)),s("mjx-container",u,[(p(),e("svg",h,a[17]||(a[17]=[l('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mfrac"><g data-mml-node="mn" transform="translate(1331.2,676)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mrow" transform="translate(220,-686)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mo" transform="translate(722.2,0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="mn" transform="translate(1722.4,0)"><path data-c="36" d="M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(500,0)"></path></g></g><rect width="2922.4" height="60" x="120" y="220"></rect></g><g data-mml-node="mo" transform="translate(3162.4,0)"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path></g><g data-mml-node="mo" transform="translate(3440.4,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(3829.4,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(4551.7,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(5551.9,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mo" transform="translate(6051.9,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(6663.1,0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="mn" transform="translate(7663.3,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(8385.6,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mo" transform="translate(9385.8,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(9774.8,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mo" transform="translate(10497,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(11497.2,0)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></g><g data-mml-node="mo" transform="translate(11997.2,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(12608.4,0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="mn" transform="translate(13608.7,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(14330.9,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mo" transform="translate(15331.1,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(15720.1,0)"><path data-c="35" d="M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z"></path></g><g data-mml-node="mo" transform="translate(16442.3,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(17442.6,0)"><path data-c="36" d="M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z"></path></g><g data-mml-node="mo" transform="translate(17942.6,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(18553.8,0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="mn" transform="translate(19554,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(20276.2,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mo" transform="translate(21276.4,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(21665.4,0)"><path data-c="36" d="M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z"></path></g><g data-mml-node="mo" transform="translate(22387.7,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(23387.9,0)"><path data-c="37" d="M55 458Q56 460 72 567L88 674Q88 676 108 676H128V672Q128 662 143 655T195 646T364 644H485V605L417 512Q408 500 387 472T360 435T339 403T319 367T305 330T292 284T284 230T278 162T275 80Q275 66 275 52T274 28V19Q270 2 255 -10T221 -22Q210 -22 200 -19T179 0T168 40Q168 198 265 368Q285 400 349 489L395 552H302Q128 552 119 546Q113 543 108 522T98 479L95 458V455H55V458Z"></path></g><g data-mml-node="mo" transform="translate(23887.9,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(24499.1,0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="mn" transform="translate(25499.3,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(26221.6,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mo" transform="translate(27221.8,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(27610.8,0)"><path data-c="37" d="M55 458Q56 460 72 567L88 674Q88 676 108 676H128V672Q128 662 143 655T195 646T364 644H485V605L417 512Q408 500 387 472T360 435T339 403T319 367T305 330T292 284T284 230T278 162T275 80Q275 66 275 52T274 28V19Q270 2 255 -10T221 -22Q210 -22 200 -19T179 0T168 40Q168 198 265 368Q285 400 349 489L395 552H302Q128 552 119 546Q113 543 108 522T98 479L95 458V455H55V458Z"></path></g><g data-mml-node="mo" transform="translate(28333,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(29333.2,0)"><path data-c="38" d="M70 417T70 494T124 618T248 666Q319 666 374 624T429 515Q429 485 418 459T392 417T361 389T335 371T324 363L338 354Q352 344 366 334T382 323Q457 264 457 174Q457 95 399 37T249 -22Q159 -22 101 29T43 155Q43 263 172 335L154 348Q133 361 127 368Q70 417 70 494ZM286 386L292 390Q298 394 301 396T311 403T323 413T334 425T345 438T355 454T364 471T369 491T371 513Q371 556 342 586T275 624Q268 625 242 625Q201 625 165 599T128 534Q128 511 141 492T167 463T217 431Q224 426 228 424L286 386ZM250 21Q308 21 350 55T392 137Q392 154 387 169T375 194T353 216T330 234T301 253T274 270Q260 279 244 289T218 306L210 311Q204 311 181 294T133 239T107 157Q107 98 150 60T250 21Z"></path></g><g data-mml-node="mo" transform="translate(29833.2,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(30444.4,0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="mn" transform="translate(31444.7,0)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></g><g data-mml-node="mo" transform="translate(32166.9,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mo" transform="translate(33167.1,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(33556.1,0)"><path data-c="38" d="M70 417T70 494T124 618T248 666Q319 666 374 624T429 515Q429 485 418 459T392 417T361 389T335 371T324 363L338 354Q352 344 366 334T382 323Q457 264 457 174Q457 95 399 37T249 -22Q159 -22 101 29T43 155Q43 263 172 335L154 348Q133 361 127 368Q70 417 70 494ZM286 386L292 390Q298 394 301 396T311 403T323 413T334 425T345 438T355 454T364 471T369 491T371 513Q371 556 342 586T275 624Q268 625 242 625Q201 625 165 599T128 534Q128 511 141 492T167 463T217 431Q224 426 228 424L286 386ZM250 21Q308 21 350 55T392 137Q392 154 387 169T375 194T353 216T330 234T301 253T274 270Q260 279 244 289T218 306L210 311Q204 311 181 294T133 239T107 157Q107 98 150 60T250 21Z"></path></g><g data-mml-node="mo" transform="translate(34278.3,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(35278.6,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(500,0)"></path></g><g data-mml-node="mo" transform="translate(36278.6,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(36889.8,0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="mn" transform="translate(37890,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mo" transform="translate(38390,0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path></g><g data-mml-node="mo" transform="translate(38945.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(40001.6,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z" transform="translate(500,0)"></path><path data-c="39" d="M352 287Q304 211 232 211Q154 211 104 270T44 396Q42 412 42 436V444Q42 537 111 606Q171 666 243 666Q245 666 249 666T257 665H261Q273 665 286 663T323 651T370 619T413 560Q456 472 456 334Q456 194 396 97Q361 41 312 10T208 -22Q147 -22 108 7T68 93T121 149Q143 149 158 135T173 96Q173 78 164 65T148 49T135 44L131 43Q131 41 138 37T164 27T206 22H212Q272 22 313 86Q352 142 352 280V287ZM244 248Q292 248 321 297T351 430Q351 508 343 542Q341 552 337 562T323 588T293 615T246 625Q208 625 181 598Q160 576 154 546T147 441Q147 358 152 329T172 282Q197 248 244 248Z" transform="translate(778,0)"></path><path data-c="35" d="M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z" transform="translate(1278,0)"></path><path data-c="38" d="M70 417T70 494T124 618T248 666Q319 666 374 624T429 515Q429 485 418 459T392 417T361 389T335 371T324 363L338 354Q352 344 366 334T382 323Q457 264 457 174Q457 95 399 37T249 -22Q159 -22 101 29T43 155Q43 263 172 335L154 348Q133 361 127 368Q70 417 70 494ZM286 386L292 390Q298 394 301 396T311 403T323 413T334 425T345 438T355 454T364 471T369 491T371 513Q371 556 342 586T275 624Q268 625 242 625Q201 625 165 599T128 534Q128 511 141 492T167 463T217 431Q224 426 228 424L286 386ZM250 21Q308 21 350 55T392 137Q392 154 387 169T375 194T353 216T330 234T301 253T274 270Q260 279 244 289T218 306L210 311Q204 311 181 294T133 239T107 157Q107 98 150 60T250 21Z" transform="translate(1778,0)"></path></g></g></g>',1)]))),a[18]||(a[18]=s("mjx-assistive-mml",{unselectable:"on",display:"block"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[s("mfrac",null,[s("mn",null,"1"),s("mrow",null,[s("mn",null,"2"),s("mo",null,"×"),s("mn",null,"60")])]),s("mo",{stretchy:"false"},"["),s("mo",{stretchy:"false"},"("),s("mn",null,"1"),s("mo",null,"+"),s("mn",null,"2"),s("mo",{stretchy:"false"},")"),s("mo",null,"×"),s("mn",null,"1"),s("mo",null,"+"),s("mo",{stretchy:"false"},"("),s("mn",null,"2"),s("mo",null,"+"),s("mn",null,"3"),s("mo",{stretchy:"false"},")"),s("mo",null,"×"),s("mn",null,"1"),s("mo",null,"+"),s("mo",{stretchy:"false"},"("),s("mn",null,"5"),s("mo",null,"+"),s("mn",null,"6"),s("mo",{stretchy:"false"},")"),s("mo",null,"×"),s("mn",null,"1"),s("mo",null,"+"),s("mo",{stretchy:"false"},"("),s("mn",null,"6"),s("mo",null,"+"),s("mn",null,"7"),s("mo",{stretchy:"false"},")"),s("mo",null,"×"),s("mn",null,"1"),s("mo",null,"+"),s("mo",{stretchy:"false"},"("),s("mn",null,"7"),s("mo",null,"+"),s("mn",null,"8"),s("mo",{stretchy:"false"},")"),s("mo",null,"×"),s("mn",null,"3"),s("mo",null,"+"),s("mo",{stretchy:"false"},"("),s("mn",null,"8"),s("mo",null,"+"),s("mn",null,"10"),s("mo",{stretchy:"false"},")"),s("mo",null,"×"),s("mn",null,"2"),s("mo",{stretchy:"false"},"]"),s("mo",null,"="),s("mn",null,"0.958")])],-1))]),a[49]||(a[49]=l(`<h3 id="integralavg" tabindex="-1"><a class="header-anchor" href="#integralavg"><span>IntegralAvg</span></a></h3><h4 id="函数简介-4" tabindex="-1"><a class="header-anchor" href="#函数简介-4"><span>函数简介</span></a></h4><p>本函数用于计算时间序列的函数均值，即在相同时间单位下的数值积分除以序列总的时间跨度。更多关于数值积分计算的信息请参考<code>Integral</code>函数。</p><p><strong>函数名：</strong> INTEGRALAVG</p><p><strong>输入序列：</strong> 仅支持单个输入序列，类型为 INT32 / INT64 / FLOAT / DOUBLE。</p><p><strong>输出序列：</strong> 输出单个序列，类型为 DOUBLE，序列仅包含一个时间戳为 0、值为时间加权平均结果的数据点。</p><p><strong>提示：</strong></p><ul><li><p>时间加权的平均值等于在任意时间单位<code>unit</code>下计算的数值积分（即折线图中每相邻两个数据点和时间轴形成的直角梯形的面积之和），<br> 除以相同时间单位下输入序列的时间跨度，其值与具体采用的时间单位无关，默认与 IoTDB 时间单位一致。</p></li><li><p>数据中的<code>NaN</code>将会被忽略。折线将以临近两个有值数据点为准。</p></li><li><p>输入序列为空时，函数输出结果为 0；仅有一个数据点时，输出结果为该点数值。</p></li></ul><h4 id="使用示例-4" tabindex="-1"><a class="header-anchor" href="#使用示例-4"><span>使用示例</span></a></h4><p>输入序列：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+---------------+</span></span>
<span class="line"><span>|                         Time|root.test.d1.s1|</span></span>
<span class="line"><span>+-----------------------------+---------------+</span></span>
<span class="line"><span>|2020-01-01T00:00:01.000+08:00|              1|</span></span>
<span class="line"><span>|2020-01-01T00:00:02.000+08:00|              2|</span></span>
<span class="line"><span>|2020-01-01T00:00:03.000+08:00|              5|</span></span>
<span class="line"><span>|2020-01-01T00:00:04.000+08:00|              6|</span></span>
<span class="line"><span>|2020-01-01T00:00:05.000+08:00|              7|</span></span>
<span class="line"><span>|2020-01-01T00:00:08.000+08:00|              8|</span></span>
<span class="line"><span>|2020-01-01T00:00:09.000+08:00|            NaN|</span></span>
<span class="line"><span>|2020-01-01T00:00:10.000+08:00|             10|</span></span>
<span class="line"><span>+-----------------------------+---------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>用于查询的 SQL 语句：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">select</span><span style="color:#ABB2BF;"> integralavg(s1) </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">test</span><span style="color:#ABB2BF;">.d1 </span><span style="color:#C678DD;">where</span><span style="color:#C678DD;"> time</span><span style="color:#56B6C2;"> &lt;=</span><span style="color:#D19A66;"> 2020</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">01</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">01</span><span style="color:#D19A66;"> 00</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">10</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>输出序列：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+----------------------------+</span></span>
<span class="line"><span>|                         Time|integralavg(root.test.d1.s1)|</span></span>
<span class="line"><span>+-----------------------------+----------------------------+</span></span>
<span class="line"><span>|1970-01-01T08:00:00.000+08:00|                        5.75|</span></span>
<span class="line"><span>+-----------------------------+----------------------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其计算公式为：</p>`,16)),s("mjx-container",b,[(p(),e("svg",g,a[19]||(a[19]=[l('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mfrac"><g data-mml-node="mn" transform="translate(220,676)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mn" transform="translate(220,-686)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><rect width="700" height="60" x="120" y="220"></rect></g><g data-mml-node="mo" transform="translate(940,0)"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path></g><g data-mml-node="mo" transform="translate(1218,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(1607,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(2329.2,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(3329.4,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mo" transform="translate(3829.4,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(4440.7,0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="mn" transform="translate(5440.9,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(6163.1,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mo" transform="translate(7163.3,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(7552.3,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mo" transform="translate(8274.6,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(9274.8,0)"><path data-c="35" d="M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z"></path></g><g data-mml-node="mo" transform="translate(9774.8,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(10386,0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="mn" transform="translate(11386.2,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(12108.4,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mo" transform="translate(13108.7,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(13497.7,0)"><path data-c="35" d="M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z"></path></g><g data-mml-node="mo" transform="translate(14219.9,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(15220.1,0)"><path data-c="36" d="M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z"></path></g><g data-mml-node="mo" transform="translate(15720.1,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(16331.3,0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="mn" transform="translate(17331.6,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(18053.8,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mo" transform="translate(19054,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(19443,0)"><path data-c="36" d="M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z"></path></g><g data-mml-node="mo" transform="translate(20165.2,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(21165.4,0)"><path data-c="37" d="M55 458Q56 460 72 567L88 674Q88 676 108 676H128V672Q128 662 143 655T195 646T364 644H485V605L417 512Q408 500 387 472T360 435T339 403T319 367T305 330T292 284T284 230T278 162T275 80Q275 66 275 52T274 28V19Q270 2 255 -10T221 -22Q210 -22 200 -19T179 0T168 40Q168 198 265 368Q285 400 349 489L395 552H302Q128 552 119 546Q113 543 108 522T98 479L95 458V455H55V458Z"></path></g><g data-mml-node="mo" transform="translate(21665.4,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(22276.7,0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="mn" transform="translate(23276.9,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(23999.1,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mo" transform="translate(24999.3,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(25388.3,0)"><path data-c="37" d="M55 458Q56 460 72 567L88 674Q88 676 108 676H128V672Q128 662 143 655T195 646T364 644H485V605L417 512Q408 500 387 472T360 435T339 403T319 367T305 330T292 284T284 230T278 162T275 80Q275 66 275 52T274 28V19Q270 2 255 -10T221 -22Q210 -22 200 -19T179 0T168 40Q168 198 265 368Q285 400 349 489L395 552H302Q128 552 119 546Q113 543 108 522T98 479L95 458V455H55V458Z"></path></g><g data-mml-node="mo" transform="translate(26110.6,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(27110.8,0)"><path data-c="38" d="M70 417T70 494T124 618T248 666Q319 666 374 624T429 515Q429 485 418 459T392 417T361 389T335 371T324 363L338 354Q352 344 366 334T382 323Q457 264 457 174Q457 95 399 37T249 -22Q159 -22 101 29T43 155Q43 263 172 335L154 348Q133 361 127 368Q70 417 70 494ZM286 386L292 390Q298 394 301 396T311 403T323 413T334 425T345 438T355 454T364 471T369 491T371 513Q371 556 342 586T275 624Q268 625 242 625Q201 625 165 599T128 534Q128 511 141 492T167 463T217 431Q224 426 228 424L286 386ZM250 21Q308 21 350 55T392 137Q392 154 387 169T375 194T353 216T330 234T301 253T274 270Q260 279 244 289T218 306L210 311Q204 311 181 294T133 239T107 157Q107 98 150 60T250 21Z"></path></g><g data-mml-node="mo" transform="translate(27610.8,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(28222,0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="mn" transform="translate(29222.2,0)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></g><g data-mml-node="mo" transform="translate(29944.4,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mo" transform="translate(30944.7,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(31333.7,0)"><path data-c="38" d="M70 417T70 494T124 618T248 666Q319 666 374 624T429 515Q429 485 418 459T392 417T361 389T335 371T324 363L338 354Q352 344 366 334T382 323Q457 264 457 174Q457 95 399 37T249 -22Q159 -22 101 29T43 155Q43 263 172 335L154 348Q133 361 127 368Q70 417 70 494ZM286 386L292 390Q298 394 301 396T311 403T323 413T334 425T345 438T355 454T364 471T369 491T371 513Q371 556 342 586T275 624Q268 625 242 625Q201 625 165 599T128 534Q128 511 141 492T167 463T217 431Q224 426 228 424L286 386ZM250 21Q308 21 350 55T392 137Q392 154 387 169T375 194T353 216T330 234T301 253T274 270Q260 279 244 289T218 306L210 311Q204 311 181 294T133 239T107 157Q107 98 150 60T250 21Z"></path></g><g data-mml-node="mo" transform="translate(32055.9,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(33056.1,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(500,0)"></path></g><g data-mml-node="mo" transform="translate(34056.1,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(34667.3,0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="mn" transform="translate(35667.6,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mo" transform="translate(36167.6,0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(36445.6,0)"><g data-mml-node="mo"><path data-c="2F" d="M423 750Q432 750 438 744T444 730Q444 725 271 248T92 -240Q85 -250 75 -250Q68 -250 62 -245T56 -231Q56 -221 230 257T407 740Q411 750 423 750Z"></path></g></g><g data-mml-node="mn" transform="translate(36945.6,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(500,0)"></path></g><g data-mml-node="mo" transform="translate(38223.3,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(39279.1,0)"><path data-c="35" d="M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z"></path><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z" transform="translate(500,0)"></path><path data-c="37" d="M55 458Q56 460 72 567L88 674Q88 676 108 676H128V672Q128 662 143 655T195 646T364 644H485V605L417 512Q408 500 387 472T360 435T339 403T319 367T305 330T292 284T284 230T278 162T275 80Q275 66 275 52T274 28V19Q270 2 255 -10T221 -22Q210 -22 200 -19T179 0T168 40Q168 198 265 368Q285 400 349 489L395 552H302Q128 552 119 546Q113 543 108 522T98 479L95 458V455H55V458Z" transform="translate(778,0)"></path><path data-c="35" d="M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z" transform="translate(1278,0)"></path></g></g></g>',1)]))),a[20]||(a[20]=s("mjx-assistive-mml",{unselectable:"on",display:"block"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[s("mfrac",null,[s("mn",null,"1"),s("mn",null,"2")]),s("mo",{stretchy:"false"},"["),s("mo",{stretchy:"false"},"("),s("mn",null,"1"),s("mo",null,"+"),s("mn",null,"2"),s("mo",{stretchy:"false"},")"),s("mo",null,"×"),s("mn",null,"1"),s("mo",null,"+"),s("mo",{stretchy:"false"},"("),s("mn",null,"2"),s("mo",null,"+"),s("mn",null,"5"),s("mo",{stretchy:"false"},")"),s("mo",null,"×"),s("mn",null,"1"),s("mo",null,"+"),s("mo",{stretchy:"false"},"("),s("mn",null,"5"),s("mo",null,"+"),s("mn",null,"6"),s("mo",{stretchy:"false"},")"),s("mo",null,"×"),s("mn",null,"1"),s("mo",null,"+"),s("mo",{stretchy:"false"},"("),s("mn",null,"6"),s("mo",null,"+"),s("mn",null,"7"),s("mo",{stretchy:"false"},")"),s("mo",null,"×"),s("mn",null,"1"),s("mo",null,"+"),s("mo",{stretchy:"false"},"("),s("mn",null,"7"),s("mo",null,"+"),s("mn",null,"8"),s("mo",{stretchy:"false"},")"),s("mo",null,"×"),s("mn",null,"3"),s("mo",null,"+"),s("mo",{stretchy:"false"},"("),s("mn",null,"8"),s("mo",null,"+"),s("mn",null,"10"),s("mo",{stretchy:"false"},")"),s("mo",null,"×"),s("mn",null,"2"),s("mo",{stretchy:"false"},"]"),s("mrow",{"data-mjx-texclass":"ORD"},[s("mo",null,"/")]),s("mn",null,"10"),s("mo",null,"="),s("mn",null,"5.75")])],-1))]),a[50]||(a[50]=s("h3",{id:"mad",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#mad"},[s("span",null,"Mad")])],-1)),a[51]||(a[51]=s("h4",{id:"函数简介-5",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#函数简介-5"},[s("span",null,"函数简介")])],-1)),a[52]||(a[52]=s("p",null,"本函数用于计算单列数值型数据的精确或近似绝对中位差，绝对中位差为所有数值与其中位数绝对偏移量的中位数。",-1)),s("p",null,[a[25]||(a[25]=n("如有数据集")),s("mjx-container",H,[(p(),e("svg",L,a[21]||(a[21]=[l('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="7B" d="M434 -231Q434 -244 428 -250H410Q281 -250 230 -184Q225 -177 222 -172T217 -161T213 -148T211 -133T210 -111T209 -84T209 -47T209 0Q209 21 209 53Q208 142 204 153Q203 154 203 155Q189 191 153 211T82 231Q71 231 68 234T65 250T68 266T82 269Q116 269 152 289T203 345Q208 356 208 377T209 529V579Q209 634 215 656T244 698Q270 724 324 740Q361 748 377 749Q379 749 390 749T408 750H428Q434 744 434 732Q434 719 431 716Q429 713 415 713Q362 710 332 689T296 647Q291 634 291 499V417Q291 370 288 353T271 314Q240 271 184 255L170 250L184 245Q202 239 220 230T262 196T290 137Q291 131 291 1Q291 -134 296 -147Q306 -174 339 -192T415 -213Q429 -213 431 -216Q434 -219 434 -231Z"></path></g><g data-mml-node="mn" transform="translate(500,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(1000,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mn" transform="translate(1444.7,0)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></g><g data-mml-node="mo" transform="translate(1944.7,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mn" transform="translate(2389.3,0)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></g><g data-mml-node="mo" transform="translate(2889.3,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mn" transform="translate(3334,0)"><path data-c="35" d="M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z"></path></g><g data-mml-node="mo" transform="translate(3834,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mn" transform="translate(4278.7,0)"><path data-c="35" d="M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z"></path></g><g data-mml-node="mo" transform="translate(4778.7,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mn" transform="translate(5223.3,0)"><path data-c="36" d="M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z"></path></g><g data-mml-node="mo" transform="translate(5723.3,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mn" transform="translate(6168,0)"><path data-c="37" d="M55 458Q56 460 72 567L88 674Q88 676 108 676H128V672Q128 662 143 655T195 646T364 644H485V605L417 512Q408 500 387 472T360 435T339 403T319 367T305 330T292 284T284 230T278 162T275 80Q275 66 275 52T274 28V19Q270 2 255 -10T221 -22Q210 -22 200 -19T179 0T168 40Q168 198 265 368Q285 400 349 489L395 552H302Q128 552 119 546Q113 543 108 522T98 479L95 458V455H55V458Z"></path></g><g data-mml-node="mo" transform="translate(6668,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mn" transform="translate(7112.7,0)"><path data-c="38" d="M70 417T70 494T124 618T248 666Q319 666 374 624T429 515Q429 485 418 459T392 417T361 389T335 371T324 363L338 354Q352 344 366 334T382 323Q457 264 457 174Q457 95 399 37T249 -22Q159 -22 101 29T43 155Q43 263 172 335L154 348Q133 361 127 368Q70 417 70 494ZM286 386L292 390Q298 394 301 396T311 403T323 413T334 425T345 438T355 454T364 471T369 491T371 513Q371 556 342 586T275 624Q268 625 242 625Q201 625 165 599T128 534Q128 511 141 492T167 463T217 431Q224 426 228 424L286 386ZM250 21Q308 21 350 55T392 137Q392 154 387 169T375 194T353 216T330 234T301 253T274 270Q260 279 244 289T218 306L210 311Q204 311 181 294T133 239T107 157Q107 98 150 60T250 21Z"></path></g><g data-mml-node="mo" transform="translate(7612.7,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mn" transform="translate(8057.3,0)"><path data-c="39" d="M352 287Q304 211 232 211Q154 211 104 270T44 396Q42 412 42 436V444Q42 537 111 606Q171 666 243 666Q245 666 249 666T257 665H261Q273 665 286 663T323 651T370 619T413 560Q456 472 456 334Q456 194 396 97Q361 41 312 10T208 -22Q147 -22 108 7T68 93T121 149Q143 149 158 135T173 96Q173 78 164 65T148 49T135 44L131 43Q131 41 138 37T164 27T206 22H212Q272 22 313 86Q352 142 352 280V287ZM244 248Q292 248 321 297T351 430Q351 508 343 542Q341 552 337 562T323 588T293 615T246 625Q208 625 181 598Q160 576 154 546T147 441Q147 358 152 329T172 282Q197 248 244 248Z"></path></g><g data-mml-node="mo" transform="translate(8557.3,0)"><path data-c="7D" d="M65 731Q65 745 68 747T88 750Q171 750 216 725T279 670Q288 649 289 635T291 501Q292 362 293 357Q306 312 345 291T417 269Q428 269 431 266T434 250T431 234T417 231Q380 231 345 210T298 157Q293 143 292 121T291 -28V-79Q291 -134 285 -156T256 -198Q202 -250 89 -250Q71 -250 68 -247T65 -230Q65 -224 65 -223T66 -218T69 -214T77 -213Q91 -213 108 -210T146 -200T183 -177T207 -139Q208 -134 209 3L210 139Q223 196 280 230Q315 247 330 250Q305 257 280 270Q225 304 212 352L210 362L209 498Q208 635 207 640Q195 680 154 696T77 713Q68 713 67 716T65 731Z"></path></g></g></g>',1)]))),a[22]||(a[22]=s("mjx-assistive-mml",{unselectable:"on",display:"inline"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("mo",{fence:"false",stretchy:"false"},"{"),s("mn",null,"1"),s("mo",null,","),s("mn",null,"3"),s("mo",null,","),s("mn",null,"3"),s("mo",null,","),s("mn",null,"5"),s("mo",null,","),s("mn",null,"5"),s("mo",null,","),s("mn",null,"6"),s("mo",null,","),s("mn",null,"7"),s("mo",null,","),s("mn",null,"8"),s("mo",null,","),s("mn",null,"9"),s("mo",{fence:"false",stretchy:"false"},"}")])],-1))]),a[26]||(a[26]=n("，其中位数为5，所有数值与中位数的偏移量的绝对值为")),s("mjx-container",V,[(p(),e("svg",f,a[23]||(a[23]=[l('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="7B" d="M434 -231Q434 -244 428 -250H410Q281 -250 230 -184Q225 -177 222 -172T217 -161T213 -148T211 -133T210 -111T209 -84T209 -47T209 0Q209 21 209 53Q208 142 204 153Q203 154 203 155Q189 191 153 211T82 231Q71 231 68 234T65 250T68 266T82 269Q116 269 152 289T203 345Q208 356 208 377T209 529V579Q209 634 215 656T244 698Q270 724 324 740Q361 748 377 749Q379 749 390 749T408 750H428Q434 744 434 732Q434 719 431 716Q429 713 415 713Q362 710 332 689T296 647Q291 634 291 499V417Q291 370 288 353T271 314Q240 271 184 255L170 250L184 245Q202 239 220 230T262 196T290 137Q291 131 291 1Q291 -134 296 -147Q306 -174 339 -192T415 -213Q429 -213 431 -216Q434 -219 434 -231Z"></path></g><g data-mml-node="mn" transform="translate(500,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g><g data-mml-node="mo" transform="translate(1000,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mn" transform="translate(1444.7,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g><g data-mml-node="mo" transform="translate(1944.7,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mn" transform="translate(2389.3,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(2889.3,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mn" transform="translate(3334,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mo" transform="translate(3834,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mn" transform="translate(4278.7,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mo" transform="translate(4778.7,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mn" transform="translate(5223.3,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mo" transform="translate(5723.3,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mn" transform="translate(6168,0)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></g><g data-mml-node="mo" transform="translate(6668,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mn" transform="translate(7112.7,0)"><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z"></path></g><g data-mml-node="mo" transform="translate(7612.7,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mn" transform="translate(8057.3,0)"><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z"></path></g><g data-mml-node="mo" transform="translate(8557.3,0)"><path data-c="7D" d="M65 731Q65 745 68 747T88 750Q171 750 216 725T279 670Q288 649 289 635T291 501Q292 362 293 357Q306 312 345 291T417 269Q428 269 431 266T434 250T431 234T417 231Q380 231 345 210T298 157Q293 143 292 121T291 -28V-79Q291 -134 285 -156T256 -198Q202 -250 89 -250Q71 -250 68 -247T65 -230Q65 -224 65 -223T66 -218T69 -214T77 -213Q91 -213 108 -210T146 -200T183 -177T207 -139Q208 -134 209 3L210 139Q223 196 280 230Q315 247 330 250Q305 257 280 270Q225 304 212 352L210 362L209 498Q208 635 207 640Q195 680 154 696T77 713Q68 713 67 716T65 731Z"></path></g></g></g>',1)]))),a[24]||(a[24]=s("mjx-assistive-mml",{unselectable:"on",display:"inline"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("mo",{fence:"false",stretchy:"false"},"{"),s("mn",null,"0"),s("mo",null,","),s("mn",null,"0"),s("mo",null,","),s("mn",null,"1"),s("mo",null,","),s("mn",null,"2"),s("mo",null,","),s("mn",null,"2"),s("mo",null,","),s("mn",null,"2"),s("mo",null,","),s("mn",null,"3"),s("mo",null,","),s("mn",null,"4"),s("mo",null,","),s("mn",null,"4"),s("mo",{fence:"false",stretchy:"false"},"}")])],-1))]),a[27]||(a[27]=n("，其中位数为2，故而原数据集的绝对中位差为2。"))]),a[53]||(a[53]=s("p",null,[s("strong",null,"函数名："),n(" MAD")],-1)),a[54]||(a[54]=s("p",null,[s("strong",null,"输入序列："),n(" 仅支持单个输入序列，类型为 INT32 / INT64 / FLOAT / DOUBLE。")],-1)),a[55]||(a[55]=s("p",null,[s("strong",null,"参数：")],-1)),s("ul",null,[s("li",null,[a[30]||(a[30]=s("code",null,"error",-1)),a[31]||(a[31]=n("：近似绝对中位差的基于数值的误差百分比，取值范围为 [0,1)，默认值为 0。如当")),a[32]||(a[32]=s("code",null,"error",-1)),a[33]||(a[33]=n("=0.01 时，记精确绝对中位差为a，近似绝对中位差为b，不等式 ")),s("mjx-container",y,[(p(),e("svg",B,a[28]||(a[28]=[l('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mn"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z" transform="translate(500,0)"></path><path data-c="39" d="M352 287Q304 211 232 211Q154 211 104 270T44 396Q42 412 42 436V444Q42 537 111 606Q171 666 243 666Q245 666 249 666T257 665H261Q273 665 286 663T323 651T370 619T413 560Q456 472 456 334Q456 194 396 97Q361 41 312 10T208 -22Q147 -22 108 7T68 93T121 149Q143 149 158 135T173 96Q173 78 164 65T148 49T135 44L131 43Q131 41 138 37T164 27T206 22H212Q272 22 313 86Q352 142 352 280V287ZM244 248Q292 248 321 297T351 430Q351 508 343 542Q341 552 337 562T323 588T293 615T246 625Q208 625 181 598Q160 576 154 546T147 441Q147 358 152 329T172 282Q197 248 244 248Z" transform="translate(778,0)"></path><path data-c="39" d="M352 287Q304 211 232 211Q154 211 104 270T44 396Q42 412 42 436V444Q42 537 111 606Q171 666 243 666Q245 666 249 666T257 665H261Q273 665 286 663T323 651T370 619T413 560Q456 472 456 334Q456 194 396 97Q361 41 312 10T208 -22Q147 -22 108 7T68 93T121 149Q143 149 158 135T173 96Q173 78 164 65T148 49T135 44L131 43Q131 41 138 37T164 27T206 22H212Q272 22 313 86Q352 142 352 280V287ZM244 248Q292 248 321 297T351 430Q351 508 343 542Q341 552 337 562T323 588T293 615T246 625Q208 625 181 598Q160 576 154 546T147 441Q147 358 152 329T172 282Q197 248 244 248Z" transform="translate(1278,0)"></path></g><g data-mml-node="mi" transform="translate(1778,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mo" transform="translate(2584.8,0)"><path data-c="2264" d="M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z"></path></g><g data-mml-node="mi" transform="translate(3640.6,0)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g><g data-mml-node="mo" transform="translate(4347.3,0)"><path data-c="2264" d="M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z"></path></g><g data-mml-node="mn" transform="translate(5403.1,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z" transform="translate(500,0)"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(778,0)"></path><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" transform="translate(1278,0)"></path></g><g data-mml-node="mi" transform="translate(7181.1,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g></g></g>',1)]))),a[29]||(a[29]=s("mjx-assistive-mml",{unselectable:"on",display:"inline"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("mn",null,"0.99"),s("mi",null,"a"),s("mo",null,"≤"),s("mi",null,"b"),s("mo",null,"≤"),s("mn",null,"1.01"),s("mi",null,"a")])],-1))]),a[34]||(a[34]=n(" 成立。当")),a[35]||(a[35]=s("code",null,"error",-1)),a[36]||(a[36]=n("=0 时，计算结果为精确绝对中位差。"))])]),a[56]||(a[56]=l(`<p><strong>输出序列：</strong> 输出单个序列，类型为DOUBLE，序列仅包含一个时间戳为 0、值为绝对中位差的数据点。</p><p><strong>提示：</strong> 数据中的空值、缺失值和<code>NaN</code>将会被忽略。</p><h4 id="使用示例-5" tabindex="-1"><a class="header-anchor" href="#使用示例-5"><span>使用示例</span></a></h4><h5 id="精确查询" tabindex="-1"><a class="header-anchor" href="#精确查询"><span>精确查询</span></a></h5><p>当<code>error</code>参数缺省或为0时，本函数计算精确绝对中位差。</p><p>输入序列：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+------------+</span></span>
<span class="line"><span>|                         Time|root.test.s0|</span></span>
<span class="line"><span>+-----------------------------+------------+</span></span>
<span class="line"><span>|2021-03-17T10:32:17.054+08:00|   0.5319929|</span></span>
<span class="line"><span>|2021-03-17T10:32:18.054+08:00|   0.9304316|</span></span>
<span class="line"><span>|2021-03-17T10:32:19.054+08:00|  -1.4800133|</span></span>
<span class="line"><span>|2021-03-17T10:32:20.054+08:00|   0.6114087|</span></span>
<span class="line"><span>|2021-03-17T10:32:21.054+08:00|   2.5163336|</span></span>
<span class="line"><span>|2021-03-17T10:32:22.054+08:00|  -1.0845392|</span></span>
<span class="line"><span>|2021-03-17T10:32:23.054+08:00|   1.0562582|</span></span>
<span class="line"><span>|2021-03-17T10:32:24.054+08:00|   1.3867859|</span></span>
<span class="line"><span>|2021-03-17T10:32:25.054+08:00| -0.45429882|</span></span>
<span class="line"><span>|2021-03-17T10:32:26.054+08:00|   1.0353678|</span></span>
<span class="line"><span>|2021-03-17T10:32:27.054+08:00|   0.7307929|</span></span>
<span class="line"><span>|2021-03-17T10:32:28.054+08:00|   2.3167255|</span></span>
<span class="line"><span>|2021-03-17T10:32:29.054+08:00|    2.342443|</span></span>
<span class="line"><span>|2021-03-17T10:32:30.054+08:00|   1.5809103|</span></span>
<span class="line"><span>|2021-03-17T10:32:31.054+08:00|   1.4829416|</span></span>
<span class="line"><span>|2021-03-17T10:32:32.054+08:00|   1.5800357|</span></span>
<span class="line"><span>|2021-03-17T10:32:33.054+08:00|   0.7124368|</span></span>
<span class="line"><span>|2021-03-17T10:32:34.054+08:00| -0.78597564|</span></span>
<span class="line"><span>|2021-03-17T10:32:35.054+08:00|   1.2058644|</span></span>
<span class="line"><span>|2021-03-17T10:32:36.054+08:00|   1.4215064|</span></span>
<span class="line"><span>|2021-03-17T10:32:37.054+08:00|   1.2808295|</span></span>
<span class="line"><span>|2021-03-17T10:32:38.054+08:00|  -0.6173715|</span></span>
<span class="line"><span>|2021-03-17T10:32:39.054+08:00|  0.06644377|</span></span>
<span class="line"><span>|2021-03-17T10:32:40.054+08:00|    2.349338|</span></span>
<span class="line"><span>|2021-03-17T10:32:41.054+08:00|   1.7335888|</span></span>
<span class="line"><span>|2021-03-17T10:32:42.054+08:00|   1.5872132|</span></span>
<span class="line"><span>............</span></span>
<span class="line"><span>Total line number = 10000</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>用于查询的 SQL 语句：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">select</span><span style="color:#ABB2BF;"> mad(s0) </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">test</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>输出序列：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+------------------+</span></span>
<span class="line"><span>|                         Time| mad(root.test.s0)|</span></span>
<span class="line"><span>+-----------------------------+------------------+</span></span>
<span class="line"><span>|1970-01-01T08:00:00.000+08:00|0.6806197166442871|</span></span>
<span class="line"><span>+-----------------------------+------------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="近似查询" tabindex="-1"><a class="header-anchor" href="#近似查询"><span>近似查询</span></a></h5><p>当<code>error</code>参数取值不为 0 时，本函数计算近似绝对中位差。</p><p>输入序列同上，用于查询的 SQL 语句如下：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">select</span><span style="color:#ABB2BF;"> mad(s0, </span><span style="color:#98C379;">&quot;error&quot;</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;0.01&quot;</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">test</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>输出序列：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+---------------------------------+</span></span>
<span class="line"><span>|                         Time|mad(root.test.s0, &quot;error&quot;=&quot;0.01&quot;)|</span></span>
<span class="line"><span>+-----------------------------+---------------------------------+</span></span>
<span class="line"><span>|1970-01-01T08:00:00.000+08:00|               0.6806616245859518|</span></span>
<span class="line"><span>+-----------------------------+---------------------------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="median" tabindex="-1"><a class="header-anchor" href="#median"><span>Median</span></a></h3><h4 id="函数简介-6" tabindex="-1"><a class="header-anchor" href="#函数简介-6"><span>函数简介</span></a></h4><p>本函数用于计算单列数值型数据的精确或近似中位数。中位数是顺序排列的一组数据中居于中间位置的数；当序列有偶数个时，中位数为中间二者的平均数。</p><p><strong>函数名：</strong> MEDIAN</p><p><strong>输入序列：</strong> 仅支持单个输入序列，类型为 INT32 / INT64 / FLOAT / DOUBLE</p><p><strong>参数：</strong></p><ul><li><code>error</code>：近似中位数的基于排名的误差百分比，取值范围 [0,1)，默认值为 0。如当<code>error</code>=0.01 时，计算出的中位数的真实排名百分比在 0.49~0.51 之间。当<code>error</code>=0 时，计算结果为精确中位数。</li></ul><p><strong>输出序列：</strong> 输出单个序列，类型为 DOUBLE，序列仅包含一个时间戳为 0、值为中位数的数据点。</p><h4 id="使用示例-6" tabindex="-1"><a class="header-anchor" href="#使用示例-6"><span>使用示例</span></a></h4><p>输入序列：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+------------+</span></span>
<span class="line"><span>|                         Time|root.test.s0|</span></span>
<span class="line"><span>+-----------------------------+------------+</span></span>
<span class="line"><span>|2021-03-17T10:32:17.054+08:00|   0.5319929|</span></span>
<span class="line"><span>|2021-03-17T10:32:18.054+08:00|   0.9304316|</span></span>
<span class="line"><span>|2021-03-17T10:32:19.054+08:00|  -1.4800133|</span></span>
<span class="line"><span>|2021-03-17T10:32:20.054+08:00|   0.6114087|</span></span>
<span class="line"><span>|2021-03-17T10:32:21.054+08:00|   2.5163336|</span></span>
<span class="line"><span>|2021-03-17T10:32:22.054+08:00|  -1.0845392|</span></span>
<span class="line"><span>|2021-03-17T10:32:23.054+08:00|   1.0562582|</span></span>
<span class="line"><span>|2021-03-17T10:32:24.054+08:00|   1.3867859|</span></span>
<span class="line"><span>|2021-03-17T10:32:25.054+08:00| -0.45429882|</span></span>
<span class="line"><span>|2021-03-17T10:32:26.054+08:00|   1.0353678|</span></span>
<span class="line"><span>|2021-03-17T10:32:27.054+08:00|   0.7307929|</span></span>
<span class="line"><span>|2021-03-17T10:32:28.054+08:00|   2.3167255|</span></span>
<span class="line"><span>|2021-03-17T10:32:29.054+08:00|    2.342443|</span></span>
<span class="line"><span>|2021-03-17T10:32:30.054+08:00|   1.5809103|</span></span>
<span class="line"><span>|2021-03-17T10:32:31.054+08:00|   1.4829416|</span></span>
<span class="line"><span>|2021-03-17T10:32:32.054+08:00|   1.5800357|</span></span>
<span class="line"><span>|2021-03-17T10:32:33.054+08:00|   0.7124368|</span></span>
<span class="line"><span>|2021-03-17T10:32:34.054+08:00| -0.78597564|</span></span>
<span class="line"><span>|2021-03-17T10:32:35.054+08:00|   1.2058644|</span></span>
<span class="line"><span>|2021-03-17T10:32:36.054+08:00|   1.4215064|</span></span>
<span class="line"><span>|2021-03-17T10:32:37.054+08:00|   1.2808295|</span></span>
<span class="line"><span>|2021-03-17T10:32:38.054+08:00|  -0.6173715|</span></span>
<span class="line"><span>|2021-03-17T10:32:39.054+08:00|  0.06644377|</span></span>
<span class="line"><span>|2021-03-17T10:32:40.054+08:00|    2.349338|</span></span>
<span class="line"><span>|2021-03-17T10:32:41.054+08:00|   1.7335888|</span></span>
<span class="line"><span>|2021-03-17T10:32:42.054+08:00|   1.5872132|</span></span>
<span class="line"><span>............</span></span>
<span class="line"><span>Total line number = 10000</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>用于查询的 SQL 语句：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">select</span><span style="color:#ABB2BF;"> median(s0, </span><span style="color:#98C379;">&quot;error&quot;</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;0.01&quot;</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">test</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>输出序列：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+------------------------------------+</span></span>
<span class="line"><span>|                         Time|median(root.test.s0, &quot;error&quot;=&quot;0.01&quot;)|</span></span>
<span class="line"><span>+-----------------------------+------------------------------------+</span></span>
<span class="line"><span>|1970-01-01T08:00:00.000+08:00|                   1.021884560585022|</span></span>
<span class="line"><span>+-----------------------------+------------------------------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="minmax" tabindex="-1"><a class="header-anchor" href="#minmax"><span>MinMax</span></a></h3><h4 id="函数简介-7" tabindex="-1"><a class="header-anchor" href="#函数简介-7"><span>函数简介</span></a></h4><p>本函数将输入序列使用 min-max 方法进行标准化。最小值归一至 0，最大值归一至 1.</p><p><strong>函数名：</strong> MINMAX</p><p><strong>输入序列：</strong> 仅支持单个输入序列，类型为 INT32 / INT64 / FLOAT / DOUBLE。</p><p><strong>参数：</strong></p><ul><li><code>compute</code>：若设置为&quot;batch&quot;，则将数据全部读入后转换；若设置为 &quot;stream&quot;，则需用户提供最大值及最小值进行流式计算转换。默认为 &quot;batch&quot;。</li><li><code>min</code>：使用流式计算时的最小值。</li><li><code>max</code>：使用流式计算时的最大值。</li></ul><p><strong>输出序列</strong>：输出单个序列，类型为 DOUBLE。</p><h4 id="使用示例-7" tabindex="-1"><a class="header-anchor" href="#使用示例-7"><span>使用示例</span></a></h4><h5 id="全数据计算" tabindex="-1"><a class="header-anchor" href="#全数据计算"><span>全数据计算</span></a></h5><p>输入序列：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+------------+</span></span>
<span class="line"><span>|                         Time|root.test.s1|</span></span>
<span class="line"><span>+-----------------------------+------------+</span></span>
<span class="line"><span>|1970-01-01T08:00:00.100+08:00|         0.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.200+08:00|         0.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.300+08:00|         1.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.400+08:00|        -1.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.500+08:00|         0.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.600+08:00|         0.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.700+08:00|        -2.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.800+08:00|         2.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.900+08:00|         0.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.000+08:00|         0.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.100+08:00|         1.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.200+08:00|        -1.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.300+08:00|        -1.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.400+08:00|         1.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.500+08:00|         0.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.600+08:00|         0.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.700+08:00|        10.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.800+08:00|         2.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.900+08:00|        -2.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:02.000+08:00|         0.0|</span></span>
<span class="line"><span>+-----------------------------+------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>用于查询的 SQL 语句：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">select</span><span style="color:#ABB2BF;"> minmax(s1) </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">test</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>输出序列：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+--------------------+</span></span>
<span class="line"><span>|                         Time|minmax(root.test.s1)|</span></span>
<span class="line"><span>+-----------------------------+--------------------+</span></span>
<span class="line"><span>|1970-01-01T08:00:00.100+08:00| 0.16666666666666666|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.200+08:00| 0.16666666666666666|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.300+08:00|                0.25|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.400+08:00| 0.08333333333333333|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.500+08:00| 0.16666666666666666|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.600+08:00| 0.16666666666666666|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.700+08:00|                 0.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.800+08:00|  0.3333333333333333|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.900+08:00| 0.16666666666666666|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.000+08:00| 0.16666666666666666|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.100+08:00|                0.25|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.200+08:00| 0.08333333333333333|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.300+08:00| 0.08333333333333333|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.400+08:00|                0.25|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.500+08:00| 0.16666666666666666|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.600+08:00| 0.16666666666666666|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.700+08:00|                 1.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.800+08:00|  0.3333333333333333|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.900+08:00|                 0.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:02.000+08:00| 0.16666666666666666|</span></span>
<span class="line"><span>+-----------------------------+--------------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="mode" tabindex="-1"><a class="header-anchor" href="#mode"><span>Mode</span></a></h3><h4 id="函数简介-8" tabindex="-1"><a class="header-anchor" href="#函数简介-8"><span>函数简介</span></a></h4><p>本函数用于计算时间序列的众数，即出现次数最多的元素。</p><p><strong>函数名：</strong> MODE</p><p><strong>输入序列：</strong> 仅支持单个输入序列，类型可以是任意的。</p><p><strong>输出序列：</strong> 输出单个序列，类型与输入相同，序列仅包含一个时间戳为众数第一次出现的时间戳、值为众数的数据点。</p><p><strong>提示：</strong></p><ul><li>如果有多个出现次数最多的元素，将会输出任意一个。</li><li>数据中的空值和缺失值将会被忽略，但<code>NaN</code>不会被忽略。</li></ul><h4 id="使用示例-8" tabindex="-1"><a class="header-anchor" href="#使用示例-8"><span>使用示例</span></a></h4><p>输入序列：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+---------------+</span></span>
<span class="line"><span>|                         Time|root.test.d2.s2|</span></span>
<span class="line"><span>+-----------------------------+---------------+</span></span>
<span class="line"><span>|1970-01-01T08:00:00.001+08:00|          Hello|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.002+08:00|          hello|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.003+08:00|          Hello|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.004+08:00|          World|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.005+08:00|          World|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.600+08:00|          World|</span></span>
<span class="line"><span>|1970-01-15T09:37:34.451+08:00|          Hello|</span></span>
<span class="line"><span>|1970-01-15T09:37:34.452+08:00|          hello|</span></span>
<span class="line"><span>|1970-01-15T09:37:34.453+08:00|          Hello|</span></span>
<span class="line"><span>|1970-01-15T09:37:34.454+08:00|          World|</span></span>
<span class="line"><span>|1970-01-15T09:37:34.455+08:00|          World|</span></span>
<span class="line"><span>+-----------------------------+---------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>用于查询的 SQL 语句：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">select</span><span style="color:#ABB2BF;"> mode(s2) </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">test</span><span style="color:#ABB2BF;">.d2</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>输出序列：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+---------------------+</span></span>
<span class="line"><span>|                         Time|mode(root.test.d2.s2)|</span></span>
<span class="line"><span>+-----------------------------+---------------------+</span></span>
<span class="line"><span>|1970-01-01T08:00:00.004+08:00|                World|</span></span>
<span class="line"><span>+-----------------------------+---------------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="mvavg" tabindex="-1"><a class="header-anchor" href="#mvavg"><span>MvAvg</span></a></h3><h4 id="函数简介-9" tabindex="-1"><a class="header-anchor" href="#函数简介-9"><span>函数简介</span></a></h4><p>本函数计算序列的移动平均。</p><p><strong>函数名：</strong> MVAVG</p><p><strong>输入序列：</strong> 仅支持单个输入序列，类型为 INT32 / INT64 / FLOAT / DOUBLE。</p><p><strong>参数：</strong></p><ul><li><code>window</code>：移动窗口的长度。默认值为 10.</li></ul><p><strong>输出序列</strong>：输出单个序列，类型为 DOUBLE。</p><h4 id="使用示例-9" tabindex="-1"><a class="header-anchor" href="#使用示例-9"><span>使用示例</span></a></h4><h5 id="指定窗口长度" tabindex="-1"><a class="header-anchor" href="#指定窗口长度"><span>指定窗口长度</span></a></h5><p>输入序列：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+------------+</span></span>
<span class="line"><span>|                         Time|root.test.s1|</span></span>
<span class="line"><span>+-----------------------------+------------+</span></span>
<span class="line"><span>|1970-01-01T08:00:00.100+08:00|         0.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.200+08:00|         0.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.300+08:00|         1.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.400+08:00|        -1.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.500+08:00|         0.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.600+08:00|         0.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.700+08:00|        -2.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.800+08:00|         2.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.900+08:00|         0.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.000+08:00|         0.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.100+08:00|         1.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.200+08:00|        -1.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.300+08:00|        -1.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.400+08:00|         1.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.500+08:00|         0.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.600+08:00|         0.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.700+08:00|        10.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.800+08:00|         2.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.900+08:00|        -2.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:02.000+08:00|         0.0|</span></span>
<span class="line"><span>+-----------------------------+------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>用于查询的 SQL 语句：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">select</span><span style="color:#ABB2BF;"> mvavg(s1, </span><span style="color:#98C379;">&quot;window&quot;</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;3&quot;</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">test</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>输出序列：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+---------------------------------+</span></span>
<span class="line"><span>|                         Time|mvavg(root.test.s1, &quot;window&quot;=&quot;3&quot;)|</span></span>
<span class="line"><span>+-----------------------------+---------------------------------+</span></span>
<span class="line"><span>|1970-01-01T08:00:00.300+08:00|               0.3333333333333333|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.400+08:00|                              0.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.500+08:00|              -0.3333333333333333|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.600+08:00|                              0.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.700+08:00|              -0.6666666666666666|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.800+08:00|                              0.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.900+08:00|               0.6666666666666666|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.000+08:00|                              0.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.100+08:00|               0.3333333333333333|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.200+08:00|                              0.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.300+08:00|              -0.6666666666666666|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.400+08:00|                              0.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.500+08:00|               0.3333333333333333|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.600+08:00|                              0.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.700+08:00|               3.3333333333333335|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.800+08:00|                              4.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.900+08:00|                              0.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:02.000+08:00|              -0.6666666666666666|</span></span>
<span class="line"><span>+-----------------------------+---------------------------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="pacf" tabindex="-1"><a class="header-anchor" href="#pacf"><span>PACF</span></a></h3><h4 id="函数简介-10" tabindex="-1"><a class="header-anchor" href="#函数简介-10"><span>函数简介</span></a></h4><p>本函数通过求解 Yule-Walker 方程，计算序列的偏自相关系数。对于特殊的输入序列，方程可能没有解，此时输出<code>NaN</code>。</p><p><strong>函数名：</strong> PACF</p><p><strong>输入序列：</strong> 仅支持单个输入序列，类型为 INT32 / INT64 / FLOAT / DOUBLE。</p><p><strong>参数：</strong></p>`,85)),s("ul",null,[s("li",null,[a[41]||(a[41]=s("code",null,"lag",-1)),a[42]||(a[42]=n("：最大滞后阶数。默认值为")),s("mjx-container",M,[(p(),e("svg",k,a[37]||(a[37]=[l('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="6D" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q351 442 364 440T387 434T406 426T421 417T432 406T441 395T448 384T452 374T455 366L457 361L460 365Q463 369 466 373T475 384T488 397T503 410T523 422T546 432T572 439T603 442Q729 442 740 329Q741 322 741 190V104Q741 66 743 59T754 49Q775 46 803 46H819V0H811L788 1Q764 2 737 2T699 3Q596 3 587 0H579V46H595Q656 46 656 62Q657 64 657 200Q656 335 655 343Q649 371 635 385T611 402T585 404Q540 404 506 370Q479 343 472 315T464 232V168V108Q464 78 465 68T468 55T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z"></path><path data-c="69" d="M69 609Q69 637 87 653T131 669Q154 667 171 652T188 609Q188 579 171 564T129 549Q104 549 87 564T69 609ZM247 0Q232 3 143 3Q132 3 106 3T56 1L34 0H26V46H42Q70 46 91 49Q100 53 102 60T104 102V205V293Q104 345 102 359T88 378Q74 385 41 385H30V408Q30 431 32 431L42 432Q52 433 70 434T106 436Q123 437 142 438T171 441T182 442H185V62Q190 52 197 50T232 46H255V0H247Z" transform="translate(833,0)"></path><path data-c="6E" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q450 438 463 329Q464 322 464 190V104Q464 66 466 59T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z" transform="translate(1111,0)"></path></g><g data-mml-node="mo" transform="translate(1667,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(2056,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(500,0)"></path></g><g data-mml-node="msub" transform="translate(3222.7,0)"><g data-mml-node="mi"><path data-c="6C" d="M42 46H56Q95 46 103 60V68Q103 77 103 91T103 124T104 167T104 217T104 272T104 329Q104 366 104 407T104 482T104 542T103 586T103 603Q100 622 89 628T44 637H26V660Q26 683 28 683L38 684Q48 685 67 686T104 688Q121 689 141 690T171 693T182 694H185V379Q185 62 186 60Q190 52 198 49Q219 46 247 46H263V0H255L232 1Q209 2 183 2T145 3T107 3T57 1L34 0H26V46H42Z"></path><path data-c="6F" d="M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z" transform="translate(278,0)"></path><path data-c="67" d="M329 409Q373 453 429 453Q459 453 472 434T485 396Q485 382 476 371T449 360Q416 360 412 390Q410 404 415 411Q415 412 416 414V415Q388 412 363 393Q355 388 355 386Q355 385 359 381T368 369T379 351T388 325T392 292Q392 230 343 187T222 143Q172 143 123 171Q112 153 112 133Q112 98 138 81Q147 75 155 75T227 73Q311 72 335 67Q396 58 431 26Q470 -13 470 -72Q470 -139 392 -175Q332 -206 250 -206Q167 -206 107 -175Q29 -140 29 -75Q29 -39 50 -15T92 18L103 24Q67 55 67 108Q67 155 96 193Q52 237 52 292Q52 355 102 398T223 442Q274 442 318 416L329 409ZM299 343Q294 371 273 387T221 404Q192 404 171 388T145 343Q142 326 142 292Q142 248 149 227T179 192Q196 182 222 182Q244 182 260 189T283 207T294 227T299 242Q302 258 302 292T299 343ZM403 -75Q403 -50 389 -34T348 -11T299 -2T245 0H218Q151 0 138 -6Q118 -15 107 -34T95 -74Q95 -84 101 -97T122 -127T170 -155T250 -167Q319 -167 361 -139T403 -75Z" transform="translate(778,0)"></path></g><g data-mml-node="TeXAtom" transform="translate(1311,-241.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(500,0)"></path></g></g></g><g data-mml-node="mo" transform="translate(5290.8,0)"><path data-c="2061" d=""></path></g><g data-mml-node="mi" transform="translate(5457.4,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(6057.4,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(6502.1,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(7324.3,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(8324.6,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(8824.6,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g>',1)]))),a[38]||(a[38]=s("mjx-assistive-mml",{unselectable:"on",display:"inline"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("mo",{"data-mjx-texclass":"OP",movablelimits:"true"},"min"),s("mo",{stretchy:"false"},"("),s("mn",null,"10"),s("msub",null,[s("mi",null,"log"),s("mrow",{"data-mjx-texclass":"ORD"},[s("mn",null,"10")])]),s("mo",{"data-mjx-texclass":"NONE"},"⁡"),s("mi",null,"n"),s("mo",null,","),s("mi",null,"n"),s("mo",null,"−"),s("mn",null,"1"),s("mo",{stretchy:"false"},")")])],-1))]),a[43]||(a[43]=n("，")),s("mjx-container",Z,[(p(),e("svg",D,a[39]||(a[39]=[s("g",{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"},[s("g",{"data-mml-node":"math"},[s("g",{"data-mml-node":"mi"},[s("path",{"data-c":"1D45B",d:"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"})])])],-1)]))),a[40]||(a[40]=s("mjx-assistive-mml",{unselectable:"on",display:"inline"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("mi",null,"n")])],-1))]),a[44]||(a[44]=n("表示数据点个数。"))])]),a[57]||(a[57]=l(`<p><strong>输出序列</strong>：输出单个序列，类型为 DOUBLE。</p><h4 id="使用示例-10" tabindex="-1"><a class="header-anchor" href="#使用示例-10"><span>使用示例</span></a></h4><h5 id="指定滞后阶数" tabindex="-1"><a class="header-anchor" href="#指定滞后阶数"><span>指定滞后阶数</span></a></h5><p>输入序列：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+------------+</span></span>
<span class="line"><span>|                         Time|root.test.s1|</span></span>
<span class="line"><span>+-----------------------------+------------+</span></span>
<span class="line"><span>|2019-12-27T00:00:00.000+08:00|         5.0|</span></span>
<span class="line"><span>|2019-12-27T00:05:00.000+08:00|         5.0|</span></span>
<span class="line"><span>|2019-12-27T00:10:00.000+08:00|         5.0|</span></span>
<span class="line"><span>|2019-12-27T00:15:00.000+08:00|         5.0|</span></span>
<span class="line"><span>|2019-12-27T00:20:00.000+08:00|         6.0|</span></span>
<span class="line"><span>|2019-12-27T00:25:00.000+08:00|         5.0|</span></span>
<span class="line"><span>|2019-12-27T00:30:00.000+08:00|         6.0|</span></span>
<span class="line"><span>|2019-12-27T00:35:00.000+08:00|         6.0|</span></span>
<span class="line"><span>|2019-12-27T00:40:00.000+08:00|         6.0|</span></span>
<span class="line"><span>|2019-12-27T00:45:00.000+08:00|         6.0|</span></span>
<span class="line"><span>|2019-12-27T00:50:00.000+08:00|         6.0|</span></span>
<span class="line"><span>|2019-12-27T00:55:00.000+08:00|    5.982609|</span></span>
<span class="line"><span>|2019-12-27T01:00:00.000+08:00|   5.9652176|</span></span>
<span class="line"><span>|2019-12-27T01:05:00.000+08:00|    5.947826|</span></span>
<span class="line"><span>|2019-12-27T01:10:00.000+08:00|   5.9304347|</span></span>
<span class="line"><span>|2019-12-27T01:15:00.000+08:00|   5.9130435|</span></span>
<span class="line"><span>|2019-12-27T01:20:00.000+08:00|   5.8956523|</span></span>
<span class="line"><span>|2019-12-27T01:25:00.000+08:00|    5.878261|</span></span>
<span class="line"><span>|2019-12-27T01:30:00.000+08:00|   5.8608694|</span></span>
<span class="line"><span>|2019-12-27T01:35:00.000+08:00|    5.843478|</span></span>
<span class="line"><span>............</span></span>
<span class="line"><span>Total line number = 18066</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>用于查询的 SQL 语句：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">select</span><span style="color:#ABB2BF;"> pacf(s1, </span><span style="color:#98C379;">&quot;lag&quot;</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;5&quot;</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">test</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>输出序列：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+-----------------------------+</span></span>
<span class="line"><span>|                         Time|pacf(root.test.s1, &quot;lag&quot;=&quot;5&quot;)|</span></span>
<span class="line"><span>+-----------------------------+-----------------------------+</span></span>
<span class="line"><span>|2019-12-27T00:00:00.000+08:00|                          1.0|</span></span>
<span class="line"><span>|2019-12-27T00:05:00.000+08:00|           0.3528915091942786|</span></span>
<span class="line"><span>|2019-12-27T00:10:00.000+08:00|           0.1761346122516304|</span></span>
<span class="line"><span>|2019-12-27T00:15:00.000+08:00|           0.1492391973294682|</span></span>
<span class="line"><span>|2019-12-27T00:20:00.000+08:00|          0.03560059645868398|</span></span>
<span class="line"><span>|2019-12-27T00:25:00.000+08:00|           0.0366222998995286|</span></span>
<span class="line"><span>+-----------------------------+-----------------------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="percentile" tabindex="-1"><a class="header-anchor" href="#percentile"><span>Percentile</span></a></h3><h4 id="函数简介-11" tabindex="-1"><a class="header-anchor" href="#函数简介-11"><span>函数简介</span></a></h4><p>本函数用于计算单列数值型数据的精确或近似分位数。</p><p><strong>函数名：</strong> PERCENTILE</p><p><strong>输入序列：</strong> 仅支持单个输入序列，类型为 INT32 / INT64 / FLOAT / DOUBLE。</p><p><strong>参数：</strong></p><ul><li><code>rank</code>：所求分位数在所有数据中的排名百分比，取值范围为 (0,1]，默认值为 0.5。如当设为 0.5时则计算中位数。</li><li><code>error</code>：近似分位数的基于排名的误差百分比，取值范围为 [0,1)，默认值为0。如<code>rank</code>=0.5 且<code>error</code>=0.01，则计算出的分位数的真实排名百分比在 0.49~0.51之间。当<code>error</code>=0 时，计算结果为精确分位数。</li></ul><p><strong>输出序列：</strong> 输出单个序列，类型与输入序列相同。当<code>error</code>=0时，序列仅包含一个时间戳为分位数第一次出现的时间戳、值为分位数的数据点；否则，输出值的时间戳为0。</p><p><strong>提示：</strong> 数据中的空值、缺失值和<code>NaN</code>将会被忽略。</p><h4 id="使用示例-11" tabindex="-1"><a class="header-anchor" href="#使用示例-11"><span>使用示例</span></a></h4><p>输入序列：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+------------+</span></span>
<span class="line"><span>|                         Time|root.test.s0|</span></span>
<span class="line"><span>+-----------------------------+------------+</span></span>
<span class="line"><span>|2021-03-17T10:32:17.054+08:00|   0.5319929|</span></span>
<span class="line"><span>|2021-03-17T10:32:18.054+08:00|   0.9304316|</span></span>
<span class="line"><span>|2021-03-17T10:32:19.054+08:00|  -1.4800133|</span></span>
<span class="line"><span>|2021-03-17T10:32:20.054+08:00|   0.6114087|</span></span>
<span class="line"><span>|2021-03-17T10:32:21.054+08:00|   2.5163336|</span></span>
<span class="line"><span>|2021-03-17T10:32:22.054+08:00|  -1.0845392|</span></span>
<span class="line"><span>|2021-03-17T10:32:23.054+08:00|   1.0562582|</span></span>
<span class="line"><span>|2021-03-17T10:32:24.054+08:00|   1.3867859|</span></span>
<span class="line"><span>|2021-03-17T10:32:25.054+08:00| -0.45429882|</span></span>
<span class="line"><span>|2021-03-17T10:32:26.054+08:00|   1.0353678|</span></span>
<span class="line"><span>|2021-03-17T10:32:27.054+08:00|   0.7307929|</span></span>
<span class="line"><span>|2021-03-17T10:32:28.054+08:00|   2.3167255|</span></span>
<span class="line"><span>|2021-03-17T10:32:29.054+08:00|    2.342443|</span></span>
<span class="line"><span>|2021-03-17T10:32:30.054+08:00|   1.5809103|</span></span>
<span class="line"><span>|2021-03-17T10:32:31.054+08:00|   1.4829416|</span></span>
<span class="line"><span>|2021-03-17T10:32:32.054+08:00|   1.5800357|</span></span>
<span class="line"><span>|2021-03-17T10:32:33.054+08:00|   0.7124368|</span></span>
<span class="line"><span>|2021-03-17T10:32:34.054+08:00| -0.78597564|</span></span>
<span class="line"><span>|2021-03-17T10:32:35.054+08:00|   1.2058644|</span></span>
<span class="line"><span>|2021-03-17T10:32:36.054+08:00|   1.4215064|</span></span>
<span class="line"><span>|2021-03-17T10:32:37.054+08:00|   1.2808295|</span></span>
<span class="line"><span>|2021-03-17T10:32:38.054+08:00|  -0.6173715|</span></span>
<span class="line"><span>|2021-03-17T10:32:39.054+08:00|  0.06644377|</span></span>
<span class="line"><span>|2021-03-17T10:32:40.054+08:00|    2.349338|</span></span>
<span class="line"><span>|2021-03-17T10:32:41.054+08:00|   1.7335888|</span></span>
<span class="line"><span>|2021-03-17T10:32:42.054+08:00|   1.5872132|</span></span>
<span class="line"><span>............</span></span>
<span class="line"><span>Total line number = 10000</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>用于查询的 SQL 语句：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">select</span><span style="color:#ABB2BF;"> percentile(s0, </span><span style="color:#98C379;">&quot;rank&quot;</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;0.2&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;error&quot;</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;0.01&quot;</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">test</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>输出序列：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+------------------------------------------------------+</span></span>
<span class="line"><span>|                         Time|percentile(root.test.s0, &quot;rank&quot;=&quot;0.2&quot;, &quot;error&quot;=&quot;0.01&quot;)|</span></span>
<span class="line"><span>+-----------------------------+------------------------------------------------------+</span></span>
<span class="line"><span>|2021-03-17T10:35:02.054+08:00|                                    0.1801469624042511|</span></span>
<span class="line"><span>+-----------------------------+------------------------------------------------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="period" tabindex="-1"><a class="header-anchor" href="#period"><span>Period</span></a></h3><h4 id="函数简介-12" tabindex="-1"><a class="header-anchor" href="#函数简介-12"><span>函数简介</span></a></h4><p>本函数用于计算单列数值型数据的周期。</p><p><strong>函数名：</strong> PERIOD</p><p><strong>输入序列：</strong> 仅支持单个输入序列，类型为 INT32 / INT64 / FLOAT / DOUBLE</p><p><strong>输出序列：</strong> 输出单个序列，类型为 INT32，序列仅包含一个时间戳为 0、值为周期的数据点。</p><h4 id="使用示例-12" tabindex="-1"><a class="header-anchor" href="#使用示例-12"><span>使用示例</span></a></h4><p>输入序列：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+---------------+</span></span>
<span class="line"><span>|                         Time|root.test.d3.s1|</span></span>
<span class="line"><span>+-----------------------------+---------------+</span></span>
<span class="line"><span>|1970-01-01T08:00:00.001+08:00|            1.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.002+08:00|            2.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.003+08:00|            3.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.004+08:00|            1.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.005+08:00|            2.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.006+08:00|            3.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.007+08:00|            1.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.008+08:00|            2.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.009+08:00|            3.0|</span></span>
<span class="line"><span>+-----------------------------+---------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>用于查询的 SQL 语句：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">select</span><span style="color:#C678DD;"> period</span><span style="color:#ABB2BF;">(s1) </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">test</span><span style="color:#ABB2BF;">.d3</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>输出序列：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+-----------------------+</span></span>
<span class="line"><span>|                         Time|period(root.test.d3.s1)|</span></span>
<span class="line"><span>+-----------------------------+-----------------------+</span></span>
<span class="line"><span>|1970-01-01T08:00:00.000+08:00|                      3|</span></span>
<span class="line"><span>+-----------------------------+-----------------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="qlb" tabindex="-1"><a class="header-anchor" href="#qlb"><span>QLB</span></a></h3><h4 id="函数简介-13" tabindex="-1"><a class="header-anchor" href="#函数简介-13"><span>函数简介</span></a></h4><p>本函数对输入序列计算$Q_{LB} $统计量，并计算对应的p值。p值越小表明序列越有可能为非平稳序列。</p><p><strong>函数名：</strong> QLB</p><p><strong>输入序列：</strong> 仅支持单个输入序列，类型为 INT32 / INT64 / FLOAT / DOUBLE。</p><p><strong>参数：</strong></p><ul><li><code>lag</code>：计算时用到的最大延迟阶数，取值应为 1 至 n-2 之间的整数，n 为序列采样总数。默认取 n-2。</li></ul><p><strong>输出序列：</strong> 输出单个序列，类型为 DOUBLE。该序列是$Q_{LB} $统计量对应的 p 值，时间标签代表偏移阶数。</p><p><strong>提示：</strong> $Q_{LB} $统计量由自相关系数求得，如需得到统计量而非 p 值，可以使用 ACF 函数。</p><h4 id="使用示例-13" tabindex="-1"><a class="header-anchor" href="#使用示例-13"><span>使用示例</span></a></h4><h5 id="使用默认参数" tabindex="-1"><a class="header-anchor" href="#使用默认参数"><span>使用默认参数</span></a></h5><p>输入序列：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+---------------+</span></span>
<span class="line"><span>|                         Time|root.test.d1.s1|</span></span>
<span class="line"><span>+-----------------------------+---------------+</span></span>
<span class="line"><span>|1970-01-01T00:00:00.100+08:00|           1.22|</span></span>
<span class="line"><span>|1970-01-01T00:00:00.200+08:00|          -2.78|</span></span>
<span class="line"><span>|1970-01-01T00:00:00.300+08:00|           1.53|</span></span>
<span class="line"><span>|1970-01-01T00:00:00.400+08:00|           0.70|</span></span>
<span class="line"><span>|1970-01-01T00:00:00.500+08:00|           0.75|</span></span>
<span class="line"><span>|1970-01-01T00:00:00.600+08:00|          -0.72|</span></span>
<span class="line"><span>|1970-01-01T00:00:00.700+08:00|          -0.22|</span></span>
<span class="line"><span>|1970-01-01T00:00:00.800+08:00|           0.28|</span></span>
<span class="line"><span>|1970-01-01T00:00:00.900+08:00|           0.57|</span></span>
<span class="line"><span>|1970-01-01T00:00:01.000+08:00|          -0.22|</span></span>
<span class="line"><span>|1970-01-01T00:00:01.100+08:00|          -0.72|</span></span>
<span class="line"><span>|1970-01-01T00:00:01.200+08:00|           1.34|</span></span>
<span class="line"><span>|1970-01-01T00:00:01.300+08:00|          -0.25|</span></span>
<span class="line"><span>|1970-01-01T00:00:01.400+08:00|           0.17|</span></span>
<span class="line"><span>|1970-01-01T00:00:01.500+08:00|           2.51|</span></span>
<span class="line"><span>|1970-01-01T00:00:01.600+08:00|           1.42|</span></span>
<span class="line"><span>|1970-01-01T00:00:01.700+08:00|          -1.34|</span></span>
<span class="line"><span>|1970-01-01T00:00:01.800+08:00|          -0.01|</span></span>
<span class="line"><span>|1970-01-01T00:00:01.900+08:00|          -0.49|</span></span>
<span class="line"><span>|1970-01-01T00:00:02.000+08:00|           1.63|</span></span>
<span class="line"><span>+-----------------------------+---------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>用于查询的 SQL 语句：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">select</span><span style="color:#ABB2BF;"> QLB(s1) </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">test</span><span style="color:#ABB2BF;">.d1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>输出序列：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+--------------------+</span></span>
<span class="line"><span>|                         Time|QLB(root.test.d1.s1)|</span></span>
<span class="line"><span>+-----------------------------+--------------------+</span></span>
<span class="line"><span>|1970-01-01T00:00:00.001+08:00|  0.2168702295315677|</span></span>
<span class="line"><span>|1970-01-01T00:00:00.002+08:00|  0.3068948509261751|</span></span>
<span class="line"><span>|1970-01-01T00:00:00.003+08:00|  0.4217859150918444|</span></span>
<span class="line"><span>|1970-01-01T00:00:00.004+08:00|  0.5114539874276656|</span></span>
<span class="line"><span>|1970-01-01T00:00:00.005+08:00|  0.6560619525616759|</span></span>
<span class="line"><span>|1970-01-01T00:00:00.006+08:00|  0.7722398654053280|</span></span>
<span class="line"><span>|1970-01-01T00:00:00.007+08:00|  0.8532491661465290|</span></span>
<span class="line"><span>|1970-01-01T00:00:00.008+08:00|  0.9028575017542528|</span></span>
<span class="line"><span>|1970-01-01T00:00:00.009+08:00|  0.9434989988192729|</span></span>
<span class="line"><span>|1970-01-01T00:00:00.010+08:00|  0.8950280161464689|</span></span>
<span class="line"><span>|1970-01-01T00:00:00.011+08:00|  0.7701048398839656|</span></span>
<span class="line"><span>|1970-01-01T00:00:00.012+08:00|  0.7845536060001281|</span></span>
<span class="line"><span>|1970-01-01T00:00:00.013+08:00|  0.5943030981705825|</span></span>
<span class="line"><span>|1970-01-01T00:00:00.014+08:00|  0.4618413512531093|</span></span>
<span class="line"><span>|1970-01-01T00:00:00.015+08:00|  0.2645948244673964|</span></span>
<span class="line"><span>|1970-01-01T00:00:00.016+08:00|  0.3167530476666645|</span></span>
<span class="line"><span>|1970-01-01T00:00:00.017+08:00|  0.2330010780351453|</span></span>
<span class="line"><span>|1970-01-01T00:00:00.018+08:00|  0.0666611237622325|</span></span>
<span class="line"><span>+-----------------------------+--------------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="resample" tabindex="-1"><a class="header-anchor" href="#resample"><span>Resample</span></a></h3><h4 id="函数简介-14" tabindex="-1"><a class="header-anchor" href="#函数简介-14"><span>函数简介</span></a></h4><p>本函数对输入序列按照指定的频率进行重采样，包括上采样和下采样。目前，本函数支持的上采样方法包括<code>NaN</code>填充法 (NaN)、前值填充法 (FFill)、后值填充法 (BFill) 以及线性插值法 (Linear)；本函数支持的下采样方法为分组聚合，聚合方法包括最大值 (Max)、最小值 (Min)、首值 (First)、末值 (Last)、平均值 (Mean)和中位数 (Median)。</p><p><strong>函数名：</strong> RESAMPLE</p><p><strong>输入序列：</strong> 仅支持单个输入序列，类型为 INT32 / INT64 / FLOAT / DOUBLE。</p><p><strong>参数：</strong></p><ul><li><code>every</code>：重采样频率，是一个有单位的正数。目前支持五种单位，分别是 &#39;ms&#39;（毫秒）、&#39;s&#39;（秒）、&#39;m&#39;（分钟）、&#39;h&#39;（小时）和&#39;d&#39;（天）。该参数不允许缺省。</li><li><code>interp</code>：上采样的插值方法，取值为 &#39;NaN&#39;、&#39;FFill&#39;、&#39;BFill&#39; 或 &#39;Linear&#39;。在缺省情况下，使用<code>NaN</code>填充法。</li><li><code>aggr</code>：下采样的聚合方法，取值为 &#39;Max&#39;、&#39;Min&#39;、&#39;First&#39;、&#39;Last&#39;、&#39;Mean&#39; 或 &#39;Median&#39;。在缺省情况下，使用平均数聚合。</li><li><code>start</code>：重采样的起始时间（包含），是一个格式为 &#39;yyyy-MM-dd HH:mm:ss&#39; 的时间字符串。在缺省情况下，使用第一个有效数据点的时间戳。</li><li><code>end</code>：重采样的结束时间（不包含），是一个格式为 &#39;yyyy-MM-dd HH:mm:ss&#39; 的时间字符串。在缺省情况下，使用最后一个有效数据点的时间戳。</li></ul><p><strong>输出序列：</strong> 输出单个序列，类型为 DOUBLE。该序列按照重采样频率严格等间隔分布。</p><p><strong>提示：</strong> 数据中的<code>NaN</code>将会被忽略。</p><h4 id="使用示例-14" tabindex="-1"><a class="header-anchor" href="#使用示例-14"><span>使用示例</span></a></h4><h5 id="上采样" tabindex="-1"><a class="header-anchor" href="#上采样"><span>上采样</span></a></h5><p>当重采样频率高于数据原始频率时，将会进行上采样。</p><p>输入序列：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+---------------+</span></span>
<span class="line"><span>|                         Time|root.test.d1.s1|</span></span>
<span class="line"><span>+-----------------------------+---------------+</span></span>
<span class="line"><span>|2021-03-06T16:00:00.000+08:00|           3.09|</span></span>
<span class="line"><span>|2021-03-06T16:15:00.000+08:00|           3.53|</span></span>
<span class="line"><span>|2021-03-06T16:30:00.000+08:00|            3.5|</span></span>
<span class="line"><span>|2021-03-06T16:45:00.000+08:00|           3.51|</span></span>
<span class="line"><span>|2021-03-06T17:00:00.000+08:00|           3.41|</span></span>
<span class="line"><span>+-----------------------------+---------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>用于查询的 SQL 语句：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">select</span><span style="color:#C678DD;"> resample</span><span style="color:#ABB2BF;">(s1,</span><span style="color:#98C379;">&#39;every&#39;</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&#39;5m&#39;</span><span style="color:#ABB2BF;">,</span><span style="color:#98C379;">&#39;interp&#39;</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&#39;linear&#39;</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">test</span><span style="color:#ABB2BF;">.d1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>输出序列：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+----------------------------------------------------------+</span></span>
<span class="line"><span>|                         Time|resample(root.test.d1.s1, &quot;every&quot;=&quot;5m&quot;, &quot;interp&quot;=&quot;linear&quot;)|</span></span>
<span class="line"><span>+-----------------------------+----------------------------------------------------------+</span></span>
<span class="line"><span>|2021-03-06T16:00:00.000+08:00|                                        3.0899999141693115|</span></span>
<span class="line"><span>|2021-03-06T16:05:00.000+08:00|                                        3.2366665999094644|</span></span>
<span class="line"><span>|2021-03-06T16:10:00.000+08:00|                                        3.3833332856496177|</span></span>
<span class="line"><span>|2021-03-06T16:15:00.000+08:00|                                        3.5299999713897705|</span></span>
<span class="line"><span>|2021-03-06T16:20:00.000+08:00|                                        3.5199999809265137|</span></span>
<span class="line"><span>|2021-03-06T16:25:00.000+08:00|                                         3.509999990463257|</span></span>
<span class="line"><span>|2021-03-06T16:30:00.000+08:00|                                                       3.5|</span></span>
<span class="line"><span>|2021-03-06T16:35:00.000+08:00|                                         3.503333330154419|</span></span>
<span class="line"><span>|2021-03-06T16:40:00.000+08:00|                                         3.506666660308838|</span></span>
<span class="line"><span>|2021-03-06T16:45:00.000+08:00|                                         3.509999990463257|</span></span>
<span class="line"><span>|2021-03-06T16:50:00.000+08:00|                                        3.4766666889190674|</span></span>
<span class="line"><span>|2021-03-06T16:55:00.000+08:00|                                         3.443333387374878|</span></span>
<span class="line"><span>|2021-03-06T17:00:00.000+08:00|                                        3.4100000858306885|</span></span>
<span class="line"><span>+-----------------------------+----------------------------------------------------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="下采样" tabindex="-1"><a class="header-anchor" href="#下采样"><span>下采样</span></a></h5><p>当重采样频率低于数据原始频率时，将会进行下采样。</p><p>输入序列同上，用于查询的 SQL 语句如下：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">select</span><span style="color:#C678DD;"> resample</span><span style="color:#ABB2BF;">(s1,</span><span style="color:#98C379;">&#39;every&#39;</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&#39;30m&#39;</span><span style="color:#ABB2BF;">,</span><span style="color:#98C379;">&#39;aggr&#39;</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&#39;first&#39;</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">test</span><span style="color:#ABB2BF;">.d1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>输出序列：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+--------------------------------------------------------+</span></span>
<span class="line"><span>|                         Time|resample(root.test.d1.s1, &quot;every&quot;=&quot;30m&quot;, &quot;aggr&quot;=&quot;first&quot;)|</span></span>
<span class="line"><span>+-----------------------------+--------------------------------------------------------+</span></span>
<span class="line"><span>|2021-03-06T16:00:00.000+08:00|                                      3.0899999141693115|</span></span>
<span class="line"><span>|2021-03-06T16:30:00.000+08:00|                                                     3.5|</span></span>
<span class="line"><span>|2021-03-06T17:00:00.000+08:00|                                      3.4100000858306885|</span></span>
<span class="line"><span>+-----------------------------+--------------------------------------------------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="指定重采样时间段" tabindex="-1"><a class="header-anchor" href="#指定重采样时间段"><span>指定重采样时间段</span></a></h5><p>可以使用<code>start</code>和<code>end</code>两个参数指定重采样的时间段，超出实际时间范围的部分会被插值填补。</p><p>输入序列同上，用于查询的 SQL 语句如下：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">select</span><span style="color:#C678DD;"> resample</span><span style="color:#ABB2BF;">(s1,</span><span style="color:#98C379;">&#39;every&#39;</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&#39;30m&#39;</span><span style="color:#ABB2BF;">,</span><span style="color:#98C379;">&#39;start&#39;</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&#39;2021-03-06 15:00:00&#39;</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">test</span><span style="color:#ABB2BF;">.d1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>输出序列：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+-----------------------------------------------------------------------+</span></span>
<span class="line"><span>|                         Time|resample(root.test.d1.s1, &quot;every&quot;=&quot;30m&quot;, &quot;start&quot;=&quot;2021-03-06 15:00:00&quot;)|</span></span>
<span class="line"><span>+-----------------------------+-----------------------------------------------------------------------+</span></span>
<span class="line"><span>|2021-03-06T15:00:00.000+08:00|                                                                    NaN|</span></span>
<span class="line"><span>|2021-03-06T15:30:00.000+08:00|                                                                    NaN|</span></span>
<span class="line"><span>|2021-03-06T16:00:00.000+08:00|                                                      3.309999942779541|</span></span>
<span class="line"><span>|2021-03-06T16:30:00.000+08:00|                                                     3.5049999952316284|</span></span>
<span class="line"><span>|2021-03-06T17:00:00.000+08:00|                                                     3.4100000858306885|</span></span>
<span class="line"><span>+-----------------------------+-----------------------------------------------------------------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sample" tabindex="-1"><a class="header-anchor" href="#sample"><span>Sample</span></a></h3><h4 id="函数简介-15" tabindex="-1"><a class="header-anchor" href="#函数简介-15"><span>函数简介</span></a></h4><p>本函数对输入序列进行采样，即从输入序列中选取指定数量的数据点并输出。目前，本函数支持两种采样方法：<strong>蓄水池采样法 (reservoir sampling)</strong> 对数据进行随机采样，所有数据点被采样的概率相同；<strong>等距采样法 (isometric sampling)</strong> 按照相等的索引间隔对数据进行采样。</p><p><strong>函数名：</strong> SAMPLE</p><p><strong>输入序列：</strong> 仅支持单个输入序列，类型可以是任意的。</p><p><strong>参数：</strong></p><ul><li><code>method</code>：采样方法，取值为 &#39;reservoir&#39; 或&#39; isometric&#39;。在缺省情况下，采用蓄水池采样法。</li><li><code>k</code>：采样数，它是一个正整数，在缺省情况下为 1。</li></ul><p><strong>输出序列：</strong> 输出单个序列，类型与输入序列相同。该序列的长度为采样数，序列中的每一个数据点都来自于输入序列。</p><p><strong>提示：</strong> 如果采样数大于序列长度，那么输入序列中所有的数据点都会被输出。</p><h4 id="使用示例-15" tabindex="-1"><a class="header-anchor" href="#使用示例-15"><span>使用示例</span></a></h4><h5 id="蓄水池采样" tabindex="-1"><a class="header-anchor" href="#蓄水池采样"><span>蓄水池采样</span></a></h5><p>当<code>method</code>参数为 &#39;reservoir&#39; 或缺省时，采用蓄水池采样法对输入序列进行采样。由于该采样方法具有随机性，下面展示的输出序列只是一种可能的结果。</p><p>输入序列：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+---------------+</span></span>
<span class="line"><span>|                         Time|root.test.d1.s1|</span></span>
<span class="line"><span>+-----------------------------+---------------+</span></span>
<span class="line"><span>|2020-01-01T00:00:01.000+08:00|            1.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:02.000+08:00|            2.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:03.000+08:00|            3.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:04.000+08:00|            4.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:05.000+08:00|            5.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:06.000+08:00|            6.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:07.000+08:00|            7.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:08.000+08:00|            8.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:09.000+08:00|            9.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:10.000+08:00|           10.0|</span></span>
<span class="line"><span>+-----------------------------+---------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>用于查询的 SQL 语句：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">select</span><span style="color:#C678DD;"> sample</span><span style="color:#ABB2BF;">(s1,</span><span style="color:#98C379;">&#39;method&#39;</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&#39;reservoir&#39;</span><span style="color:#ABB2BF;">,</span><span style="color:#98C379;">&#39;k&#39;</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&#39;5&#39;</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">test</span><span style="color:#ABB2BF;">.d1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>输出序列：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+------------------------------------------------------+</span></span>
<span class="line"><span>|                         Time|sample(root.test.d1.s1, &quot;method&quot;=&quot;reservoir&quot;, &quot;k&quot;=&quot;5&quot;)|</span></span>
<span class="line"><span>+-----------------------------+------------------------------------------------------+</span></span>
<span class="line"><span>|2020-01-01T00:00:02.000+08:00|                                                   2.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:03.000+08:00|                                                   3.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:05.000+08:00|                                                   5.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:08.000+08:00|                                                   8.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:10.000+08:00|                                                  10.0|</span></span>
<span class="line"><span>+-----------------------------+------------------------------------------------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="等距采样" tabindex="-1"><a class="header-anchor" href="#等距采样"><span>等距采样</span></a></h5><p>当<code>method</code>参数为 &#39;isometric&#39; 时，采用等距采样法对输入序列进行采样。</p><p>输入序列同上，用于查询的 SQL 语句如下：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">select</span><span style="color:#C678DD;"> sample</span><span style="color:#ABB2BF;">(s1,</span><span style="color:#98C379;">&#39;method&#39;</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&#39;isometric&#39;</span><span style="color:#ABB2BF;">,</span><span style="color:#98C379;">&#39;k&#39;</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&#39;5&#39;</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">test</span><span style="color:#ABB2BF;">.d1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>输出序列：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+------------------------------------------------------+</span></span>
<span class="line"><span>|                         Time|sample(root.test.d1.s1, &quot;method&quot;=&quot;isometric&quot;, &quot;k&quot;=&quot;5&quot;)|</span></span>
<span class="line"><span>+-----------------------------+------------------------------------------------------+</span></span>
<span class="line"><span>|2020-01-01T00:00:01.000+08:00|                                                   1.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:03.000+08:00|                                                   3.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:05.000+08:00|                                                   5.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:07.000+08:00|                                                   7.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:09.000+08:00|                                                   9.0|</span></span>
<span class="line"><span>+-----------------------------+------------------------------------------------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="segment" tabindex="-1"><a class="header-anchor" href="#segment"><span>Segment</span></a></h3><h4 id="函数简介-16" tabindex="-1"><a class="header-anchor" href="#函数简介-16"><span>函数简介</span></a></h4><p>本函数按照数据的线性变化趋势将数据划分为多个子序列，返回分段直线拟合后的子序列首值或所有拟合值。</p><p><strong>函数名：</strong> SEGMENT</p><p><strong>输入序列：</strong> 仅支持单个输入序列，类型为 INT32 / INT64 / FLOAT / DOUBLE</p><p><strong>参数：</strong></p><ul><li><p><code>output</code>：&quot;all&quot; 输出所有拟合值；&quot;first&quot; 输出子序列起点拟合值。默认为 &quot;first&quot;。</p></li><li><p><code>error</code>：判定存在线性趋势的误差允许阈值。误差的定义为子序列进行线性拟合的误差的绝对值的均值。默认为 0.1.</p></li></ul><p><strong>输出序列：</strong> 输出单个序列，类型为 DOUBLE。</p><p><strong>提示：</strong> 函数默认所有数据等时间间隔分布。函数读取所有数据，若原始数据过多，请先进行降采样处理。拟合采用自底向上方法，子序列的尾值可能会被认作子序列首值输出。</p><h4 id="使用示例-16" tabindex="-1"><a class="header-anchor" href="#使用示例-16"><span>使用示例</span></a></h4><p>输入序列：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+------------+</span></span>
<span class="line"><span>|                         Time|root.test.s1|</span></span>
<span class="line"><span>+-----------------------------+------------+</span></span>
<span class="line"><span>|1970-01-01T08:00:00.000+08:00|         5.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.100+08:00|         0.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.200+08:00|         1.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.300+08:00|         2.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.400+08:00|         3.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.500+08:00|         4.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.600+08:00|         5.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.700+08:00|         6.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.800+08:00|         7.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.900+08:00|         8.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.000+08:00|         9.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.100+08:00|         9.1|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.200+08:00|         9.2|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.300+08:00|         9.3|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.400+08:00|         9.4|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.500+08:00|         9.5|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.600+08:00|         9.6|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.700+08:00|         9.7|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.800+08:00|         9.8|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.900+08:00|         9.9|</span></span>
<span class="line"><span>|1970-01-01T08:00:02.000+08:00|        10.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:02.100+08:00|         8.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:02.200+08:00|         6.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:02.300+08:00|         4.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:02.400+08:00|         2.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:02.500+08:00|         0.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:02.600+08:00|        -2.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:02.700+08:00|        -4.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:02.800+08:00|        -6.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:02.900+08:00|        -8.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:03.000+08:00|       -10.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:03.100+08:00|        10.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:03.200+08:00|        10.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:03.300+08:00|        10.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:03.400+08:00|        10.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:03.500+08:00|        10.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:03.600+08:00|        10.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:03.700+08:00|        10.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:03.800+08:00|        10.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:03.900+08:00|        10.0|</span></span>
<span class="line"><span>+-----------------------------+------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>用于查询的 SQL 语句：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">select</span><span style="color:#ABB2BF;"> segment(s1,</span><span style="color:#98C379;">&quot;error&quot;</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;0.1&quot;</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">test</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>输出序列：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+------------------------------------+</span></span>
<span class="line"><span>|                         Time|segment(root.test.s1, &quot;error&quot;=&quot;0.1&quot;)|</span></span>
<span class="line"><span>+-----------------------------+------------------------------------+</span></span>
<span class="line"><span>|1970-01-01T08:00:00.000+08:00|                                 5.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.200+08:00|                                 1.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.000+08:00|                                 9.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:02.000+08:00|                                10.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:03.000+08:00|                               -10.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:03.200+08:00|                                10.0|</span></span>
<span class="line"><span>+-----------------------------+------------------------------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="skew" tabindex="-1"><a class="header-anchor" href="#skew"><span>Skew</span></a></h3><h4 id="函数简介-17" tabindex="-1"><a class="header-anchor" href="#函数简介-17"><span>函数简介</span></a></h4><p>本函数用于计算单列数值型数据的总体偏度</p><p><strong>函数名：</strong> SKEW</p><p><strong>输入序列：</strong> 仅支持单个输入序列，类型为 INT32 / INT64 / FLOAT / DOUBLE</p><p><strong>输出序列：</strong> 输出单个序列，类型为 DOUBLE，序列仅包含一个时间戳为 0、值为总体偏度的数据点。</p><p><strong>提示：</strong> 数据中的空值、缺失值和<code>NaN</code>将会被忽略。</p><h4 id="使用示例-17" tabindex="-1"><a class="header-anchor" href="#使用示例-17"><span>使用示例</span></a></h4><p>输入序列：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+---------------+</span></span>
<span class="line"><span>|                         Time|root.test.d1.s1|</span></span>
<span class="line"><span>+-----------------------------+---------------+</span></span>
<span class="line"><span>|2020-01-01T00:00:00.000+08:00|            1.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:01.000+08:00|            2.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:02.000+08:00|            3.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:03.000+08:00|            4.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:04.000+08:00|            5.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:05.000+08:00|            6.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:06.000+08:00|            7.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:07.000+08:00|            8.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:08.000+08:00|            9.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:09.000+08:00|           10.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:10.000+08:00|           10.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:11.000+08:00|           10.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:12.000+08:00|           10.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:13.000+08:00|           10.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:14.000+08:00|           10.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:15.000+08:00|           10.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:16.000+08:00|           10.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:17.000+08:00|           10.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:18.000+08:00|           10.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:19.000+08:00|           10.0|</span></span>
<span class="line"><span>+-----------------------------+---------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>用于查询的SQL语句：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">select</span><span style="color:#ABB2BF;"> skew(s1) </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">test</span><span style="color:#ABB2BF;">.d1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>输出序列：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+-----------------------+</span></span>
<span class="line"><span>|                         Time|  skew(root.test.d1.s1)|</span></span>
<span class="line"><span>+-----------------------------+-----------------------+</span></span>
<span class="line"><span>|1970-01-01T08:00:00.000+08:00|    -0.9998427402292644|</span></span>
<span class="line"><span>+-----------------------------+-----------------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="spline" tabindex="-1"><a class="header-anchor" href="#spline"><span>Spline</span></a></h3><h4 id="函数简介-18" tabindex="-1"><a class="header-anchor" href="#函数简介-18"><span>函数简介</span></a></h4><p>本函数提供对原始序列进行三次样条曲线拟合后的插值重采样。</p><p><strong>函数名：</strong> SPLINE</p><p><strong>输入序列：</strong> 仅支持单个输入序列，类型为 INT32 / INT64 / FLOAT / DOUBLE。</p><p><strong>参数：</strong></p><ul><li><code>points</code>：重采样个数。</li></ul><p><strong>输出序列</strong>：输出单个序列，类型为 DOUBLE。</p><p><strong>提示</strong>：输出序列保留输入序列的首尾值，等时间间隔采样。仅当输入点个数不少于 4 个时才计算插值。</p><h4 id="使用示例-18" tabindex="-1"><a class="header-anchor" href="#使用示例-18"><span>使用示例</span></a></h4><h5 id="指定插值个数" tabindex="-1"><a class="header-anchor" href="#指定插值个数"><span>指定插值个数</span></a></h5><p>输入序列：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+------------+</span></span>
<span class="line"><span>|                         Time|root.test.s1|</span></span>
<span class="line"><span>+-----------------------------+------------+</span></span>
<span class="line"><span>|1970-01-01T08:00:00.000+08:00|         0.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.300+08:00|         1.2|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.500+08:00|         1.7|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.700+08:00|         2.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.900+08:00|         2.1|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.100+08:00|         2.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.200+08:00|         1.8|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.300+08:00|         1.2|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.400+08:00|         1.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.500+08:00|         1.6|</span></span>
<span class="line"><span>+-----------------------------+------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>用于查询的 SQL 语句：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">select</span><span style="color:#ABB2BF;"> spline(s1, </span><span style="color:#98C379;">&quot;points&quot;</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;151&quot;</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">test</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>输出序列：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+------------------------------------+</span></span>
<span class="line"><span>|                         Time|spline(root.test.s1, &quot;points&quot;=&quot;151&quot;)|</span></span>
<span class="line"><span>+-----------------------------+------------------------------------+</span></span>
<span class="line"><span>|1970-01-01T08:00:00.000+08:00|                                 0.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.010+08:00|                 0.04870000251134237|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.020+08:00|                 0.09680000495910646|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.030+08:00|                 0.14430000734329226|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.040+08:00|                 0.19120000966389972|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.050+08:00|                 0.23750001192092896|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.060+08:00|                  0.2832000141143799|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.070+08:00|                 0.32830001624425253|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.080+08:00|                  0.3728000183105469|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.090+08:00|                   0.416700020313263|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.100+08:00|                  0.4600000222524008|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.110+08:00|                  0.5027000241279602|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.120+08:00|                  0.5448000259399414|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.130+08:00|                  0.5863000276883443|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.140+08:00|                   0.627200029373169|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.150+08:00|                  0.6675000309944153|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.160+08:00|                  0.7072000325520833|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.170+08:00|                  0.7463000340461731|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.180+08:00|                  0.7848000354766846|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.190+08:00|                  0.8227000368436178|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.200+08:00|                  0.8600000381469728|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.210+08:00|                  0.8967000393867494|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.220+08:00|                  0.9328000405629477|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.230+08:00|                  0.9683000416755676|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.240+08:00|                  1.0032000427246095|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.250+08:00|                   1.037500043710073|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.260+08:00|                   1.071200044631958|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.270+08:00|                  1.1043000454902647|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.280+08:00|                  1.1368000462849934|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.290+08:00|                  1.1687000470161437|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.300+08:00|                  1.2000000476837158|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.310+08:00|                  1.2307000483103594|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.320+08:00|                  1.2608000489139557|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.330+08:00|                  1.2903000494873524|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.340+08:00|                  1.3192000500233967|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.350+08:00|                  1.3475000505149364|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.360+08:00|                  1.3752000509548186|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.370+08:00|                   1.402300051335891|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.380+08:00|                  1.4288000516510009|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.390+08:00|                  1.4547000518929958|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.400+08:00|                   1.480000052054723|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.410+08:00|                  1.5047000521290301|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.420+08:00|                  1.5288000521087646|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.430+08:00|                  1.5523000519867738|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.440+08:00|                   1.575200051755905|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.450+08:00|                   1.597500051409006|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.460+08:00|                   1.619200050938924|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.470+08:00|                  1.6403000503385066|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.480+08:00|                   1.660800049600601|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.490+08:00|                   1.680700048718055|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.500+08:00|                  1.7000000476837158|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.510+08:00|                  1.7188475466453037|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.520+08:00|                  1.7373800457262996|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.530+08:00|                  1.7555825448831923|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.540+08:00|                  1.7734400440724702|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.550+08:00|                   1.790937543250622|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.560+08:00|                  1.8080600423741364|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.570+08:00|                  1.8247925413995016|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.580+08:00|                  1.8411200402832066|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.590+08:00|                  1.8570275389817397|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.600+08:00|                  1.8725000374515897|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.610+08:00|                  1.8875225356492449|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.620+08:00|                   1.902080033531194|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.630+08:00|                  1.9161575310539258|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.640+08:00|                  1.9297400281739288|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.650+08:00|                  1.9428125248476913|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.660+08:00|                  1.9553600210317021|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.670+08:00|                    1.96736751668245|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.680+08:00|                  1.9788200117564232|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.690+08:00|                  1.9897025062101101|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.700+08:00|                                 2.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.710+08:00|                  2.0097024933913334|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.720+08:00|                  2.0188199867081615|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.730+08:00|                   2.027367479995188|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.740+08:00|                  2.0353599732971155|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.750+08:00|                  2.0428124666586482|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.760+08:00|                   2.049739960124489|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.770+08:00|                   2.056157453739342|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.780+08:00|                    2.06207994754791|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.790+08:00|                   2.067522441594897|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.800+08:00|                   2.072499935925006|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.810+08:00|                    2.07702743058294|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.820+08:00|                   2.081119925613404|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.830+08:00|                     2.0847924210611|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.840+08:00|                  2.0880599169707317|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.850+08:00|                  2.0909374133870027|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.860+08:00|                  2.0934399103546166|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.870+08:00|                  2.0955824079182768|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.880+08:00|                  2.0973799061226863|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.890+08:00|                   2.098847405012549|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.900+08:00|                  2.0999999046325684|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.910+08:00|                  2.1005574051201332|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.920+08:00|                  2.1002599065303778|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.930+08:00|                  2.0991524087846245|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.940+08:00|                  2.0972799118041947|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.950+08:00|                  2.0946874155104105|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.960+08:00|                  2.0914199198245944|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.970+08:00|                  2.0875224246680673|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.980+08:00|                   2.083039929962151|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.990+08:00|                  2.0780174356281687|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.000+08:00|                  2.0724999415874406|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.010+08:00|                    2.06653244776129|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.020+08:00|                   2.060159954071038|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.030+08:00|                   2.053427460438006|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.040+08:00|                   2.046379966783517|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.050+08:00|                  2.0390624730288924|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.060+08:00|                   2.031519979095454|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.070+08:00|                  2.0237974849045237|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.080+08:00|                   2.015939990377423|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.090+08:00|                  2.0079924954354746|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.100+08:00|                                 2.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.110+08:00|                  1.9907018211101906|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.120+08:00|                  1.9788509124245144|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.130+08:00|                  1.9645127287932083|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.140+08:00|                  1.9477527250665083|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.150+08:00|                  1.9286363560946513|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.160+08:00|                  1.9072290767278735|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.170+08:00|                  1.8835963418164114|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.180+08:00|                  1.8578036062105014|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.190+08:00|                  1.8299163247603802|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.200+08:00|                  1.7999999523162842|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.210+08:00|                  1.7623635841923329|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.220+08:00|                  1.7129696477516976|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.230+08:00|                  1.6543635959181928|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.240+08:00|                  1.5890908816156328|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.250+08:00|                  1.5196969577678319|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.260+08:00|                  1.4487272772986044|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.270+08:00|                  1.3787272931317647|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.280+08:00|                  1.3122424581911272|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.290+08:00|                   1.251818225400506|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.300+08:00|                  1.2000000476837158|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.310+08:00|                  1.1548000470995912|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.320+08:00|                  1.1130667107899999|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.330+08:00|                  1.0756000393033045|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.340+08:00|                   1.043200033187868|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.350+08:00|                   1.016666692992053|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.360+08:00|                  0.9968000192642223|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.370+08:00|                  0.9844000125527389|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.380+08:00|                  0.9802666734059655|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.390+08:00|                  0.9852000023722649|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.400+08:00|                                 1.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.410+08:00|                   1.023999999165535|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.420+08:00|                  1.0559999990463256|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.430+08:00|                  1.0959999996423722|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.440+08:00|                  1.1440000009536744|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.450+08:00|                  1.2000000029802322|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.460+08:00|                   1.264000005722046|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.470+08:00|                  1.3360000091791153|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.480+08:00|                  1.4160000133514405|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.490+08:00|                  1.5040000182390214|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.500+08:00|                   1.600000023841858|</span></span>
<span class="line"><span>+-----------------------------+------------------------------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="spread" tabindex="-1"><a class="header-anchor" href="#spread"><span>Spread</span></a></h3><h4 id="函数简介-19" tabindex="-1"><a class="header-anchor" href="#函数简介-19"><span>函数简介</span></a></h4><p>本函数用于计算时间序列的极差，即最大值减去最小值的结果。</p><p><strong>函数名：</strong> SPREAD</p><p><strong>输入序列：</strong> 仅支持单个输入序列，类型为 INT32 / INT64 / FLOAT / DOUBLE。</p><p><strong>输出序列：</strong> 输出单个序列，类型与输入相同，序列仅包含一个时间戳为 0 、值为极差的数据点。</p><p><strong>提示：</strong> 数据中的空值、缺失值和<code>NaN</code>将会被忽略。</p><h4 id="使用示例-19" tabindex="-1"><a class="header-anchor" href="#使用示例-19"><span>使用示例</span></a></h4><p>输入序列：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+---------------+</span></span>
<span class="line"><span>|                         Time|root.test.d1.s1|</span></span>
<span class="line"><span>+-----------------------------+---------------+</span></span>
<span class="line"><span>|2020-01-01T00:00:02.000+08:00|          100.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:03.000+08:00|          101.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:04.000+08:00|          102.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:06.000+08:00|          104.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:08.000+08:00|          126.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:10.000+08:00|          108.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:14.000+08:00|          112.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:15.000+08:00|          113.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:16.000+08:00|          114.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:18.000+08:00|          116.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:20.000+08:00|          118.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:22.000+08:00|          120.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:26.000+08:00|          124.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:28.000+08:00|          126.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:30.000+08:00|            NaN|</span></span>
<span class="line"><span>+-----------------------------+---------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>用于查询的 SQL 语句：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">select</span><span style="color:#ABB2BF;"> spread(s1) </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">test</span><span style="color:#ABB2BF;">.d1 </span><span style="color:#C678DD;">where</span><span style="color:#C678DD;"> time</span><span style="color:#56B6C2;"> &lt;=</span><span style="color:#D19A66;"> 2020</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">01</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">01</span><span style="color:#D19A66;"> 00</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">30</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>输出序列：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+-----------------------+</span></span>
<span class="line"><span>|                         Time|spread(root.test.d1.s1)|</span></span>
<span class="line"><span>+-----------------------------+-----------------------+</span></span>
<span class="line"><span>|1970-01-01T08:00:00.000+08:00|                   26.0|</span></span>
<span class="line"><span>+-----------------------------+-----------------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="stddev" tabindex="-1"><a class="header-anchor" href="#stddev"><span>Stddev</span></a></h3><h4 id="函数简介-20" tabindex="-1"><a class="header-anchor" href="#函数简介-20"><span>函数简介</span></a></h4><p>本函数用于计算单列数值型数据的总体标准差。</p><p><strong>函数名：</strong> STDDEV</p><p><strong>输入序列：</strong> 仅支持单个输入序列，类型为 INT32 / INT64 / FLOAT / DOUBLE。</p><p><strong>输出序列：</strong> 输出单个序列，类型为 DOUBLE。序列仅包含一个时间戳为 0、值为总体标准差的数据点。</p><p><strong>提示：</strong> 数据中的空值、缺失值和<code>NaN</code>将会被忽略。</p><h4 id="使用示例-20" tabindex="-1"><a class="header-anchor" href="#使用示例-20"><span>使用示例</span></a></h4><p>输入序列：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+---------------+</span></span>
<span class="line"><span>|                         Time|root.test.d1.s1|</span></span>
<span class="line"><span>+-----------------------------+---------------+</span></span>
<span class="line"><span>|2020-01-01T00:00:00.000+08:00|            1.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:01.000+08:00|            2.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:02.000+08:00|            3.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:03.000+08:00|            4.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:04.000+08:00|            5.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:05.000+08:00|            6.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:06.000+08:00|            7.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:07.000+08:00|            8.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:08.000+08:00|            9.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:09.000+08:00|           10.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:10.000+08:00|           11.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:11.000+08:00|           12.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:12.000+08:00|           13.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:13.000+08:00|           14.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:14.000+08:00|           15.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:15.000+08:00|           16.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:16.000+08:00|           17.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:17.000+08:00|           18.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:18.000+08:00|           19.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:19.000+08:00|           20.0|</span></span>
<span class="line"><span>+-----------------------------+---------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>用于查询的 SQL 语句：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">select</span><span style="color:#ABB2BF;"> stddev(s1) </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">test</span><span style="color:#ABB2BF;">.d1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>输出序列：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+-----------------------+</span></span>
<span class="line"><span>|                         Time|stddev(root.test.d1.s1)|</span></span>
<span class="line"><span>+-----------------------------+-----------------------+</span></span>
<span class="line"><span>|1970-01-01T08:00:00.000+08:00|     5.7662812973353965|</span></span>
<span class="line"><span>+-----------------------------+-----------------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="zscore" tabindex="-1"><a class="header-anchor" href="#zscore"><span>ZScore</span></a></h3><h4 id="函数简介-21" tabindex="-1"><a class="header-anchor" href="#函数简介-21"><span>函数简介</span></a></h4><p>本函数将输入序列使用z-score方法进行归一化。</p><p><strong>函数名：</strong> ZSCORE</p><p><strong>输入序列：</strong> 仅支持单个输入序列，类型为 INT32 / INT64 / FLOAT / DOUBLE。</p><p><strong>参数：</strong></p><ul><li><code>compute</code>：若设置为 &quot;batch&quot;，则将数据全部读入后转换；若设置为 &quot;stream&quot;，则需用户提供均值及方差进行流式计算转换。默认为 &quot;batch&quot;。</li><li><code>avg</code>：使用流式计算时的均值。</li><li><code>sd</code>：使用流式计算时的标准差。</li></ul><p><strong>输出序列</strong>：输出单个序列，类型为 DOUBLE。</p><h4 id="使用示例-21" tabindex="-1"><a class="header-anchor" href="#使用示例-21"><span>使用示例</span></a></h4><h5 id="全数据计算-1" tabindex="-1"><a class="header-anchor" href="#全数据计算-1"><span>全数据计算</span></a></h5><p>输入序列：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+------------+</span></span>
<span class="line"><span>|                         Time|root.test.s1|</span></span>
<span class="line"><span>+-----------------------------+------------+</span></span>
<span class="line"><span>|1970-01-01T08:00:00.100+08:00|         0.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.200+08:00|         0.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.300+08:00|         1.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.400+08:00|        -1.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.500+08:00|         0.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.600+08:00|         0.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.700+08:00|        -2.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.800+08:00|         2.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.900+08:00|         0.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.000+08:00|         0.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.100+08:00|         1.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.200+08:00|        -1.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.300+08:00|        -1.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.400+08:00|         1.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.500+08:00|         0.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.600+08:00|         0.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.700+08:00|        10.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.800+08:00|         2.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.900+08:00|        -2.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:02.000+08:00|         0.0|</span></span>
<span class="line"><span>+-----------------------------+------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>用于查询的 SQL 语句：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">select</span><span style="color:#ABB2BF;"> zscore(s1) </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">test</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>输出序列：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+--------------------+</span></span>
<span class="line"><span>|                         Time|zscore(root.test.s1)|</span></span>
<span class="line"><span>+-----------------------------+--------------------+</span></span>
<span class="line"><span>|1970-01-01T08:00:00.100+08:00|-0.20672455764868078|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.200+08:00|-0.20672455764868078|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.300+08:00| 0.20672455764868078|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.400+08:00| -0.6201736729460423|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.500+08:00|-0.20672455764868078|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.600+08:00|-0.20672455764868078|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.700+08:00|  -1.033622788243404|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.800+08:00|  0.6201736729460423|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.900+08:00|-0.20672455764868078|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.000+08:00|-0.20672455764868078|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.100+08:00| 0.20672455764868078|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.200+08:00| -0.6201736729460423|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.300+08:00| -0.6201736729460423|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.400+08:00| 0.20672455764868078|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.500+08:00|-0.20672455764868078|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.600+08:00|-0.20672455764868078|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.700+08:00|  3.9277665953249348|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.800+08:00|  0.6201736729460423|</span></span>
<span class="line"><span>|1970-01-01T08:00:01.900+08:00|  -1.033622788243404|</span></span>
<span class="line"><span>|1970-01-01T08:00:02.000+08:00|-0.20672455764868078|</span></span>
<span class="line"><span>+-----------------------------+--------------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,200))])}const C=i(d,[["render",x],["__file","Data-Profiling.html.vue"]]),F=JSON.parse('{"path":"/zh/UserGuide/V0.13.x/UDF-Library/Data-Profiling.html","title":"","lang":"zh-CN","frontmatter":{"description":"数据画像 ACF 函数简介 本函数用于计算时间序列的自相关函数值，即序列与自身之间的互相关函数，详情参见XCorr函数文档。 函数名： ACF 输入序列： 仅支持单个输入序列，类型为 INT32 / INT64 / FLOAT / DOUBLE。 输出序列： 输出单个序列，类型为 DOUBLE。序列中共包含个数据点，每个值的具体含义参见XCorr函数文...","head":[["link",{"rel":"alternate","hreflang":"en-us","href":"https://iotdb.apache.org/UserGuide/V0.13.x/UDF-Library/Data-Profiling.html"}],["meta",{"property":"og:url","content":"https://iotdb.apache.org/zh/UserGuide/V0.13.x/UDF-Library/Data-Profiling.html"}],["meta",{"property":"og:site_name","content":"IoTDB Website"}],["meta",{"property":"og:description","content":"数据画像 ACF 函数简介 本函数用于计算时间序列的自相关函数值，即序列与自身之间的互相关函数，详情参见XCorr函数文档。 函数名： ACF 输入序列： 仅支持单个输入序列，类型为 INT32 / INT64 / FLOAT / DOUBLE。 输出序列： 输出单个序列，类型为 DOUBLE。序列中共包含个数据点，每个值的具体含义参见XCorr函数文..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2023-07-10T03:11:17.000Z"}],["meta",{"property":"article:modified_time","content":"2023-07-10T03:11:17.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-07-10T03:11:17.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"数据画像","slug":"数据画像","link":"#数据画像","children":[{"level":3,"title":"ACF","slug":"acf","link":"#acf","children":[]},{"level":3,"title":"Distinct","slug":"distinct","link":"#distinct","children":[]},{"level":3,"title":"Histogram","slug":"histogram","link":"#histogram","children":[]},{"level":3,"title":"Integral","slug":"integral","link":"#integral","children":[]},{"level":3,"title":"IntegralAvg","slug":"integralavg","link":"#integralavg","children":[]},{"level":3,"title":"Mad","slug":"mad","link":"#mad","children":[]},{"level":3,"title":"Median","slug":"median","link":"#median","children":[]},{"level":3,"title":"MinMax","slug":"minmax","link":"#minmax","children":[]},{"level":3,"title":"Mode","slug":"mode","link":"#mode","children":[]},{"level":3,"title":"MvAvg","slug":"mvavg","link":"#mvavg","children":[]},{"level":3,"title":"PACF","slug":"pacf","link":"#pacf","children":[]},{"level":3,"title":"Percentile","slug":"percentile","link":"#percentile","children":[]},{"level":3,"title":"Period","slug":"period","link":"#period","children":[]},{"level":3,"title":"QLB","slug":"qlb","link":"#qlb","children":[]},{"level":3,"title":"Resample","slug":"resample","link":"#resample","children":[]},{"level":3,"title":"Sample","slug":"sample","link":"#sample","children":[]},{"level":3,"title":"Segment","slug":"segment","link":"#segment","children":[]},{"level":3,"title":"Skew","slug":"skew","link":"#skew","children":[]},{"level":3,"title":"Spline","slug":"spline","link":"#spline","children":[]},{"level":3,"title":"Spread","slug":"spread","link":"#spread","children":[]},{"level":3,"title":"Stddev","slug":"stddev","link":"#stddev","children":[]},{"level":3,"title":"ZScore","slug":"zscore","link":"#zscore","children":[]}]}],"git":{"createdTime":1688958677000,"updatedTime":1688958677000,"contributors":[{"name":"CritasWang","username":"CritasWang","email":"critas@outlook.com","commits":1,"url":"https://github.com/CritasWang"}]},"readingTime":{"minutes":36.21,"words":10864},"filePathRelative":"zh/UserGuide/V0.13.x/UDF-Library/Data-Profiling.md","localizedDate":"2023年7月10日","autoDesc":true}');export{C as comp,F as data};
