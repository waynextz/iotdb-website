import{_ as n,c as a,b as e,o as i}from"./app-DBchSYps.js";const l={};function p(r,s){return i(),a("div",null,s[0]||(s[0]=[e(`<h1 id="data-repairing" tabindex="-1"><a class="header-anchor" href="#data-repairing"><span>Data Repairing</span></a></h1><h2 id="timestamprepair" tabindex="-1"><a class="header-anchor" href="#timestamprepair"><span>TimestampRepair</span></a></h2><p>This function is used for timestamp repair.<br> According to the given standard time interval,<br> the method of minimizing the repair cost is adopted.<br> By fine-tuning the timestamps,<br> the original data with unstable timestamp interval is repaired to strictly equispaced data.<br> If no standard time interval is given,<br> this function will use the <strong>median</strong>, <strong>mode</strong> or <strong>cluster</strong> of the time interval to estimate the standard time interval.</p><p><strong>Name:</strong> TIMESTAMPREPAIR</p><p><strong>Input Series:</strong> Only support a single input series. The data type is INT32 / INT64 / FLOAT / DOUBLE.</p><p><strong>Parameters:</strong></p><ul><li><code>interval</code>: The standard time interval whose unit is millisecond. It is a positive integer. By default, it will be estimated according to the given method.</li><li><code>method</code>: The method to estimate the standard time interval, which is &#39;median&#39;, &#39;mode&#39; or &#39;cluster&#39;. This parameter is only valid when <code>interval</code> is not given. By default, median will be used.</li></ul><p><strong>Output Series:</strong> Output a single series. The type is the same as the input. This series is the input after repairing.</p><h3 id="examples" tabindex="-1"><a class="header-anchor" href="#examples"><span>Examples</span></a></h3><h4 id="manually-specify-the-standard-time-interval" tabindex="-1"><a class="header-anchor" href="#manually-specify-the-standard-time-interval"><span>Manually Specify the Standard Time Interval</span></a></h4><p>When <code>interval</code> is given, this function repairs according to the given standard time interval.</p><p>Input series:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+---------------+</span></span>
<span class="line"><span>|                         Time|root.test.d2.s1|</span></span>
<span class="line"><span>+-----------------------------+---------------+</span></span>
<span class="line"><span>|2021-07-01T12:00:00.000+08:00|            1.0|</span></span>
<span class="line"><span>|2021-07-01T12:00:10.000+08:00|            2.0|</span></span>
<span class="line"><span>|2021-07-01T12:00:19.000+08:00|            3.0|</span></span>
<span class="line"><span>|2021-07-01T12:00:30.000+08:00|            4.0|</span></span>
<span class="line"><span>|2021-07-01T12:00:40.000+08:00|            5.0|</span></span>
<span class="line"><span>|2021-07-01T12:00:50.000+08:00|            6.0|</span></span>
<span class="line"><span>|2021-07-01T12:01:01.000+08:00|            7.0|</span></span>
<span class="line"><span>|2021-07-01T12:01:11.000+08:00|            8.0|</span></span>
<span class="line"><span>|2021-07-01T12:01:21.000+08:00|            9.0|</span></span>
<span class="line"><span>|2021-07-01T12:01:31.000+08:00|           10.0|</span></span>
<span class="line"><span>+-----------------------------+---------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>SQL for query:</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">select</span><span style="color:#ABB2BF;"> timestamprepair(s1,</span><span style="color:#98C379;">&#39;interval&#39;</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&#39;10000&#39;</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">test</span><span style="color:#ABB2BF;">.d2</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Output series:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+----------------------------------------------------+</span></span>
<span class="line"><span>|                         Time|timestamprepair(root.test.d2.s1, &quot;interval&quot;=&quot;10000&quot;)|</span></span>
<span class="line"><span>+-----------------------------+----------------------------------------------------+</span></span>
<span class="line"><span>|2021-07-01T12:00:00.000+08:00|                                                 1.0|</span></span>
<span class="line"><span>|2021-07-01T12:00:10.000+08:00|                                                 2.0|</span></span>
<span class="line"><span>|2021-07-01T12:00:20.000+08:00|                                                 3.0|</span></span>
<span class="line"><span>|2021-07-01T12:00:30.000+08:00|                                                 4.0|</span></span>
<span class="line"><span>|2021-07-01T12:00:40.000+08:00|                                                 5.0|</span></span>
<span class="line"><span>|2021-07-01T12:00:50.000+08:00|                                                 6.0|</span></span>
<span class="line"><span>|2021-07-01T12:01:00.000+08:00|                                                 7.0|</span></span>
<span class="line"><span>|2021-07-01T12:01:10.000+08:00|                                                 8.0|</span></span>
<span class="line"><span>|2021-07-01T12:01:20.000+08:00|                                                 9.0|</span></span>
<span class="line"><span>|2021-07-01T12:01:30.000+08:00|                                                10.0|</span></span>
<span class="line"><span>+-----------------------------+----------------------------------------------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="automatically-estimate-the-standard-time-interval" tabindex="-1"><a class="header-anchor" href="#automatically-estimate-the-standard-time-interval"><span>Automatically Estimate the Standard Time Interval</span></a></h4><p>When <code>interval</code> is default, this function estimates the standard time interval.</p><p>Input series is the same as above, the SQL for query is shown below:</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">select</span><span style="color:#ABB2BF;"> timestamprepair(s1) </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">test</span><span style="color:#ABB2BF;">.d2</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Output series:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+--------------------------------+</span></span>
<span class="line"><span>|                         Time|timestamprepair(root.test.d2.s1)|</span></span>
<span class="line"><span>+-----------------------------+--------------------------------+</span></span>
<span class="line"><span>|2021-07-01T12:00:00.000+08:00|                             1.0|</span></span>
<span class="line"><span>|2021-07-01T12:00:10.000+08:00|                             2.0|</span></span>
<span class="line"><span>|2021-07-01T12:00:20.000+08:00|                             3.0|</span></span>
<span class="line"><span>|2021-07-01T12:00:30.000+08:00|                             4.0|</span></span>
<span class="line"><span>|2021-07-01T12:00:40.000+08:00|                             5.0|</span></span>
<span class="line"><span>|2021-07-01T12:00:50.000+08:00|                             6.0|</span></span>
<span class="line"><span>|2021-07-01T12:01:00.000+08:00|                             7.0|</span></span>
<span class="line"><span>|2021-07-01T12:01:10.000+08:00|                             8.0|</span></span>
<span class="line"><span>|2021-07-01T12:01:20.000+08:00|                             9.0|</span></span>
<span class="line"><span>|2021-07-01T12:01:30.000+08:00|                            10.0|</span></span>
<span class="line"><span>+-----------------------------+--------------------------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="valuefill" tabindex="-1"><a class="header-anchor" href="#valuefill"><span>ValueFill</span></a></h2><h3 id="usage" tabindex="-1"><a class="header-anchor" href="#usage"><span>Usage</span></a></h3><p>This function is used to impute time series. Several methods are supported.</p><p><strong>Name</strong>: ValueFill<br><strong>Input Series:</strong> Only support a single input series. The type is INT32 / INT64 / FLOAT / DOUBLE.</p><p><strong>Parameters:</strong></p><ul><li><code>method</code>: {&quot;mean&quot;, &quot;previous&quot;, &quot;linear&quot;, &quot;likelihood&quot;, &quot;AR&quot;, &quot;MA&quot;, &quot;SCREEN&quot;}, default &quot;linear&quot;.<br> Method to use for imputation in series. &quot;mean&quot;: use global mean value to fill holes; &quot;previous&quot;: propagate last valid observation forward to next valid. &quot;linear&quot;: simplest interpolation method; &quot;likelihood&quot;:Maximum likelihood estimation based on the normal distribution of speed; &quot;AR&quot;: auto regression; &quot;MA&quot;: moving average; &quot;SCREEN&quot;: speed constraint.</li></ul><p><strong>Output Series:</strong> Output a single series. The type is the same as the input. This series is the input after repairing.</p><p><strong>Note:</strong> AR method use AR(1) model. Input value should be auto-correlated, or the function would output a single point (0, 0.0).</p><h3 id="examples-1" tabindex="-1"><a class="header-anchor" href="#examples-1"><span>Examples</span></a></h3><h4 id="fill-with-linear" tabindex="-1"><a class="header-anchor" href="#fill-with-linear"><span>Fill with linear</span></a></h4><p>When <code>method</code> is &quot;linear&quot; or the default, Screen method is used to impute.</p><p>Input series:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+---------------+</span></span>
<span class="line"><span>|                         Time|root.test.d2.s1|</span></span>
<span class="line"><span>+-----------------------------+---------------+</span></span>
<span class="line"><span>|2020-01-01T00:00:02.000+08:00|            NaN|</span></span>
<span class="line"><span>|2020-01-01T00:00:03.000+08:00|          101.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:04.000+08:00|          102.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:06.000+08:00|          104.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:08.000+08:00|          126.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:10.000+08:00|          108.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:14.000+08:00|            NaN|</span></span>
<span class="line"><span>|2020-01-01T00:00:15.000+08:00|          113.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:16.000+08:00|          114.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:18.000+08:00|          116.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:20.000+08:00|            NaN|</span></span>
<span class="line"><span>|2020-01-01T00:00:22.000+08:00|            NaN|</span></span>
<span class="line"><span>|2020-01-01T00:00:26.000+08:00|          124.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:28.000+08:00|          126.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:30.000+08:00|          128.0|</span></span>
<span class="line"><span>+-----------------------------+---------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>SQL for query:</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">select</span><span style="color:#ABB2BF;"> valuefill(s1) </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">test</span><span style="color:#ABB2BF;">.d2</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Output series:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+-----------------------+</span></span>
<span class="line"><span>|                         Time|valuefill(root.test.d2)|</span></span>
<span class="line"><span>+-----------------------------+-----------------------+</span></span>
<span class="line"><span>|2020-01-01T00:00:02.000+08:00|                    NaN|</span></span>
<span class="line"><span>|2020-01-01T00:00:03.000+08:00|                  101.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:04.000+08:00|                  102.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:06.000+08:00|                  104.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:08.000+08:00|                  126.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:10.000+08:00|                  108.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:14.000+08:00|                  108.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:15.000+08:00|                  113.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:16.000+08:00|                  114.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:18.000+08:00|                  116.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:20.000+08:00|                  118.7|</span></span>
<span class="line"><span>|2020-01-01T00:00:22.000+08:00|                  121.3|</span></span>
<span class="line"><span>|2020-01-01T00:00:26.000+08:00|                  124.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:28.000+08:00|                  126.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:30.000+08:00|                  128.0|</span></span>
<span class="line"><span>+-----------------------------+-----------------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="previous-fill" tabindex="-1"><a class="header-anchor" href="#previous-fill"><span>Previous Fill</span></a></h4><p>When <code>method</code> is &quot;previous&quot;, previous method is used.</p><p>Input series is the same as above, the SQL for query is shown below:</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">select</span><span style="color:#ABB2BF;"> valuefill(s1,</span><span style="color:#98C379;">&quot;method&quot;</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;previous&quot;</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">test</span><span style="color:#ABB2BF;">.d2</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Output series:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+-------------------------------------------+</span></span>
<span class="line"><span>|                         Time|valuefill(root.test.d2,&quot;method&quot;=&quot;previous&quot;)|</span></span>
<span class="line"><span>+-----------------------------+-------------------------------------------+</span></span>
<span class="line"><span>|2020-01-01T00:00:02.000+08:00|                                        NaN|</span></span>
<span class="line"><span>|2020-01-01T00:00:03.000+08:00|                                      101.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:04.000+08:00|                                      102.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:06.000+08:00|                                      104.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:08.000+08:00|                                      126.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:10.000+08:00|                                      108.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:14.000+08:00|                                      110.5|</span></span>
<span class="line"><span>|2020-01-01T00:00:15.000+08:00|                                      113.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:16.000+08:00|                                      114.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:18.000+08:00|                                      116.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:20.000+08:00|                                      116.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:22.000+08:00|                                      116.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:26.000+08:00|                                      124.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:28.000+08:00|                                      126.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:30.000+08:00|                                      128.0|</span></span>
<span class="line"><span>+-----------------------------+-------------------------------------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="valuerepair" tabindex="-1"><a class="header-anchor" href="#valuerepair"><span>ValueRepair</span></a></h2><h3 id="usage-1" tabindex="-1"><a class="header-anchor" href="#usage-1"><span>Usage</span></a></h3><p>This function is used to repair the value of the time series.<br> Currently, two methods are supported:<br><strong>Screen</strong> is a method based on speed threshold, which makes all speeds meet the threshold requirements under the premise of minimum changes;<br><strong>LsGreedy</strong> is a method based on speed change likelihood, which models speed changes as Gaussian distribution, and uses a greedy algorithm to maximize the likelihood.</p><p><strong>Name:</strong> VALUEREPAIR</p><p><strong>Input Series:</strong> Only support a single input series. The type is INT32 / INT64 / FLOAT / DOUBLE.</p><p><strong>Parameters:</strong></p><ul><li><code>method</code>: The method used to repair, which is &#39;Screen&#39; or &#39;LsGreedy&#39;. By default, Screen is used.</li><li><code>minSpeed</code>: This parameter is only valid with Screen. It is the speed threshold. Speeds below it will be regarded as outliers. By default, it is the median minus 3 times of median absolute deviation.</li><li><code>maxSpeed</code>: This parameter is only valid with Screen. It is the speed threshold. Speeds above it will be regarded as outliers. By default, it is the median plus 3 times of median absolute deviation.</li><li><code>center</code>: This parameter is only valid with LsGreedy. It is the center of the Gaussian distribution of speed changes. By default, it is 0.</li><li><code>sigma</code>: This parameter is only valid with LsGreedy. It is the standard deviation of the Gaussian distribution of speed changes. By default, it is the median absolute deviation.</li></ul><p><strong>Output Series:</strong> Output a single series. The type is the same as the input. This series is the input after repairing.</p><p><strong>Note:</strong> <code>NaN</code> will be filled with linear interpolation before repairing.</p><h3 id="examples-2" tabindex="-1"><a class="header-anchor" href="#examples-2"><span>Examples</span></a></h3><h4 id="repair-with-screen" tabindex="-1"><a class="header-anchor" href="#repair-with-screen"><span>Repair with Screen</span></a></h4><p>When <code>method</code> is &#39;Screen&#39; or the default, Screen method is used.</p><p>Input series:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+---------------+</span></span>
<span class="line"><span>|                         Time|root.test.d2.s1|</span></span>
<span class="line"><span>+-----------------------------+---------------+</span></span>
<span class="line"><span>|2020-01-01T00:00:02.000+08:00|          100.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:03.000+08:00|          101.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:04.000+08:00|          102.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:06.000+08:00|          104.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:08.000+08:00|          126.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:10.000+08:00|          108.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:14.000+08:00|          112.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:15.000+08:00|          113.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:16.000+08:00|          114.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:18.000+08:00|          116.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:20.000+08:00|          118.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:22.000+08:00|          100.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:26.000+08:00|          124.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:28.000+08:00|          126.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:30.000+08:00|            NaN|</span></span>
<span class="line"><span>+-----------------------------+---------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>SQL for query:</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">select</span><span style="color:#ABB2BF;"> valuerepair(s1) </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">test</span><span style="color:#ABB2BF;">.d2</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Output series:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+----------------------------+</span></span>
<span class="line"><span>|                         Time|valuerepair(root.test.d2.s1)|</span></span>
<span class="line"><span>+-----------------------------+----------------------------+</span></span>
<span class="line"><span>|2020-01-01T00:00:02.000+08:00|                       100.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:03.000+08:00|                       101.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:04.000+08:00|                       102.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:06.000+08:00|                       104.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:08.000+08:00|                       106.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:10.000+08:00|                       108.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:14.000+08:00|                       112.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:15.000+08:00|                       113.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:16.000+08:00|                       114.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:18.000+08:00|                       116.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:20.000+08:00|                       118.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:22.000+08:00|                       120.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:26.000+08:00|                       124.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:28.000+08:00|                       126.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:30.000+08:00|                       128.0|</span></span>
<span class="line"><span>+-----------------------------+----------------------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="repair-with-lsgreedy" tabindex="-1"><a class="header-anchor" href="#repair-with-lsgreedy"><span>Repair with LsGreedy</span></a></h4><p>When <code>method</code> is &#39;LsGreedy&#39;, LsGreedy method is used.</p><p>Input series is the same as above, the SQL for query is shown below:</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">select</span><span style="color:#ABB2BF;"> valuerepair(s1,</span><span style="color:#98C379;">&#39;method&#39;</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&#39;LsGreedy&#39;</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">test</span><span style="color:#ABB2BF;">.d2</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Output series:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+-------------------------------------------------+</span></span>
<span class="line"><span>|                         Time|valuerepair(root.test.d2.s1, &quot;method&quot;=&quot;LsGreedy&quot;)|</span></span>
<span class="line"><span>+-----------------------------+-------------------------------------------------+</span></span>
<span class="line"><span>|2020-01-01T00:00:02.000+08:00|                                            100.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:03.000+08:00|                                            101.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:04.000+08:00|                                            102.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:06.000+08:00|                                            104.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:08.000+08:00|                                            106.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:10.000+08:00|                                            108.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:14.000+08:00|                                            112.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:15.000+08:00|                                            113.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:16.000+08:00|                                            114.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:18.000+08:00|                                            116.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:20.000+08:00|                                            118.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:22.000+08:00|                                            120.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:26.000+08:00|                                            124.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:28.000+08:00|                                            126.0|</span></span>
<span class="line"><span>|2020-01-01T00:00:30.000+08:00|                                            128.0|</span></span>
<span class="line"><span>+-----------------------------+-------------------------------------------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,70)]))}const d=n(l,[["render",p],["__file","Data-Repairing.html.vue"]]),o=JSON.parse('{"path":"/UserGuide/V0.13.x/UDF-Library/Data-Repairing.html","title":"Data Repairing","lang":"en-US","frontmatter":{"description":"Data Repairing TimestampRepair This function is used for timestamp repair. According to the given standard time interval, the method of minimizing the repair cost is adopted. By...","head":[["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://iotdb.apache.org/zh/UserGuide/V0.13.x/UDF-Library/Data-Repairing.html"}],["meta",{"property":"og:url","content":"https://iotdb.apache.org/UserGuide/V0.13.x/UDF-Library/Data-Repairing.html"}],["meta",{"property":"og:site_name","content":"IoTDB Website"}],["meta",{"property":"og:title","content":"Data Repairing"}],["meta",{"property":"og:description","content":"Data Repairing TimestampRepair This function is used for timestamp repair. According to the given standard time interval, the method of minimizing the repair cost is adopted. By..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-07-10T03:11:17.000Z"}],["meta",{"property":"article:modified_time","content":"2023-07-10T03:11:17.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Data Repairing\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-07-10T03:11:17.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"TimestampRepair","slug":"timestamprepair","link":"#timestamprepair","children":[{"level":3,"title":"Examples","slug":"examples","link":"#examples","children":[]}]},{"level":2,"title":"ValueFill","slug":"valuefill","link":"#valuefill","children":[{"level":3,"title":"Usage","slug":"usage","link":"#usage","children":[]},{"level":3,"title":"Examples","slug":"examples-1","link":"#examples-1","children":[]}]},{"level":2,"title":"ValueRepair","slug":"valuerepair","link":"#valuerepair","children":[{"level":3,"title":"Usage","slug":"usage-1","link":"#usage-1","children":[]},{"level":3,"title":"Examples","slug":"examples-2","link":"#examples-2","children":[]}]}],"git":{"createdTime":1688958677000,"updatedTime":1688958677000,"contributors":[{"name":"CritasWang","username":"CritasWang","email":"critas@outlook.com","commits":1,"url":"https://github.com/CritasWang"}]},"readingTime":{"minutes":6.23,"words":1870},"filePathRelative":"UserGuide/V0.13.x/UDF-Library/Data-Repairing.md","localizedDate":"July 10, 2023","autoDesc":true}');export{d as comp,o as data};
