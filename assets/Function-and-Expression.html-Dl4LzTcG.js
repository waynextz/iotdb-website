import{_ as n,c as a,b as l,o as e}from"./app-BrzuM4xY.js";const p={};function o(t,s){return e(),a("div",null,s[0]||(s[0]=[l(`<h1 id="内置函数与表达式" tabindex="-1"><a class="header-anchor" href="#内置函数与表达式"><span>内置函数与表达式</span></a></h1><h2 id="聚合函数" tabindex="-1"><a class="header-anchor" href="#聚合函数"><span>聚合函数</span></a></h2><p>聚合函数是多对一函数。它们对一组值进行聚合计算，得到单个聚合结果。</p><p>除了 <code>COUNT()</code>, <code>COUNT_IF()</code>之外，其他所有聚合函数都忽略空值，并在没有输入行或所有值为空时返回空值。 例如，<code>SUM()</code> 返回 null 而不是零，而 <code>AVG()</code> 在计数中不包括 null 值。</p><p>IoTDB 支持的聚合函数如下：</p><table><thead><tr><th>函数名</th><th>功能描述</th><th>允许的输入类型</th><th>必要的属性参数</th><th>输出类型</th></tr></thead><tbody><tr><td>SUM</td><td>求和。</td><td>INT32 INT64 FLOAT DOUBLE</td><td>无</td><td>DOUBLE</td></tr><tr><td>COUNT</td><td>计算数据点数。</td><td>所有类型</td><td>无</td><td>INT64</td></tr><tr><td>AVG</td><td>求平均值。</td><td>INT32 INT64 FLOAT DOUBLE</td><td>无</td><td>DOUBLE</td></tr><tr><td>STDDEV</td><td>STDDEV_SAMP 的别名，求样本标准差。</td><td>INT32 INT64 FLOAT DOUBLE</td><td>无</td><td>DOUBLE</td></tr><tr><td>STDDEV_POP</td><td>求总体标准差。</td><td>INT32 INT64 FLOAT DOUBLE</td><td>无</td><td>DOUBLE</td></tr><tr><td>STDDEV_SAMP</td><td>求样本标准差。</td><td>INT32 INT64 FLOAT DOUBLE</td><td>无</td><td>DOUBLE</td></tr><tr><td>VARIANCE</td><td>VAR_SAMP 的别名，求样本方差。</td><td>INT32 INT64 FLOAT DOUBLE</td><td>无</td><td>DOUBLE</td></tr><tr><td>VAR_POP</td><td>求总体方差。</td><td>INT32 INT64 FLOAT DOUBLE</td><td>无</td><td>DOUBLE</td></tr><tr><td>VAR_SAMP</td><td>求样本方差。</td><td>INT32 INT64 FLOAT DOUBLE</td><td>无</td><td>DOUBLE</td></tr><tr><td>EXTREME</td><td>求具有最大绝对值的值。如果正值和负值的最大绝对值相等，则返回正值。</td><td>INT32 INT64 FLOAT DOUBLE</td><td>无</td><td>与输入类型一致</td></tr><tr><td>MAX_VALUE</td><td>求最大值。</td><td>INT32 INT64 FLOAT DOUBLE</td><td>无</td><td>与输入类型一致</td></tr><tr><td>MIN_VALUE</td><td>求最小值。</td><td>INT32 INT64 FLOAT DOUBLE</td><td>无</td><td>与输入类型一致</td></tr><tr><td>FIRST_VALUE</td><td>求时间戳最小的值。</td><td>所有类型</td><td>无</td><td>与输入类型一致</td></tr><tr><td>LAST_VALUE</td><td>求时间戳最大的值。</td><td>所有类型</td><td>无</td><td>与输入类型一致</td></tr><tr><td>MAX_TIME</td><td>求最大时间戳。</td><td>所有类型</td><td>无</td><td>Timestamp</td></tr><tr><td>MIN_TIME</td><td>求最小时间戳。</td><td>所有类型</td><td>无</td><td>Timestamp</td></tr><tr><td>COUNT_IF</td><td>求数据点连续满足某一给定条件，且满足条件的数据点个数（用keep表示）满足指定阈值的次数。</td><td>BOOLEAN</td><td><code>[keep &gt;=/&gt;/=/!=/&lt;/&lt;=]threshold</code>：被指定的阈值或阈值条件，若只使用<code>threshold</code>则等价于<code>keep &gt;= threshold</code>,<code>threshold</code>类型为<code>INT64</code> <br> <code>ignoreNull</code>：可选，默认为<code>true</code>；为<code>true</code>表示忽略null值，即如果中间出现null值，直接忽略，不会打断连续性；为<code>false</code>表示不忽略null值，即如果中间出现null值，会打断连续性</td><td>INT64</td></tr><tr><td>TIME_DURATION</td><td>求某一列最大一个不为NULL的值所在时间戳与最小一个不为NULL的值所在时间戳的时间戳差</td><td>所有类型</td><td>无</td><td>INT64</td></tr><tr><td>MODE</td><td>求众数。注意：<br>1.输入序列的不同值个数过多时会有内存异常风险; <br>2.如果所有元素出现的频次相同，即没有众数，则返回对应时间戳最小的值; <br>3.如果有多个众数，则返回对应时间戳最小的众数。</td><td>所有类型</td><td>无</td><td>与输入类型一致</td></tr><tr><td>COUNT_TIME</td><td>查询结果集的时间戳的数量。与 align by device 搭配使用时，得到的结果是每个设备的结果集的时间戳的数量。</td><td>所有类型，输入参数只能为*</td><td>无</td><td>INT64</td></tr><tr><td>MAX_BY</td><td>MAX_BY(x, y) 求二元输入 x 和 y 在 y 最大时对应的 x 的值。MAX_BY(time, x) 返回 x 取最大值时对应的时间戳。</td><td>第一个输入 x 可以是任意类型，第二个输入 y 只能是 INT32 INT64 FLOAT DOUBLE</td><td>无</td><td>与第一个输入 x 的数据类型一致</td></tr><tr><td>MIN_BY</td><td>MIN_BY(x, y) 求二元输入 x 和 y 在 y 最小时对应的 x 的值。MIN_BY(time, x) 返回 x 取最小值时对应的时间戳。</td><td>第一个输入 x 可以是任意类型，第二个输入 y 只能是 INT32 INT64 FLOAT DOUBLE</td><td>无</td><td>与第一个输入 x 的数据类型一致</td></tr></tbody></table><h3 id="count-if" tabindex="-1"><a class="header-anchor" href="#count-if"><span>COUNT_IF</span></a></h3><h4 id="语法" tabindex="-1"><a class="header-anchor" href="#语法"><span>语法</span></a></h4><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#ABB2BF;">count_if(</span><span style="color:#C678DD;">predicate</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">[keep &gt;=/&gt;/=/!=/&lt;/&lt;=]</span><span style="color:#ABB2BF;">threshold</span><span style="color:#E06C75;">[, &#39;ignoreNull&#39;=&#39;true/false&#39;]</span><span style="color:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>predicate: 返回类型为<code>BOOLEAN</code>的合法表达式</p><p>threshold 及 ignoreNull 用法见上表</p><blockquote><p>注意: count_if 当前暂不支持与 group by time 的 SlidingWindow 一起使用</p></blockquote><h4 id="使用示例" tabindex="-1"><a class="header-anchor" href="#使用示例"><span>使用示例</span></a></h4><h5 id="原始数据" tabindex="-1"><a class="header-anchor" href="#原始数据"><span>原始数据</span></a></h5><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+-------------+-------------+</span></span>
<span class="line"><span>|                         Time|root.db.d1.s1|root.db.d1.s2|</span></span>
<span class="line"><span>+-----------------------------+-------------+-------------+</span></span>
<span class="line"><span>|1970-01-01T08:00:00.001+08:00|            0|            0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.002+08:00|         null|            0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.003+08:00|            0|            0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.004+08:00|            0|            0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.005+08:00|            1|            0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.006+08:00|            1|            0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.007+08:00|            1|            0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.008+08:00|            0|            0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.009+08:00|            0|            0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.010+08:00|            0|            0|</span></span>
<span class="line"><span>+-----------------------------+-------------+-------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="不使用ignorenull参数-忽略null" tabindex="-1"><a class="header-anchor" href="#不使用ignorenull参数-忽略null"><span>不使用ignoreNull参数(忽略null)</span></a></h5><p>SQL:</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">select</span><span style="color:#ABB2BF;"> count_if(s1</span><span style="color:#56B6C2;">=</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;"> &amp; s2</span><span style="color:#56B6C2;">=</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">3</span><span style="color:#ABB2BF;">), count_if(s1</span><span style="color:#56B6C2;">=</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;"> &amp; s2</span><span style="color:#56B6C2;">=</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">3</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">db</span><span style="color:#ABB2BF;">.d1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>输出:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+--------------------------------------------------+--------------------------------------------------+</span></span>
<span class="line"><span>|count_if(root.db.d1.s1 = 0 &amp; root.db.d1.s2 = 0, 3)|count_if(root.db.d1.s1 = 1 &amp; root.db.d1.s2 = 0, 3)|</span></span>
<span class="line"><span>+--------------------------------------------------+--------------------------------------------------+</span></span>
<span class="line"><span>|                                                 2|                                                 1|</span></span>
<span class="line"><span>+--------------------------------------------------+--------------------------------------------------</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="使用ignorenull参数" tabindex="-1"><a class="header-anchor" href="#使用ignorenull参数"><span>使用ignoreNull参数</span></a></h5><p>SQL:</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">select</span><span style="color:#ABB2BF;"> count_if(s1</span><span style="color:#56B6C2;">=</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;"> &amp; s2</span><span style="color:#56B6C2;">=</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">3</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;ignoreNull&#39;</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&#39;false&#39;</span><span style="color:#ABB2BF;">), count_if(s1</span><span style="color:#56B6C2;">=</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;"> &amp; s2</span><span style="color:#56B6C2;">=</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">3</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;ignoreNull&#39;</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&#39;false&#39;</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">db</span><span style="color:#ABB2BF;">.d1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>输出:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+------------------------------------------------------------------------+------------------------------------------------------------------------+</span></span>
<span class="line"><span>|count_if(root.db.d1.s1 = 0 &amp; root.db.d1.s2 = 0, 3, &quot;ignoreNull&quot;=&quot;false&quot;)|count_if(root.db.d1.s1 = 1 &amp; root.db.d1.s2 = 0, 3, &quot;ignoreNull&quot;=&quot;false&quot;)|</span></span>
<span class="line"><span>+------------------------------------------------------------------------+------------------------------------------------------------------------+</span></span>
<span class="line"><span>|                                                                       1|                                                                       1|</span></span>
<span class="line"><span>+------------------------------------------------------------------------+------------------------------------------------------------------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="time-duration" tabindex="-1"><a class="header-anchor" href="#time-duration"><span>TIME_DURATION</span></a></h3><h4 id="语法-1" tabindex="-1"><a class="header-anchor" href="#语法-1"><span>语法</span></a></h4><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#ABB2BF;">    time_duration(</span><span style="color:#C678DD;">Path</span><span style="color:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="使用示例-1" tabindex="-1"><a class="header-anchor" href="#使用示例-1"><span>使用示例</span></a></h4><h5 id="准备数据" tabindex="-1"><a class="header-anchor" href="#准备数据"><span>准备数据</span></a></h5><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+----------+-------------+</span></span>
<span class="line"><span>|      Time|root.db.d1.s1|</span></span>
<span class="line"><span>+----------+-------------+</span></span>
<span class="line"><span>|         1|           70|</span></span>
<span class="line"><span>|         3|           10|</span></span>
<span class="line"><span>|         4|          303|</span></span>
<span class="line"><span>|         6|          110|</span></span>
<span class="line"><span>|         7|          302|</span></span>
<span class="line"><span>|         8|          110|</span></span>
<span class="line"><span>|         9|           60|</span></span>
<span class="line"><span>|        10|           70|</span></span>
<span class="line"><span>|1677570934|           30|</span></span>
<span class="line"><span>+----------+-------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="写入语句" tabindex="-1"><a class="header-anchor" href="#写入语句"><span>写入语句</span></a></h5><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#98C379;">&quot;CREATE DATABASE root.db&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#98C379;">&quot;CREATE TIMESERIES root.db.d1.s1 WITH DATATYPE=INT32, ENCODING=PLAIN tags(city=Beijing)&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#98C379;">&quot;INSERT INTO root.db.d1(timestamp,s1,s2,s3) values(1, 2, 10, true)&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#98C379;">&quot;INSERT INTO root.db.d1(timestamp,s1,s2,s3) values(2, null, 20, true)&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#98C379;">&quot;INSERT INTO root.db.d1(timestamp,s1,s2,s3) values(3, 10, 0, null)&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#98C379;">&quot;INSERT INTO root.db.d1(timestamp,s1,s2,s3) values(4, 303, 30, true)&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#98C379;">&quot;INSERT INTO root.db.d1(timestamp,s1,s2,s3) values(5, null, 20, true)&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#98C379;">&quot;INSERT INTO root.db.d1(timestamp,s1,s2,s3) values(6, 110, 20, true)&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#98C379;">&quot;INSERT INTO root.db.d1(timestamp,s1,s2,s3) values(7, 302, 20, true)&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#98C379;">&quot;INSERT INTO root.db.d1(timestamp,s1,s2,s3) values(8, 110, null, true)&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#98C379;">&quot;INSERT INTO root.db.d1(timestamp,s1,s2,s3) values(9, 60, 20, true)&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#98C379;">&quot;INSERT INTO root.db.d1(timestamp,s1,s2,s3) values(10,70, 20, null)&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#98C379;">&quot;INSERT INTO root.db.d1(timestamp,s1,s2,s3) values(1677570934, 30, 0, true)&quot;</span><span style="color:#ABB2BF;">,</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查询：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">select</span><span style="color:#ABB2BF;"> time_duration(s1) </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">db</span><span style="color:#ABB2BF;">.d1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>输出</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+----------------------------+</span></span>
<span class="line"><span>|time_duration(root.db.d1.s1)|</span></span>
<span class="line"><span>+----------------------------+</span></span>
<span class="line"><span>|                  1677570933|</span></span>
<span class="line"><span>+----------------------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>注：若数据点只有一个，则返回0，若数据点为null，则返回null。</p></blockquote><h3 id="count-time" tabindex="-1"><a class="header-anchor" href="#count-time"><span>COUNT_TIME</span></a></h3><h4 id="语法-2" tabindex="-1"><a class="header-anchor" href="#语法-2"><span>语法</span></a></h4><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#ABB2BF;">    count_time(*)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="使用示例-2" tabindex="-1"><a class="header-anchor" href="#使用示例-2"><span>使用示例</span></a></h4><h5 id="准备数据-1" tabindex="-1"><a class="header-anchor" href="#准备数据-1"><span>准备数据</span></a></h5><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+----------+-------------+-------------+-------------+-------------+</span></span>
<span class="line"><span>|      Time|root.db.d1.s1|root.db.d1.s2|root.db.d2.s1|root.db.d2.s2|</span></span>
<span class="line"><span>+----------+-------------+-------------+-------------+-------------+</span></span>
<span class="line"><span>|         0|            0|         null|         null|            0|</span></span>
<span class="line"><span>|         1|         null|            1|            1|         null|</span></span>
<span class="line"><span>|         2|         null|            2|            2|         null|</span></span>
<span class="line"><span>|         4|            4|         null|         null|            4|</span></span>
<span class="line"><span>|         5|            5|            5|            5|            5|</span></span>
<span class="line"><span>|         7|         null|            7|            7|         null|</span></span>
<span class="line"><span>|         8|            8|            8|            8|            8|</span></span>
<span class="line"><span>|         9|         null|            9|         null|         null|</span></span>
<span class="line"><span>+----------+-------------+-------------+-------------+-------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="写入语句-1" tabindex="-1"><a class="header-anchor" href="#写入语句-1"><span>写入语句</span></a></h5><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">CREATE</span><span style="color:#C678DD;"> DATABASE</span><span style="color:#61AFEF;"> root</span><span style="color:#ABB2BF;">.db;</span></span>
<span class="line"><span style="color:#C678DD;">CREATE</span><span style="color:#ABB2BF;"> TIMESERIES </span><span style="color:#D19A66;">root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">db</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">d1</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">s1</span><span style="color:#C678DD;"> WITH</span><span style="color:#ABB2BF;"> DATATYPE</span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;">INT32, </span><span style="color:#C678DD;">ENCODING</span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;">PLAIN;</span></span>
<span class="line"><span style="color:#C678DD;">CREATE</span><span style="color:#ABB2BF;"> TIMESERIES </span><span style="color:#D19A66;">root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">db</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">d1</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">s2</span><span style="color:#C678DD;"> WITH</span><span style="color:#ABB2BF;"> DATATYPE</span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;">INT32, </span><span style="color:#C678DD;">ENCODING</span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;">PLAIN;</span></span>
<span class="line"><span style="color:#C678DD;">CREATE</span><span style="color:#ABB2BF;"> TIMESERIES </span><span style="color:#D19A66;">root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">db</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">d2</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">s1</span><span style="color:#C678DD;"> WITH</span><span style="color:#ABB2BF;"> DATATYPE</span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;">INT32, </span><span style="color:#C678DD;">ENCODING</span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;">PLAIN;</span></span>
<span class="line"><span style="color:#C678DD;">CREATE</span><span style="color:#ABB2BF;"> TIMESERIES </span><span style="color:#D19A66;">root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">db</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">d2</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">s2</span><span style="color:#C678DD;"> WITH</span><span style="color:#ABB2BF;"> DATATYPE</span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;">INT32, </span><span style="color:#C678DD;">ENCODING</span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;">PLAIN;</span></span>
<span class="line"><span style="color:#C678DD;">INSERT INTO</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">db</span><span style="color:#ABB2BF;">.d1(</span><span style="color:#C678DD;">time</span><span style="color:#ABB2BF;">, s1) </span><span style="color:#C678DD;">VALUES</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">), (</span><span style="color:#D19A66;">4</span><span style="color:#ABB2BF;">,</span><span style="color:#D19A66;">4</span><span style="color:#ABB2BF;">), (</span><span style="color:#D19A66;">5</span><span style="color:#ABB2BF;">,</span><span style="color:#D19A66;">5</span><span style="color:#ABB2BF;">), (</span><span style="color:#D19A66;">8</span><span style="color:#ABB2BF;">,</span><span style="color:#D19A66;">8</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">INSERT INTO</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">db</span><span style="color:#ABB2BF;">.d1(</span><span style="color:#C678DD;">time</span><span style="color:#ABB2BF;">, s2) </span><span style="color:#C678DD;">VALUES</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">), (</span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">,</span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">), (</span><span style="color:#D19A66;">5</span><span style="color:#ABB2BF;">,</span><span style="color:#D19A66;">5</span><span style="color:#ABB2BF;">), (</span><span style="color:#D19A66;">7</span><span style="color:#ABB2BF;">,</span><span style="color:#D19A66;">7</span><span style="color:#ABB2BF;">), (</span><span style="color:#D19A66;">8</span><span style="color:#ABB2BF;">,</span><span style="color:#D19A66;">8</span><span style="color:#ABB2BF;">), (</span><span style="color:#D19A66;">9</span><span style="color:#ABB2BF;">,</span><span style="color:#D19A66;">9</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">INSERT INTO</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">db</span><span style="color:#ABB2BF;">.d2(</span><span style="color:#C678DD;">time</span><span style="color:#ABB2BF;">, s1) </span><span style="color:#C678DD;">VALUES</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">), (</span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">,</span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">), (</span><span style="color:#D19A66;">5</span><span style="color:#ABB2BF;">,</span><span style="color:#D19A66;">5</span><span style="color:#ABB2BF;">), (</span><span style="color:#D19A66;">7</span><span style="color:#ABB2BF;">,</span><span style="color:#D19A66;">7</span><span style="color:#ABB2BF;">), (</span><span style="color:#D19A66;">8</span><span style="color:#ABB2BF;">,</span><span style="color:#D19A66;">8</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">INSERT INTO</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">db</span><span style="color:#ABB2BF;">.d2(</span><span style="color:#C678DD;">time</span><span style="color:#ABB2BF;">, s2) </span><span style="color:#C678DD;">VALUES</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">), (</span><span style="color:#D19A66;">4</span><span style="color:#ABB2BF;">,</span><span style="color:#D19A66;">4</span><span style="color:#ABB2BF;">), (</span><span style="color:#D19A66;">5</span><span style="color:#ABB2BF;">,</span><span style="color:#D19A66;">5</span><span style="color:#ABB2BF;">), (</span><span style="color:#D19A66;">8</span><span style="color:#ABB2BF;">,</span><span style="color:#D19A66;">8</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查询示例1：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">select</span><span style="color:#ABB2BF;"> count_time(*) </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">db</span><span style="color:#ABB2BF;">.**</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>输出</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-------------+</span></span>
<span class="line"><span>|count_time(*)|</span></span>
<span class="line"><span>+-------------+</span></span>
<span class="line"><span>|            8|</span></span>
<span class="line"><span>+-------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查询示例2：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">select</span><span style="color:#ABB2BF;"> count_time(*) </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">db</span><span style="color:#ABB2BF;">.d1, </span><span style="color:#D19A66;">root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">db</span><span style="color:#ABB2BF;">.d2</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>输出</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-------------+</span></span>
<span class="line"><span>|count_time(*)|</span></span>
<span class="line"><span>+-------------+</span></span>
<span class="line"><span>|            8|</span></span>
<span class="line"><span>+-------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查询示例3：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">select</span><span style="color:#ABB2BF;"> count_time(*) </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">db</span><span style="color:#ABB2BF;">.** </span><span style="color:#C678DD;">group by</span><span style="color:#ABB2BF;">([</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">10</span><span style="color:#ABB2BF;">), 2ms)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>输出</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+-------------+</span></span>
<span class="line"><span>|                         Time|count_time(*)|</span></span>
<span class="line"><span>+-----------------------------+-------------+</span></span>
<span class="line"><span>|1970-01-01T08:00:00.000+08:00|            2|            </span></span>
<span class="line"><span>|1970-01-01T08:00:00.002+08:00|            1|            </span></span>
<span class="line"><span>|1970-01-01T08:00:00.004+08:00|            2|            </span></span>
<span class="line"><span>|1970-01-01T08:00:00.006+08:00|            1|            </span></span>
<span class="line"><span>|1970-01-01T08:00:00.008+08:00|            2|            </span></span>
<span class="line"><span>+-----------------------------+-------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查询示例4：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">select</span><span style="color:#ABB2BF;"> count_time(*) </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">db</span><span style="color:#ABB2BF;">.** </span><span style="color:#C678DD;">group by</span><span style="color:#ABB2BF;">([</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">10</span><span style="color:#ABB2BF;">), 2ms) align </span><span style="color:#C678DD;">by</span><span style="color:#ABB2BF;"> device</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>输出</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+----------+-------------+</span></span>
<span class="line"><span>|                         Time|    Device|count_time(*)|</span></span>
<span class="line"><span>+-----------------------------+----------+-------------+</span></span>
<span class="line"><span>|1970-01-01T08:00:00.000+08:00|root.db.d1|            2|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.002+08:00|root.db.d1|            1|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.004+08:00|root.db.d1|            2|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.006+08:00|root.db.d1|            1|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.008+08:00|root.db.d1|            2|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.000+08:00|root.db.d2|            2|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.002+08:00|root.db.d2|            1|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.004+08:00|root.db.d2|            2|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.006+08:00|root.db.d2|            1|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.008+08:00|root.db.d2|            1|</span></span>
<span class="line"><span>+-----------------------------+----------+-------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>注：</p><ol><li>count_time里的表达式只能为*。</li><li>count_time不能和其他的聚合函数一起使用。</li><li>having语句里不支持使用count_time, 使用count_time聚合函数时不支持使用having语句。</li><li>count_time不支持与group by level, group by tag一起使用。</li></ol></blockquote><h3 id="max-by" tabindex="-1"><a class="header-anchor" href="#max-by"><span>MAX_BY</span></a></h3><h4 id="功能定义" tabindex="-1"><a class="header-anchor" href="#功能定义"><span>功能定义</span></a></h4><p>max_by(x, y)： 返回 y 最大时对应时间戳下的 x 值。</p><ul><li>max_by 必须有两个输入参数 x 和 y。</li><li>第一个输入可以为 time 关键字, max_by(time, x) 返回 x 取最大值时对应的时间戳。</li><li>如果 y 最大时对应的时间戳下 x 为 null，则返回 null。</li><li>如果 y 可以在多个时间戳下取得最大值，取最大值中最小时间戳对应的 x 值。</li><li>与 IoTDB max_value 保持一致，仅支持 INT32、INT64、FLOAT、DOUBLE 作为 y 的输入，支持所有六种类型作为 x 的输入。</li><li>x, y 的输入均不允许为具体数值。</li></ul><h4 id="语法-3" tabindex="-1"><a class="header-anchor" href="#语法-3"><span>语法</span></a></h4><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">select</span><span style="color:#ABB2BF;"> max_by(x, y) </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">sg</span></span>
<span class="line"><span style="color:#C678DD;">select</span><span style="color:#ABB2BF;"> max_by(</span><span style="color:#C678DD;">time</span><span style="color:#ABB2BF;">, x) </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">sg</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="使用示例-3" tabindex="-1"><a class="header-anchor" href="#使用示例-3"><span>使用示例</span></a></h4><h5 id="原始数据-1" tabindex="-1"><a class="header-anchor" href="#原始数据-1"><span>原始数据</span></a></h5><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#ABB2BF;">IoTDB</span><span style="color:#56B6C2;">&gt;</span><span style="color:#C678DD;"> select</span><span style="color:#ABB2BF;"> * </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">test</span></span>
<span class="line"><span style="color:#ABB2BF;">+</span><span style="color:#7F848E;font-style:italic;">-----------------------------+-----------+-----------+</span></span>
<span class="line"><span style="color:#ABB2BF;">|                         </span><span style="color:#C678DD;">Time</span><span style="color:#ABB2BF;">|</span><span style="color:#D19A66;">root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">test</span><span style="color:#ABB2BF;">.a|</span><span style="color:#D19A66;">root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">test</span><span style="color:#ABB2BF;">.b|</span></span>
<span class="line"><span style="color:#ABB2BF;">+</span><span style="color:#7F848E;font-style:italic;">-----------------------------+-----------+-----------+</span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#D19A66;">1970</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">01</span><span style="color:#ABB2BF;">-01T08:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">001</span><span style="color:#ABB2BF;">+</span><span style="color:#D19A66;">08</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">|        </span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">|       </span><span style="color:#D19A66;">10</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">|</span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#D19A66;">1970</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">01</span><span style="color:#ABB2BF;">-01T08:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">002</span><span style="color:#ABB2BF;">+</span><span style="color:#D19A66;">08</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">|        </span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">|       </span><span style="color:#D19A66;">10</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">|</span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#D19A66;">1970</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">01</span><span style="color:#ABB2BF;">-01T08:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">003</span><span style="color:#ABB2BF;">+</span><span style="color:#D19A66;">08</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">|        </span><span style="color:#D19A66;">3</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">|        </span><span style="color:#D19A66;">3</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">|</span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#D19A66;">1970</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">01</span><span style="color:#ABB2BF;">-01T08:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">004</span><span style="color:#ABB2BF;">+</span><span style="color:#D19A66;">08</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">|       </span><span style="color:#D19A66;">10</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">|       </span><span style="color:#D19A66;">10</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">|</span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#D19A66;">1970</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">01</span><span style="color:#ABB2BF;">-01T08:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">005</span><span style="color:#ABB2BF;">+</span><span style="color:#D19A66;">08</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">|       </span><span style="color:#D19A66;">10</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">|       </span><span style="color:#D19A66;">12</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">|</span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#D19A66;">1970</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">01</span><span style="color:#ABB2BF;">-01T08:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">006</span><span style="color:#ABB2BF;">+</span><span style="color:#D19A66;">08</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">|        </span><span style="color:#D19A66;">6</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">|        </span><span style="color:#D19A66;">6</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">|</span></span>
<span class="line"><span style="color:#ABB2BF;">+</span><span style="color:#7F848E;font-style:italic;">-----------------------------+-----------+-----------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="查询示例" tabindex="-1"><a class="header-anchor" href="#查询示例"><span>查询示例</span></a></h5><p>查询最大值对应的时间戳：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#ABB2BF;">IoTDB</span><span style="color:#56B6C2;">&gt;</span><span style="color:#C678DD;"> select</span><span style="color:#ABB2BF;"> max_by(</span><span style="color:#C678DD;">time</span><span style="color:#ABB2BF;">, a), max_value(a) </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">test</span></span>
<span class="line"><span style="color:#ABB2BF;">+</span><span style="color:#7F848E;font-style:italic;">-------------------------+------------------------+</span></span>
<span class="line"><span style="color:#ABB2BF;">|max_by(</span><span style="color:#C678DD;">Time</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">test</span><span style="color:#ABB2BF;">.a)|  max_value(</span><span style="color:#D19A66;">root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">test</span><span style="color:#ABB2BF;">.a)|</span></span>
<span class="line"><span style="color:#ABB2BF;">+</span><span style="color:#7F848E;font-style:italic;">-------------------------+------------------------+</span></span>
<span class="line"><span style="color:#ABB2BF;">|                        </span><span style="color:#D19A66;">4</span><span style="color:#ABB2BF;">|                    </span><span style="color:#D19A66;">10</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">|</span></span>
<span class="line"><span style="color:#ABB2BF;">+</span><span style="color:#7F848E;font-style:italic;">-------------------------+------------------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>求 a 最大时对应的 b 值：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#ABB2BF;">IoTDB</span><span style="color:#56B6C2;">&gt;</span><span style="color:#C678DD;"> select</span><span style="color:#ABB2BF;"> max_by(b, a) </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">test</span></span>
<span class="line"><span style="color:#ABB2BF;">+</span><span style="color:#7F848E;font-style:italic;">--------------------------------+</span></span>
<span class="line"><span style="color:#ABB2BF;">|max_by(</span><span style="color:#D19A66;">root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">test</span><span style="color:#ABB2BF;">.b, </span><span style="color:#D19A66;">root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">test</span><span style="color:#ABB2BF;">.a)|</span></span>
<span class="line"><span style="color:#ABB2BF;">+</span><span style="color:#7F848E;font-style:italic;">--------------------------------+</span></span>
<span class="line"><span style="color:#ABB2BF;">|                            </span><span style="color:#D19A66;">10</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">|</span></span>
<span class="line"><span style="color:#ABB2BF;">+</span><span style="color:#7F848E;font-style:italic;">--------------------------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>结合表达式使用：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#ABB2BF;">IoTDB</span><span style="color:#56B6C2;">&gt;</span><span style="color:#C678DD;"> select</span><span style="color:#ABB2BF;"> max_by(b + </span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">, a * </span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">test</span></span>
<span class="line"><span style="color:#ABB2BF;">+</span><span style="color:#7F848E;font-style:italic;">----------------------------------------+</span></span>
<span class="line"><span style="color:#ABB2BF;">|max_by(</span><span style="color:#D19A66;">root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">test</span><span style="color:#ABB2BF;">.b + </span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">test</span><span style="color:#ABB2BF;">.a * </span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">)|</span></span>
<span class="line"><span style="color:#ABB2BF;">+</span><span style="color:#7F848E;font-style:italic;">----------------------------------------+</span></span>
<span class="line"><span style="color:#ABB2BF;">|                                    </span><span style="color:#D19A66;">11</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">|</span></span>
<span class="line"><span style="color:#ABB2BF;">+</span><span style="color:#7F848E;font-style:italic;">----------------------------------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>结合 group by time 子句使用：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#ABB2BF;">IoTDB</span><span style="color:#56B6C2;">&gt;</span><span style="color:#C678DD;"> select</span><span style="color:#ABB2BF;"> max_by(b, a) </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">test</span><span style="color:#C678DD;"> group by</span><span style="color:#ABB2BF;"> ([</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">,</span><span style="color:#D19A66;">7</span><span style="color:#ABB2BF;">),4ms)</span></span>
<span class="line"><span style="color:#ABB2BF;">+</span><span style="color:#7F848E;font-style:italic;">-----------------------------+--------------------------------+</span></span>
<span class="line"><span style="color:#ABB2BF;">|                         </span><span style="color:#C678DD;">Time</span><span style="color:#ABB2BF;">|max_by(</span><span style="color:#D19A66;">root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">test</span><span style="color:#ABB2BF;">.b, </span><span style="color:#D19A66;">root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">test</span><span style="color:#ABB2BF;">.a)|</span></span>
<span class="line"><span style="color:#ABB2BF;">+</span><span style="color:#7F848E;font-style:italic;">-----------------------------+--------------------------------+</span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#D19A66;">1970</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">01</span><span style="color:#ABB2BF;">-01T08:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">000</span><span style="color:#ABB2BF;">+</span><span style="color:#D19A66;">08</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">|                             </span><span style="color:#D19A66;">3</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">|</span></span>
<span class="line"><span style="color:#ABB2BF;">+</span><span style="color:#7F848E;font-style:italic;">-----------------------------+--------------------------------+</span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#D19A66;">1970</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">01</span><span style="color:#ABB2BF;">-01T08:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">004</span><span style="color:#ABB2BF;">+</span><span style="color:#D19A66;">08</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">|                            </span><span style="color:#D19A66;">10</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">|</span></span>
<span class="line"><span style="color:#ABB2BF;">+</span><span style="color:#7F848E;font-style:italic;">-----------------------------+--------------------------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>结合 having 子句使用：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#ABB2BF;">IoTDB</span><span style="color:#56B6C2;">&gt;</span><span style="color:#C678DD;"> select</span><span style="color:#ABB2BF;"> max_by(b, a) </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">test</span><span style="color:#C678DD;"> group by</span><span style="color:#ABB2BF;"> ([</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">,</span><span style="color:#D19A66;">7</span><span style="color:#ABB2BF;">),4ms) </span><span style="color:#C678DD;">having</span><span style="color:#ABB2BF;"> max_by(b, a) </span><span style="color:#56B6C2;">&gt;</span><span style="color:#D19A66;"> 4</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">0</span></span>
<span class="line"><span style="color:#ABB2BF;">+</span><span style="color:#7F848E;font-style:italic;">-----------------------------+--------------------------------+</span></span>
<span class="line"><span style="color:#ABB2BF;">|                         </span><span style="color:#C678DD;">Time</span><span style="color:#ABB2BF;">|max_by(</span><span style="color:#D19A66;">root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">test</span><span style="color:#ABB2BF;">.b, </span><span style="color:#D19A66;">root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">test</span><span style="color:#ABB2BF;">.a)|</span></span>
<span class="line"><span style="color:#ABB2BF;">+</span><span style="color:#7F848E;font-style:italic;">-----------------------------+--------------------------------+</span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#D19A66;">1970</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">01</span><span style="color:#ABB2BF;">-01T08:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">004</span><span style="color:#ABB2BF;">+</span><span style="color:#D19A66;">08</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">|                            </span><span style="color:#D19A66;">10</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">|</span></span>
<span class="line"><span style="color:#ABB2BF;">+</span><span style="color:#7F848E;font-style:italic;">-----------------------------+--------------------------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>结合 order by 子句使用：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#ABB2BF;">IoTDB</span><span style="color:#56B6C2;">&gt;</span><span style="color:#C678DD;"> select</span><span style="color:#ABB2BF;"> max_by(b, a) </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">test</span><span style="color:#C678DD;"> group by</span><span style="color:#ABB2BF;"> ([</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">,</span><span style="color:#D19A66;">7</span><span style="color:#ABB2BF;">),4ms) </span><span style="color:#C678DD;">order by</span><span style="color:#C678DD;"> time</span><span style="color:#C678DD;"> desc</span></span>
<span class="line"><span style="color:#ABB2BF;">+</span><span style="color:#7F848E;font-style:italic;">-----------------------------+--------------------------------+</span></span>
<span class="line"><span style="color:#ABB2BF;">|                         </span><span style="color:#C678DD;">Time</span><span style="color:#ABB2BF;">|max_by(</span><span style="color:#D19A66;">root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">test</span><span style="color:#ABB2BF;">.b, </span><span style="color:#D19A66;">root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">test</span><span style="color:#ABB2BF;">.a)|</span></span>
<span class="line"><span style="color:#ABB2BF;">+</span><span style="color:#7F848E;font-style:italic;">-----------------------------+--------------------------------+</span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#D19A66;">1970</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">01</span><span style="color:#ABB2BF;">-01T08:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">004</span><span style="color:#ABB2BF;">+</span><span style="color:#D19A66;">08</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">|                            </span><span style="color:#D19A66;">10</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">|</span></span>
<span class="line"><span style="color:#ABB2BF;">+</span><span style="color:#7F848E;font-style:italic;">-----------------------------+--------------------------------+</span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#D19A66;">1970</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">01</span><span style="color:#ABB2BF;">-01T08:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">000</span><span style="color:#ABB2BF;">+</span><span style="color:#D19A66;">08</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">|                             </span><span style="color:#D19A66;">3</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">|</span></span>
<span class="line"><span style="color:#ABB2BF;">+</span><span style="color:#7F848E;font-style:italic;">-----------------------------+--------------------------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="功能定义-1" tabindex="-1"><a class="header-anchor" href="#功能定义-1"><span>功能定义</span></a></h4><p>min_by(x, y)： 返回 y 最小时对应时间戳下的 x 值。</p><ul><li>min_by 必须有两个输入参数 x 和 y。</li><li>第一个输入可以为 time 关键字, min_by(time, x) 返回 x 取最小值时对应的时间戳。</li><li>如果 y 最大时对应的时间戳下 x 为 null，则返回 null。</li><li>如果 y 可以在多个时间戳下取得最小值，取最小值中最小时间戳对应的 x 值。</li><li>与 IoTDB min_value 保持一致，仅支持 INT32、INT64、FLOAT、DOUBLE 作为 y 的输入，支持所有六种类型作为 x 的输入。</li><li>x, y 的输入均不允许为具体数值。</li></ul><h4 id="语法-4" tabindex="-1"><a class="header-anchor" href="#语法-4"><span>语法</span></a></h4><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">select</span><span style="color:#ABB2BF;"> min_by(x, y) </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">sg</span></span>
<span class="line"><span style="color:#C678DD;">select</span><span style="color:#ABB2BF;"> min_by(</span><span style="color:#C678DD;">time</span><span style="color:#ABB2BF;">, x) </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">sg</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="使用示例-4" tabindex="-1"><a class="header-anchor" href="#使用示例-4"><span>使用示例</span></a></h4><h5 id="原始数据-2" tabindex="-1"><a class="header-anchor" href="#原始数据-2"><span>原始数据</span></a></h5><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#ABB2BF;">IoTDB</span><span style="color:#56B6C2;">&gt;</span><span style="color:#C678DD;"> select</span><span style="color:#ABB2BF;"> * </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">test</span></span>
<span class="line"><span style="color:#ABB2BF;">+</span><span style="color:#7F848E;font-style:italic;">-----------------------------+-----------+-----------+</span></span>
<span class="line"><span style="color:#ABB2BF;">|                         </span><span style="color:#C678DD;">Time</span><span style="color:#ABB2BF;">|</span><span style="color:#D19A66;">root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">test</span><span style="color:#ABB2BF;">.a|</span><span style="color:#D19A66;">root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">test</span><span style="color:#ABB2BF;">.b|</span></span>
<span class="line"><span style="color:#ABB2BF;">+</span><span style="color:#7F848E;font-style:italic;">-----------------------------+-----------+-----------+</span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#D19A66;">1970</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">01</span><span style="color:#ABB2BF;">-01T08:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">001</span><span style="color:#ABB2BF;">+</span><span style="color:#D19A66;">08</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">|        </span><span style="color:#D19A66;">4</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">|       </span><span style="color:#D19A66;">10</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">|</span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#D19A66;">1970</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">01</span><span style="color:#ABB2BF;">-01T08:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">002</span><span style="color:#ABB2BF;">+</span><span style="color:#D19A66;">08</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">|        </span><span style="color:#D19A66;">3</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">|       </span><span style="color:#D19A66;">10</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">|</span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#D19A66;">1970</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">01</span><span style="color:#ABB2BF;">-01T08:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">003</span><span style="color:#ABB2BF;">+</span><span style="color:#D19A66;">08</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">|        </span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">|        </span><span style="color:#D19A66;">3</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">|</span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#D19A66;">1970</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">01</span><span style="color:#ABB2BF;">-01T08:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">004</span><span style="color:#ABB2BF;">+</span><span style="color:#D19A66;">08</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">|        </span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">|       </span><span style="color:#D19A66;">10</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">|</span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#D19A66;">1970</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">01</span><span style="color:#ABB2BF;">-01T08:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">005</span><span style="color:#ABB2BF;">+</span><span style="color:#D19A66;">08</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">|        </span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">|       </span><span style="color:#D19A66;">12</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">|</span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#D19A66;">1970</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">01</span><span style="color:#ABB2BF;">-01T08:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">006</span><span style="color:#ABB2BF;">+</span><span style="color:#D19A66;">08</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">|        </span><span style="color:#D19A66;">6</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">|        </span><span style="color:#D19A66;">6</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">|</span></span>
<span class="line"><span style="color:#ABB2BF;">+</span><span style="color:#7F848E;font-style:italic;">-----------------------------+-----------+-----------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="查询示例-1" tabindex="-1"><a class="header-anchor" href="#查询示例-1"><span>查询示例</span></a></h5><p>查询最小值对应的时间戳：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#ABB2BF;">IoTDB</span><span style="color:#56B6C2;">&gt;</span><span style="color:#C678DD;"> select</span><span style="color:#ABB2BF;"> min_by(</span><span style="color:#C678DD;">time</span><span style="color:#ABB2BF;">, a), min_value(a) </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">test</span></span>
<span class="line"><span style="color:#ABB2BF;">+</span><span style="color:#7F848E;font-style:italic;">-------------------------+------------------------+</span></span>
<span class="line"><span style="color:#ABB2BF;">|min_by(</span><span style="color:#C678DD;">Time</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">test</span><span style="color:#ABB2BF;">.a)|  min_value(</span><span style="color:#D19A66;">root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">test</span><span style="color:#ABB2BF;">.a)|</span></span>
<span class="line"><span style="color:#ABB2BF;">+</span><span style="color:#7F848E;font-style:italic;">-------------------------+------------------------+</span></span>
<span class="line"><span style="color:#ABB2BF;">|                        </span><span style="color:#D19A66;">4</span><span style="color:#ABB2BF;">|                     </span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">|</span></span>
<span class="line"><span style="color:#ABB2BF;">+</span><span style="color:#7F848E;font-style:italic;">-------------------------+------------------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>求 a 最小时对应的 b 值：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#ABB2BF;">IoTDB</span><span style="color:#56B6C2;">&gt;</span><span style="color:#C678DD;"> select</span><span style="color:#ABB2BF;"> min_by(b, a) </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">test</span></span>
<span class="line"><span style="color:#ABB2BF;">+</span><span style="color:#7F848E;font-style:italic;">--------------------------------+</span></span>
<span class="line"><span style="color:#ABB2BF;">|min_by(</span><span style="color:#D19A66;">root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">test</span><span style="color:#ABB2BF;">.b, </span><span style="color:#D19A66;">root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">test</span><span style="color:#ABB2BF;">.a)|</span></span>
<span class="line"><span style="color:#ABB2BF;">+</span><span style="color:#7F848E;font-style:italic;">--------------------------------+</span></span>
<span class="line"><span style="color:#ABB2BF;">|                            </span><span style="color:#D19A66;">10</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">|</span></span>
<span class="line"><span style="color:#ABB2BF;">+</span><span style="color:#7F848E;font-style:italic;">--------------------------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>结合表达式使用：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#ABB2BF;">IoTDB</span><span style="color:#56B6C2;">&gt;</span><span style="color:#C678DD;"> select</span><span style="color:#ABB2BF;"> min_by(b + </span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">, a * </span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">test</span></span>
<span class="line"><span style="color:#ABB2BF;">+</span><span style="color:#7F848E;font-style:italic;">----------------------------------------+</span></span>
<span class="line"><span style="color:#ABB2BF;">|min_by(</span><span style="color:#D19A66;">root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">test</span><span style="color:#ABB2BF;">.b + </span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">test</span><span style="color:#ABB2BF;">.a * </span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">)|</span></span>
<span class="line"><span style="color:#ABB2BF;">+</span><span style="color:#7F848E;font-style:italic;">----------------------------------------+</span></span>
<span class="line"><span style="color:#ABB2BF;">|                                    </span><span style="color:#D19A66;">11</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">|</span></span>
<span class="line"><span style="color:#ABB2BF;">+</span><span style="color:#7F848E;font-style:italic;">----------------------------------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>结合 group by time 子句使用：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#ABB2BF;">IoTDB</span><span style="color:#56B6C2;">&gt;</span><span style="color:#C678DD;"> select</span><span style="color:#ABB2BF;"> min_by(b, a) </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">test</span><span style="color:#C678DD;"> group by</span><span style="color:#ABB2BF;"> ([</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">,</span><span style="color:#D19A66;">7</span><span style="color:#ABB2BF;">),4ms)</span></span>
<span class="line"><span style="color:#ABB2BF;">+</span><span style="color:#7F848E;font-style:italic;">-----------------------------+--------------------------------+</span></span>
<span class="line"><span style="color:#ABB2BF;">|                         </span><span style="color:#C678DD;">Time</span><span style="color:#ABB2BF;">|min_by(</span><span style="color:#D19A66;">root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">test</span><span style="color:#ABB2BF;">.b, </span><span style="color:#D19A66;">root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">test</span><span style="color:#ABB2BF;">.a)|</span></span>
<span class="line"><span style="color:#ABB2BF;">+</span><span style="color:#7F848E;font-style:italic;">-----------------------------+--------------------------------+</span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#D19A66;">1970</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">01</span><span style="color:#ABB2BF;">-01T08:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">000</span><span style="color:#ABB2BF;">+</span><span style="color:#D19A66;">08</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">|                             </span><span style="color:#D19A66;">3</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">|</span></span>
<span class="line"><span style="color:#ABB2BF;">+</span><span style="color:#7F848E;font-style:italic;">-----------------------------+--------------------------------+</span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#D19A66;">1970</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">01</span><span style="color:#ABB2BF;">-01T08:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">004</span><span style="color:#ABB2BF;">+</span><span style="color:#D19A66;">08</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">|                            </span><span style="color:#D19A66;">10</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">|</span></span>
<span class="line"><span style="color:#ABB2BF;">+</span><span style="color:#7F848E;font-style:italic;">-----------------------------+--------------------------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>结合 having 子句使用：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#ABB2BF;">IoTDB</span><span style="color:#56B6C2;">&gt;</span><span style="color:#C678DD;"> select</span><span style="color:#ABB2BF;"> min_by(b, a) </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">test</span><span style="color:#C678DD;"> group by</span><span style="color:#ABB2BF;"> ([</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">,</span><span style="color:#D19A66;">7</span><span style="color:#ABB2BF;">),4ms) </span><span style="color:#C678DD;">having</span><span style="color:#ABB2BF;"> max_by(b, a) </span><span style="color:#56B6C2;">&gt;</span><span style="color:#D19A66;"> 4</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">0</span></span>
<span class="line"><span style="color:#ABB2BF;">+</span><span style="color:#7F848E;font-style:italic;">-----------------------------+--------------------------------+</span></span>
<span class="line"><span style="color:#ABB2BF;">|                         </span><span style="color:#C678DD;">Time</span><span style="color:#ABB2BF;">|min_by(</span><span style="color:#D19A66;">root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">test</span><span style="color:#ABB2BF;">.b, </span><span style="color:#D19A66;">root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">test</span><span style="color:#ABB2BF;">.a)|</span></span>
<span class="line"><span style="color:#ABB2BF;">+</span><span style="color:#7F848E;font-style:italic;">-----------------------------+--------------------------------+</span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#D19A66;">1970</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">01</span><span style="color:#ABB2BF;">-01T08:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">004</span><span style="color:#ABB2BF;">+</span><span style="color:#D19A66;">08</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">|                            </span><span style="color:#D19A66;">10</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">|</span></span>
<span class="line"><span style="color:#ABB2BF;">+</span><span style="color:#7F848E;font-style:italic;">-----------------------------+--------------------------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>结合 order by 子句使用：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#ABB2BF;">IoTDB</span><span style="color:#56B6C2;">&gt;</span><span style="color:#C678DD;"> select</span><span style="color:#ABB2BF;"> min_by(b, a) </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">test</span><span style="color:#C678DD;"> group by</span><span style="color:#ABB2BF;"> ([</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">,</span><span style="color:#D19A66;">7</span><span style="color:#ABB2BF;">),4ms) </span><span style="color:#C678DD;">order by</span><span style="color:#C678DD;"> time</span><span style="color:#C678DD;"> desc</span></span>
<span class="line"><span style="color:#ABB2BF;">+</span><span style="color:#7F848E;font-style:italic;">-----------------------------+--------------------------------+</span></span>
<span class="line"><span style="color:#ABB2BF;">|                         </span><span style="color:#C678DD;">Time</span><span style="color:#ABB2BF;">|min_by(</span><span style="color:#D19A66;">root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">test</span><span style="color:#ABB2BF;">.b, </span><span style="color:#D19A66;">root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">test</span><span style="color:#ABB2BF;">.a)|</span></span>
<span class="line"><span style="color:#ABB2BF;">+</span><span style="color:#7F848E;font-style:italic;">-----------------------------+--------------------------------+</span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#D19A66;">1970</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">01</span><span style="color:#ABB2BF;">-01T08:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">004</span><span style="color:#ABB2BF;">+</span><span style="color:#D19A66;">08</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">|                            </span><span style="color:#D19A66;">10</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">|</span></span>
<span class="line"><span style="color:#ABB2BF;">+</span><span style="color:#7F848E;font-style:italic;">-----------------------------+--------------------------------+</span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#D19A66;">1970</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">01</span><span style="color:#ABB2BF;">-01T08:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">000</span><span style="color:#ABB2BF;">+</span><span style="color:#D19A66;">08</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">|                             </span><span style="color:#D19A66;">3</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">|</span></span>
<span class="line"><span style="color:#ABB2BF;">+</span><span style="color:#7F848E;font-style:italic;">-----------------------------+--------------------------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="算数运算符和函数" tabindex="-1"><a class="header-anchor" href="#算数运算符和函数"><span>算数运算符和函数</span></a></h2><h3 id="算数运算符" tabindex="-1"><a class="header-anchor" href="#算数运算符"><span>算数运算符</span></a></h3><h4 id="一元算数运算符" tabindex="-1"><a class="header-anchor" href="#一元算数运算符"><span>一元算数运算符</span></a></h4><p>支持的运算符：<code>+</code>, <code>-</code></p><p>输入数据类型要求：<code>INT32</code>, <code>INT64</code>, <code>FLOAT</code>, <code>DOUBLE</code></p><p>输出数据类型：与输入数据类型一致</p><h4 id="二元算数运算符" tabindex="-1"><a class="header-anchor" href="#二元算数运算符"><span>二元算数运算符</span></a></h4><p>支持的运算符：<code>+</code>, <code>-</code>, <code>*</code>, <code>/</code>, <code>%</code></p><p>输入数据类型要求：<code>INT32</code>, <code>INT64</code>, <code>FLOAT</code>和<code>DOUBLE</code></p><p>输出数据类型：<code>DOUBLE</code></p><p>注意：当某个时间戳下左操作数和右操作数都不为空（<code>null</code>）时，二元运算操作才会有输出结果</p><h4 id="使用示例-5" tabindex="-1"><a class="header-anchor" href="#使用示例-5"><span>使用示例</span></a></h4><p>例如：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">select</span><span style="color:#ABB2BF;"> s1, - s1, s2, + s2, s1 + s2, s1 - s2, s1 * s2, s1 / s2, s1 % s2 </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">sg</span><span style="color:#ABB2BF;">.d1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>结果：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+-------------+--------------+-------------+-------------+-----------------------------+-----------------------------+-----------------------------+-----------------------------+-----------------------------+</span></span>
<span class="line"><span>|                         Time|root.sg.d1.s1|-root.sg.d1.s1|root.sg.d1.s2|root.sg.d1.s2|root.sg.d1.s1 + root.sg.d1.s2|root.sg.d1.s1 - root.sg.d1.s2|root.sg.d1.s1 * root.sg.d1.s2|root.sg.d1.s1 / root.sg.d1.s2|root.sg.d1.s1 % root.sg.d1.s2|</span></span>
<span class="line"><span>+-----------------------------+-------------+--------------+-------------+-------------+-----------------------------+-----------------------------+-----------------------------+-----------------------------+-----------------------------+</span></span>
<span class="line"><span>|1970-01-01T08:00:00.001+08:00|          1.0|          -1.0|          1.0|          1.0|                          2.0|                          0.0|                          1.0|                          1.0|                          0.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.002+08:00|          2.0|          -2.0|          2.0|          2.0|                          4.0|                          0.0|                          4.0|                          1.0|                          0.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.003+08:00|          3.0|          -3.0|          3.0|          3.0|                          6.0|                          0.0|                          9.0|                          1.0|                          0.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.004+08:00|          4.0|          -4.0|          4.0|          4.0|                          8.0|                          0.0|                         16.0|                          1.0|                          0.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.005+08:00|          5.0|          -5.0|          5.0|          5.0|                         10.0|                          0.0|                         25.0|                          1.0|                          0.0|</span></span>
<span class="line"><span>+-----------------------------+-------------+--------------+-------------+-------------+-----------------------------+-----------------------------+-----------------------------+-----------------------------+-----------------------------+</span></span>
<span class="line"><span>Total line number = 5</span></span>
<span class="line"><span>It costs 0.014s</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="数学函数" tabindex="-1"><a class="header-anchor" href="#数学函数"><span>数学函数</span></a></h3><p>目前 IoTDB 支持下列数学函数，这些数学函数的行为与这些函数在 Java Math 标准库中对应实现的行为一致。</p><table><thead><tr><th>函数名</th><th>输入序列类型</th><th>输出序列类型</th><th>必要属性参数</th><th>Java 标准库中的对应实现</th></tr></thead><tbody><tr><td>SIN</td><td>INT32 / INT64 / FLOAT / DOUBLE</td><td>DOUBLE</td><td></td><td>Math#sin(double)</td></tr><tr><td>COS</td><td>INT32 / INT64 / FLOAT / DOUBLE</td><td>DOUBLE</td><td></td><td>Math#cos(double)</td></tr><tr><td>TAN</td><td>INT32 / INT64 / FLOAT / DOUBLE</td><td>DOUBLE</td><td></td><td>Math#tan(double)</td></tr><tr><td>ASIN</td><td>INT32 / INT64 / FLOAT / DOUBLE</td><td>DOUBLE</td><td></td><td>Math#asin(double)</td></tr><tr><td>ACOS</td><td>INT32 / INT64 / FLOAT / DOUBLE</td><td>DOUBLE</td><td></td><td>Math#acos(double)</td></tr><tr><td>ATAN</td><td>INT32 / INT64 / FLOAT / DOUBLE</td><td>DOUBLE</td><td></td><td>Math#atan(double)</td></tr><tr><td>SINH</td><td>INT32 / INT64 / FLOAT / DOUBLE</td><td>DOUBLE</td><td></td><td>Math#sinh(double)</td></tr><tr><td>COSH</td><td>INT32 / INT64 / FLOAT / DOUBLE</td><td>DOUBLE</td><td></td><td>Math#cosh(double)</td></tr><tr><td>TANH</td><td>INT32 / INT64 / FLOAT / DOUBLE</td><td>DOUBLE</td><td></td><td>Math#tanh(double)</td></tr><tr><td>DEGREES</td><td>INT32 / INT64 / FLOAT / DOUBLE</td><td>DOUBLE</td><td></td><td>Math#toDegrees(double)</td></tr><tr><td>RADIANS</td><td>INT32 / INT64 / FLOAT / DOUBLE</td><td>DOUBLE</td><td></td><td>Math#toRadians(double)</td></tr><tr><td>ABS</td><td>INT32 / INT64 / FLOAT / DOUBLE</td><td>与输入序列的实际类型一致</td><td></td><td>Math#abs(int) / Math#abs(long) /Math#abs(float) /Math#abs(double)</td></tr><tr><td>SIGN</td><td>INT32 / INT64 / FLOAT / DOUBLE</td><td>DOUBLE</td><td></td><td>Math#signum(double)</td></tr><tr><td>CEIL</td><td>INT32 / INT64 / FLOAT / DOUBLE</td><td>DOUBLE</td><td></td><td>Math#ceil(double)</td></tr><tr><td>FLOOR</td><td>INT32 / INT64 / FLOAT / DOUBLE</td><td>DOUBLE</td><td></td><td>Math#floor(double)</td></tr><tr><td>ROUND</td><td>INT32 / INT64 / FLOAT / DOUBLE</td><td>DOUBLE</td><td><code>places</code>:四舍五入有效位数，正数为小数点后面的有效位数，负数为整数位的有效位数</td><td>Math#rint(Math#pow(10,places))/Math#pow(10,places)</td></tr><tr><td>EXP</td><td>INT32 / INT64 / FLOAT / DOUBLE</td><td>DOUBLE</td><td></td><td>Math#exp(double)</td></tr><tr><td>LN</td><td>INT32 / INT64 / FLOAT / DOUBLE</td><td>DOUBLE</td><td></td><td>Math#log(double)</td></tr><tr><td>LOG10</td><td>INT32 / INT64 / FLOAT / DOUBLE</td><td>DOUBLE</td><td></td><td>Math#log10(double)</td></tr><tr><td>SQRT</td><td>INT32 / INT64 / FLOAT / DOUBLE</td><td>DOUBLE</td><td></td><td>Math#sqrt(double)</td></tr></tbody></table><p>例如：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">select</span><span style="color:#ABB2BF;"> s1, </span><span style="color:#56B6C2;">sin</span><span style="color:#ABB2BF;">(s1), </span><span style="color:#56B6C2;">cos</span><span style="color:#ABB2BF;">(s1), </span><span style="color:#56B6C2;">tan</span><span style="color:#ABB2BF;">(s1) </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">sg1</span><span style="color:#ABB2BF;">.d1 </span><span style="color:#C678DD;">limit</span><span style="color:#D19A66;"> 5</span><span style="color:#ABB2BF;"> offset </span><span style="color:#D19A66;">1000</span><span style="color:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>结果：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+-------------------+-------------------+--------------------+-------------------+</span></span>
<span class="line"><span>|                         Time|     root.sg1.d1.s1|sin(root.sg1.d1.s1)| cos(root.sg1.d1.s1)|tan(root.sg1.d1.s1)|</span></span>
<span class="line"><span>+-----------------------------+-------------------+-------------------+--------------------+-------------------+</span></span>
<span class="line"><span>|2020-12-10T17:11:49.037+08:00|7360723084922759782| 0.8133527237573284|  0.5817708713544664| 1.3980636773094157|</span></span>
<span class="line"><span>|2020-12-10T17:11:49.038+08:00|4377791063319964531|-0.8938962705202537|  0.4482738644511651| -1.994085181866842|</span></span>
<span class="line"><span>|2020-12-10T17:11:49.039+08:00|7972485567734642915| 0.9627757585308978|-0.27030138509681073|-3.5618602479083545|</span></span>
<span class="line"><span>|2020-12-10T17:11:49.040+08:00|2508858212791964081|-0.6073417341629443| -0.7944406950452296| 0.7644897069734913|</span></span>
<span class="line"><span>|2020-12-10T17:11:49.041+08:00|2817297431185141819|-0.8419358900502509| -0.5395775727782725| 1.5603611649667768|</span></span>
<span class="line"><span>+-----------------------------+-------------------+-------------------+--------------------+-------------------+</span></span>
<span class="line"><span>Total line number = 5</span></span>
<span class="line"><span>It costs 0.008s</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="round" tabindex="-1"><a class="header-anchor" href="#round"><span>ROUND</span></a></h4><p>例如：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">select</span><span style="color:#ABB2BF;"> s4,</span><span style="color:#56B6C2;">round</span><span style="color:#ABB2BF;">(s4),</span><span style="color:#56B6C2;">round</span><span style="color:#ABB2BF;">(s4,</span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">),</span><span style="color:#56B6C2;">round</span><span style="color:#ABB2BF;">(s4,-</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">sg1</span><span style="color:#ABB2BF;">.d1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#ABB2BF;">+</span><span style="color:#7F848E;font-style:italic;">-----------------------------+-------------+--------------------+----------------------+-----------------------+</span></span>
<span class="line"><span style="color:#ABB2BF;">|                         </span><span style="color:#C678DD;">Time</span><span style="color:#ABB2BF;">|</span><span style="color:#D19A66;">root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">db</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">d1</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">s4</span><span style="color:#ABB2BF;">|</span><span style="color:#56B6C2;">ROUND</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">db</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">d1</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">s4</span><span style="color:#ABB2BF;">)|</span><span style="color:#56B6C2;">ROUND</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">db</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">d1</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">s4</span><span style="color:#ABB2BF;">,</span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">)|</span><span style="color:#56B6C2;">ROUND</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">db</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">d1</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">s4</span><span style="color:#ABB2BF;">,-</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">)|</span></span>
<span class="line"><span style="color:#ABB2BF;">+</span><span style="color:#7F848E;font-style:italic;">-----------------------------+-------------+--------------------+----------------------+-----------------------+</span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#D19A66;">1970</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">01</span><span style="color:#ABB2BF;">-01T08:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">001</span><span style="color:#ABB2BF;">+</span><span style="color:#D19A66;">08</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">|    </span><span style="color:#D19A66;">101</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">14345</span><span style="color:#ABB2BF;">|               </span><span style="color:#D19A66;">101</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">|                </span><span style="color:#D19A66;">101</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">14</span><span style="color:#ABB2BF;">|                  </span><span style="color:#D19A66;">100</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">|</span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#D19A66;">1970</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">01</span><span style="color:#ABB2BF;">-01T08:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">002</span><span style="color:#ABB2BF;">+</span><span style="color:#D19A66;">08</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">|    </span><span style="color:#D19A66;">20</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">144346</span><span style="color:#ABB2BF;">|                </span><span style="color:#D19A66;">20</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">|                 </span><span style="color:#D19A66;">20</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">14</span><span style="color:#ABB2BF;">|                   </span><span style="color:#D19A66;">20</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">|</span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#D19A66;">1970</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">01</span><span style="color:#ABB2BF;">-01T08:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">003</span><span style="color:#ABB2BF;">+</span><span style="color:#D19A66;">08</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">|    </span><span style="color:#D19A66;">20</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">614372</span><span style="color:#ABB2BF;">|                </span><span style="color:#D19A66;">21</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">|                 </span><span style="color:#D19A66;">20</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">61</span><span style="color:#ABB2BF;">|                   </span><span style="color:#D19A66;">20</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">|</span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#D19A66;">1970</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">01</span><span style="color:#ABB2BF;">-01T08:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">005</span><span style="color:#ABB2BF;">+</span><span style="color:#D19A66;">08</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">|    </span><span style="color:#D19A66;">20</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">814346</span><span style="color:#ABB2BF;">|                </span><span style="color:#D19A66;">21</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">|                 </span><span style="color:#D19A66;">20</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">81</span><span style="color:#ABB2BF;">|                   </span><span style="color:#D19A66;">20</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">|</span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#D19A66;">1970</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">01</span><span style="color:#ABB2BF;">-01T08:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">006</span><span style="color:#ABB2BF;">+</span><span style="color:#D19A66;">08</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">|     </span><span style="color:#D19A66;">60</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">71443</span><span style="color:#ABB2BF;">|                </span><span style="color:#D19A66;">61</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">|                 </span><span style="color:#D19A66;">60</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">71</span><span style="color:#ABB2BF;">|                   </span><span style="color:#D19A66;">60</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">|</span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#D19A66;">2023</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">03</span><span style="color:#ABB2BF;">-13T16:</span><span style="color:#D19A66;">16</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">19</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">764</span><span style="color:#ABB2BF;">+</span><span style="color:#D19A66;">08</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">|    </span><span style="color:#D19A66;">10</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">143425</span><span style="color:#ABB2BF;">|                </span><span style="color:#D19A66;">10</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">|                 </span><span style="color:#D19A66;">10</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">14</span><span style="color:#ABB2BF;">|                   </span><span style="color:#D19A66;">10</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">|</span></span>
<span class="line"><span style="color:#ABB2BF;">+</span><span style="color:#7F848E;font-style:italic;">-----------------------------+-------------+--------------------+----------------------+-----------------------+</span></span>
<span class="line"><span style="color:#ABB2BF;">Total </span><span style="color:#C678DD;">line</span><span style="color:#C678DD;"> number</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 6</span></span>
<span class="line"><span style="color:#ABB2BF;">It costs </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">.059s</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="比较运算符和函数" tabindex="-1"><a class="header-anchor" href="#比较运算符和函数"><span>比较运算符和函数</span></a></h2><h3 id="基本比较运算符" tabindex="-1"><a class="header-anchor" href="#基本比较运算符"><span>基本比较运算符</span></a></h3><ul><li>输入数据类型： <code>INT32</code>, <code>INT64</code>, <code>FLOAT</code>, <code>DOUBLE</code>。</li><li>注意：会将所有数据转换为<code>DOUBLE</code>类型后进行比较。<code>==</code>和<code>!=</code>可以直接比较两个<code>BOOLEAN</code>。</li><li>返回类型：<code>BOOLEAN</code>。</li></ul><table><thead><tr><th>运算符</th><th>含义</th></tr></thead><tbody><tr><td><code>&gt;</code></td><td>大于</td></tr><tr><td><code>&gt;=</code></td><td>大于等于</td></tr><tr><td><code>&lt;</code></td><td>小于</td></tr><tr><td><code>&lt;=</code></td><td>小于等于</td></tr><tr><td><code>==</code></td><td>等于</td></tr><tr><td><code>!=</code> / <code>&lt;&gt;</code></td><td>不等于</td></tr></tbody></table><p><strong>示例：</strong></p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">select</span><span style="color:#ABB2BF;"> a, b, a </span><span style="color:#56B6C2;">&gt;</span><span style="color:#D19A66;"> 10</span><span style="color:#ABB2BF;">, a </span><span style="color:#56B6C2;">&lt;=</span><span style="color:#ABB2BF;"> b, !(a </span><span style="color:#56B6C2;">&lt;=</span><span style="color:#ABB2BF;"> b), a </span><span style="color:#56B6C2;">&gt;</span><span style="color:#D19A66;"> 10</span><span style="color:#ABB2BF;"> &amp;&amp; a </span><span style="color:#56B6C2;">&gt;</span><span style="color:#ABB2BF;"> b </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">test</span><span style="color:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>运行结果</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>IoTDB&gt; select a, b, a &gt; 10, a &lt;= b, !(a &lt;= b), a &gt; 10 &amp;&amp; a &gt; b from root.test;</span></span>
<span class="line"><span>+-----------------------------+-----------+-----------+----------------+--------------------------+---------------------------+------------------------------------------------+</span></span>
<span class="line"><span>|                         Time|root.test.a|root.test.b|root.test.a &gt; 10|root.test.a &lt;= root.test.b|!root.test.a &lt;= root.test.b|(root.test.a &gt; 10) &amp; (root.test.a &gt; root.test.b)|</span></span>
<span class="line"><span>+-----------------------------+-----------+-----------+----------------+--------------------------+---------------------------+------------------------------------------------+</span></span>
<span class="line"><span>|1970-01-01T08:00:00.001+08:00|         23|       10.0|            true|                     false|                       true|                                            true|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.002+08:00|         33|       21.0|            true|                     false|                       true|                                            true|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.004+08:00|         13|       15.0|            true|                      true|                      false|                                           false|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.005+08:00|         26|        0.0|            true|                     false|                       true|                                            true|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.008+08:00|          1|       22.0|           false|                      true|                      false|                                           false|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.010+08:00|         23|       12.0|            true|                     false|                       true|                                            true|</span></span>
<span class="line"><span>+-----------------------------+-----------+-----------+----------------+--------------------------+---------------------------+------------------------------------------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="between-and-运算符" tabindex="-1"><a class="header-anchor" href="#between-and-运算符"><span><code>BETWEEN ... AND ...</code> 运算符</span></a></h3><table><thead><tr><th>运算符</th><th>含义</th></tr></thead><tbody><tr><td><code>BETWEEN ... AND ...</code></td><td>在指定范围内</td></tr><tr><td><code>NOT BETWEEN ... AND ...</code></td><td>不在指定范围内</td></tr></tbody></table><p><strong>示例：</strong> 选择区间 [36.5,40] 内或之外的数据：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">select</span><span style="color:#ABB2BF;"> temperature </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">sg1</span><span style="color:#ABB2BF;">.d1 </span><span style="color:#C678DD;">where</span><span style="color:#ABB2BF;"> temperature </span><span style="color:#C678DD;">between</span><span style="color:#D19A66;"> 36</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">5</span><span style="color:#C678DD;"> and</span><span style="color:#D19A66;"> 40</span><span style="color:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">select</span><span style="color:#ABB2BF;"> temperature </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">sg1</span><span style="color:#ABB2BF;">.d1 </span><span style="color:#C678DD;">where</span><span style="color:#ABB2BF;"> temperature </span><span style="color:#C678DD;">not</span><span style="color:#C678DD;"> between</span><span style="color:#D19A66;"> 36</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">5</span><span style="color:#C678DD;"> and</span><span style="color:#D19A66;"> 40</span><span style="color:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="模糊匹配运算符" tabindex="-1"><a class="header-anchor" href="#模糊匹配运算符"><span>模糊匹配运算符</span></a></h3><p>对于 TEXT 类型的数据，支持使用 <code>Like</code> 和 <code>Regexp</code> 运算符对数据进行模糊匹配</p><table><thead><tr><th>运算符</th><th>含义</th></tr></thead><tbody><tr><td><code>LIKE</code></td><td>匹配简单模式</td></tr><tr><td><code>NOT LIKE</code></td><td>无法匹配简单模式</td></tr><tr><td><code>REGEXP</code></td><td>匹配正则表达式</td></tr><tr><td><code>NOT REGEXP</code></td><td>无法匹配正则表达式</td></tr></tbody></table><p>输入数据类型：<code>TEXT</code></p><p>返回类型：<code>BOOLEAN</code></p><h4 id="使用-like-进行模糊匹配" tabindex="-1"><a class="header-anchor" href="#使用-like-进行模糊匹配"><span>使用 <code>Like</code> 进行模糊匹配</span></a></h4><p><strong>匹配规则：</strong></p><ul><li><code>%</code> 表示任意0个或多个字符。</li><li><code>_</code> 表示任意单个字符。</li></ul><p><strong>示例 1：</strong> 查询 <code>root.sg.d1</code> 下 <code>value</code> 含有<code>&#39;cc&#39;</code>的数据。</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#61AFEF;">IoTDB</span><span style="color:#ABB2BF;">&gt; </span><span style="color:#98C379;">select</span><span style="color:#E5C07B;"> *</span><span style="color:#98C379;"> from</span><span style="color:#98C379;"> root.sg.d1</span><span style="color:#98C379;"> where</span><span style="color:#98C379;"> value</span><span style="color:#98C379;"> like</span><span style="color:#98C379;"> &#39;%cc%&#39;</span></span>
<span class="line"><span style="color:#61AFEF;">+-----------------------------+----------------+</span></span>
<span class="line"><span style="color:#ABB2BF;">|                         </span><span style="color:#61AFEF;">Time</span><span style="color:#ABB2BF;">|</span><span style="color:#61AFEF;">root.sg.d1.value</span><span style="color:#ABB2BF;">|</span></span>
<span class="line"><span style="color:#61AFEF;">+-----------------------------+----------------+</span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#61AFEF;">2017-11-01T00:00:00.000+08:00</span><span style="color:#ABB2BF;">|        </span><span style="color:#61AFEF;">aabbccdd</span><span style="color:#ABB2BF;">| </span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#61AFEF;">2017-11-01T00:00:01.000+08:00</span><span style="color:#ABB2BF;">|              </span><span style="color:#61AFEF;">cc</span><span style="color:#ABB2BF;">|</span></span>
<span class="line"><span style="color:#61AFEF;">+-----------------------------+----------------+</span></span>
<span class="line"><span style="color:#61AFEF;">Total</span><span style="color:#98C379;"> line</span><span style="color:#98C379;"> number</span><span style="color:#98C379;"> =</span><span style="color:#D19A66;"> 2</span></span>
<span class="line"><span style="color:#61AFEF;">It</span><span style="color:#98C379;"> costs</span><span style="color:#98C379;"> 0.002s</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>示例 2：</strong> 查询 <code>root.sg.d1</code> 下 <code>value</code> 中间为 <code>&#39;b&#39;</code>、前后为任意单个字符的数据。</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#61AFEF;">IoTDB</span><span style="color:#ABB2BF;">&gt; </span><span style="color:#98C379;">select</span><span style="color:#E5C07B;"> *</span><span style="color:#98C379;"> from</span><span style="color:#98C379;"> root.sg.device</span><span style="color:#98C379;"> where</span><span style="color:#98C379;"> value</span><span style="color:#98C379;"> like</span><span style="color:#98C379;"> &#39;_b_&#39;</span></span>
<span class="line"><span style="color:#61AFEF;">+-----------------------------+----------------+</span></span>
<span class="line"><span style="color:#ABB2BF;">|                         </span><span style="color:#61AFEF;">Time</span><span style="color:#ABB2BF;">|</span><span style="color:#61AFEF;">root.sg.d1.value</span><span style="color:#ABB2BF;">|</span></span>
<span class="line"><span style="color:#61AFEF;">+-----------------------------+----------------+</span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#61AFEF;">2017-11-01T00:00:02.000+08:00</span><span style="color:#ABB2BF;">|             </span><span style="color:#61AFEF;">abc</span><span style="color:#ABB2BF;">| </span></span>
<span class="line"><span style="color:#61AFEF;">+-----------------------------+----------------+</span></span>
<span class="line"><span style="color:#61AFEF;">Total</span><span style="color:#98C379;"> line</span><span style="color:#98C379;"> number</span><span style="color:#98C379;"> =</span><span style="color:#D19A66;"> 1</span></span>
<span class="line"><span style="color:#61AFEF;">It</span><span style="color:#98C379;"> costs</span><span style="color:#98C379;"> 0.002s</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="使用-regexp-进行模糊匹配" tabindex="-1"><a class="header-anchor" href="#使用-regexp-进行模糊匹配"><span>使用 <code>Regexp</code> 进行模糊匹配</span></a></h4><p>需要传入的过滤条件为 <strong>Java 标准库风格的正则表达式</strong>。</p><p><strong>常见的正则匹配举例：</strong></p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>长度为3-20的所有字符：^.{3,20}$</span></span>
<span class="line"><span>大写英文字符：^[A-Z]+$</span></span>
<span class="line"><span>数字和英文字符：^[A-Za-z0-9]+$</span></span>
<span class="line"><span>以a开头的：^a.*</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>示例 1：</strong> 查询 root.sg.d1 下 value 值为26个英文字符组成的字符串。</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#61AFEF;">IoTDB</span><span style="color:#ABB2BF;">&gt; </span><span style="color:#98C379;">select</span><span style="color:#E5C07B;"> *</span><span style="color:#98C379;"> from</span><span style="color:#98C379;"> root.sg.d1</span><span style="color:#98C379;"> where</span><span style="color:#98C379;"> value</span><span style="color:#98C379;"> regexp</span><span style="color:#98C379;"> &#39;^[A-Za-z]+$&#39;</span></span>
<span class="line"><span style="color:#61AFEF;">+-----------------------------+----------------+</span></span>
<span class="line"><span style="color:#ABB2BF;">|                         </span><span style="color:#61AFEF;">Time</span><span style="color:#ABB2BF;">|</span><span style="color:#61AFEF;">root.sg.d1.value</span><span style="color:#ABB2BF;">|</span></span>
<span class="line"><span style="color:#61AFEF;">+-----------------------------+----------------+</span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#61AFEF;">2017-11-01T00:00:00.000+08:00</span><span style="color:#ABB2BF;">|        </span><span style="color:#61AFEF;">aabbccdd</span><span style="color:#ABB2BF;">| </span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#61AFEF;">2017-11-01T00:00:01.000+08:00</span><span style="color:#ABB2BF;">|              </span><span style="color:#61AFEF;">cc</span><span style="color:#ABB2BF;">|</span></span>
<span class="line"><span style="color:#61AFEF;">+-----------------------------+----------------+</span></span>
<span class="line"><span style="color:#61AFEF;">Total</span><span style="color:#98C379;"> line</span><span style="color:#98C379;"> number</span><span style="color:#98C379;"> =</span><span style="color:#D19A66;"> 2</span></span>
<span class="line"><span style="color:#61AFEF;">It</span><span style="color:#98C379;"> costs</span><span style="color:#98C379;"> 0.002s</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>示例 2：</strong> 查询 root.sg.d1 下 value 值为26个小写英文字符组成的字符串且时间大于100的。</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#61AFEF;">IoTDB</span><span style="color:#ABB2BF;">&gt; </span><span style="color:#98C379;">select</span><span style="color:#E5C07B;"> *</span><span style="color:#98C379;"> from</span><span style="color:#98C379;"> root.sg.d1</span><span style="color:#98C379;"> where</span><span style="color:#98C379;"> value</span><span style="color:#98C379;"> regexp</span><span style="color:#98C379;"> &#39;^[a-z]+$&#39;</span><span style="color:#98C379;"> and</span><span style="color:#98C379;"> time</span><span style="color:#ABB2BF;"> &gt; </span><span style="color:#D19A66;">100</span></span>
<span class="line"><span style="color:#61AFEF;">+-----------------------------+----------------+</span></span>
<span class="line"><span style="color:#ABB2BF;">|                         </span><span style="color:#61AFEF;">Time</span><span style="color:#ABB2BF;">|</span><span style="color:#61AFEF;">root.sg.d1.value</span><span style="color:#ABB2BF;">|</span></span>
<span class="line"><span style="color:#61AFEF;">+-----------------------------+----------------+</span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#61AFEF;">2017-11-01T00:00:00.000+08:00</span><span style="color:#ABB2BF;">|        </span><span style="color:#61AFEF;">aabbccdd</span><span style="color:#ABB2BF;">| </span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#61AFEF;">2017-11-01T00:00:01.000+08:00</span><span style="color:#ABB2BF;">|              </span><span style="color:#61AFEF;">cc</span><span style="color:#ABB2BF;">|</span></span>
<span class="line"><span style="color:#61AFEF;">+-----------------------------+----------------+</span></span>
<span class="line"><span style="color:#61AFEF;">Total</span><span style="color:#98C379;"> line</span><span style="color:#98C379;"> number</span><span style="color:#98C379;"> =</span><span style="color:#D19A66;"> 2</span></span>
<span class="line"><span style="color:#61AFEF;">It</span><span style="color:#98C379;"> costs</span><span style="color:#98C379;"> 0.002s</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>示例 3：</strong></p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">select</span><span style="color:#ABB2BF;"> b, b </span><span style="color:#C678DD;">like</span><span style="color:#98C379;"> &#39;1%&#39;</span><span style="color:#ABB2BF;">, b regexp </span><span style="color:#98C379;">&#39;[0-2]&#39;</span><span style="color:#C678DD;"> from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">test</span><span style="color:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>运行结果</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+-----------+-------------------------+--------------------------+</span></span>
<span class="line"><span>|                         Time|root.test.b|root.test.b LIKE &#39;^1.*?$&#39;|root.test.b REGEXP &#39;[0-2]&#39;|</span></span>
<span class="line"><span>+-----------------------------+-----------+-------------------------+--------------------------+</span></span>
<span class="line"><span>|1970-01-01T08:00:00.001+08:00| 111test111|                     true|                      true|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.003+08:00| 333test333|                    false|                     false|</span></span>
<span class="line"><span>+-----------------------------+-----------+-------------------------+--------------------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="is-null-运算符" tabindex="-1"><a class="header-anchor" href="#is-null-运算符"><span><code>IS NULL</code> 运算符</span></a></h3><table><thead><tr><th>运算符</th><th>含义</th></tr></thead><tbody><tr><td><code>IS NULL</code></td><td>是空值</td></tr><tr><td><code>IS NOT NULL</code></td><td>不是空值</td></tr></tbody></table><p><strong>示例 1：</strong> 选择值为空的数据:</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">select</span><span style="color:#ABB2BF;"> code </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">sg1</span><span style="color:#ABB2BF;">.d1 </span><span style="color:#C678DD;">where</span><span style="color:#ABB2BF;"> temperature </span><span style="color:#C678DD;">is</span><span style="color:#C678DD;"> null</span><span style="color:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>示例 2：</strong> 选择值为非空的数据:</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">select</span><span style="color:#ABB2BF;"> code </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">sg1</span><span style="color:#ABB2BF;">.d1 </span><span style="color:#C678DD;">where</span><span style="color:#ABB2BF;"> temperature </span><span style="color:#C678DD;">is not null</span><span style="color:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="in-运算符" tabindex="-1"><a class="header-anchor" href="#in-运算符"><span><code>IN</code> 运算符</span></a></h3><table><thead><tr><th>运算符</th><th>含义</th></tr></thead><tbody><tr><td><code>IN</code> / <code>CONTAINS</code></td><td>是指定列表中的值</td></tr><tr><td><code>NOT IN</code> / <code>NOT CONTAINS</code></td><td>不是指定列表中的值</td></tr></tbody></table><p>输入数据类型：<code>All Types</code></p><p>返回类型 <code>BOOLEAN</code></p><p><strong>注意：请确保集合中的值可以被转为输入数据的类型。</strong></p><blockquote><p>例如：</p><p><code>s1 in (1, 2, 3, &#39;test&#39;)</code>，<code>s1</code>的数据类型是<code>INT32</code></p><p>我们将会抛出异常，因为<code>&#39;test&#39;</code>不能被转为<code>INT32</code>类型</p></blockquote><p><strong>示例 1：</strong> 选择值在特定范围内的数据：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">select</span><span style="color:#ABB2BF;"> code </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">sg1</span><span style="color:#ABB2BF;">.d1 </span><span style="color:#C678DD;">where</span><span style="color:#ABB2BF;"> code </span><span style="color:#C678DD;">in</span><span style="color:#ABB2BF;"> (</span><span style="color:#98C379;">&#39;200&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;300&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;400&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;500&#39;</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>示例 2：</strong> 选择值在特定范围外的数据：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">select</span><span style="color:#ABB2BF;"> code </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">sg1</span><span style="color:#ABB2BF;">.d1 </span><span style="color:#C678DD;">where</span><span style="color:#ABB2BF;"> code </span><span style="color:#C678DD;">not</span><span style="color:#C678DD;"> in</span><span style="color:#ABB2BF;"> (</span><span style="color:#98C379;">&#39;200&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;300&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;400&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;500&#39;</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>示例 3：</strong></p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">select</span><span style="color:#ABB2BF;"> a, a </span><span style="color:#C678DD;">in</span><span style="color:#ABB2BF;"> (</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">test</span><span style="color:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>输出2:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+-----------+--------------------+</span></span>
<span class="line"><span>|                         Time|root.test.a|root.test.a IN (1,2)|</span></span>
<span class="line"><span>+-----------------------------+-----------+--------------------+</span></span>
<span class="line"><span>|1970-01-01T08:00:00.001+08:00|          1|                true|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.003+08:00|          3|               false|</span></span>
<span class="line"><span>+-----------------------------+-----------+--------------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="条件函数" tabindex="-1"><a class="header-anchor" href="#条件函数"><span>条件函数</span></a></h3><p>条件函数针对每个数据点进行条件判断，返回布尔值。</p><table><thead><tr><th>函数名</th><th>可接收的输入序列类型</th><th>必要的属性参数</th><th>输出序列类型</th><th>功能类型</th></tr></thead><tbody><tr><td>ON_OFF</td><td>INT32 / INT64 / FLOAT / DOUBLE</td><td><code>threshold</code>:DOUBLE类型</td><td>BOOLEAN 类型</td><td>返回<code>ts_value &gt;= threshold</code>的bool值</td></tr><tr><td>IN_RANGE</td><td>INT32 / INT64 / FLOAT / DOUBLE</td><td><code>lower</code>:DOUBLE类型<br><code>upper</code>:DOUBLE类型</td><td>BOOLEAN类型</td><td>返回<code>ts_value &gt;= lower &amp;&amp; ts_value &lt;= upper</code>的bool值</td></tr></tbody></table><p>测试数据：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>IoTDB&gt; select ts from root.test;</span></span>
<span class="line"><span>+-----------------------------+------------+</span></span>
<span class="line"><span>|                         Time|root.test.ts|</span></span>
<span class="line"><span>+-----------------------------+------------+</span></span>
<span class="line"><span>|1970-01-01T08:00:00.001+08:00|           1|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.002+08:00|           2|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.003+08:00|           3|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.004+08:00|           4|</span></span>
<span class="line"><span>+-----------------------------+------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>示例 1：</strong></p><p>SQL语句：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">select</span><span style="color:#ABB2BF;"> ts, on_off(ts, </span><span style="color:#98C379;">&#39;threshold&#39;</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&#39;2&#39;</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">test</span><span style="color:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>输出：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>IoTDB&gt; select ts, on_off(ts, &#39;threshold&#39;=&#39;2&#39;) from root.test;</span></span>
<span class="line"><span>+-----------------------------+------------+-------------------------------------+</span></span>
<span class="line"><span>|                         Time|root.test.ts|on_off(root.test.ts, &quot;threshold&quot;=&quot;2&quot;)|</span></span>
<span class="line"><span>+-----------------------------+------------+-------------------------------------+</span></span>
<span class="line"><span>|1970-01-01T08:00:00.001+08:00|           1|                                false|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.002+08:00|           2|                                 true|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.003+08:00|           3|                                 true|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.004+08:00|           4|                                 true|</span></span>
<span class="line"><span>+-----------------------------+------------+-------------------------------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>示例 2：</strong></p><p>Sql语句：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">select</span><span style="color:#ABB2BF;"> ts, in_range(ts, </span><span style="color:#98C379;">&#39;lower&#39;</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&#39;2&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;upper&#39;</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&#39;3.1&#39;</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">test</span><span style="color:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>输出：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>IoTDB&gt; select ts, in_range(ts, &#39;lower&#39;=&#39;2&#39;, &#39;upper&#39;=&#39;3.1&#39;) from root.test;</span></span>
<span class="line"><span>+-----------------------------+------------+--------------------------------------------------+</span></span>
<span class="line"><span>|                         Time|root.test.ts|in_range(root.test.ts, &quot;lower&quot;=&quot;2&quot;, &quot;upper&quot;=&quot;3.1&quot;)|</span></span>
<span class="line"><span>+-----------------------------+------------+--------------------------------------------------+</span></span>
<span class="line"><span>|1970-01-01T08:00:00.001+08:00|           1|                                             false|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.002+08:00|           2|                                              true|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.003+08:00|           3|                                              true|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.004+08:00|           4|                                             false|</span></span>
<span class="line"><span>+-----------------------------+------------+--------------------------------------------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="逻辑运算符" tabindex="-1"><a class="header-anchor" href="#逻辑运算符"><span>逻辑运算符</span></a></h2><h3 id="一元逻辑运算符" tabindex="-1"><a class="header-anchor" href="#一元逻辑运算符"><span>一元逻辑运算符</span></a></h3><ul><li>支持运算符：<code>!</code></li><li>输入数据类型：<code>BOOLEAN</code>。</li><li>输出数据类型：<code>BOOLEAN</code>。</li><li>注意：<code>!</code>的优先级很高，记得使用括号调整优先级。</li></ul><h3 id="二元逻辑运算符" tabindex="-1"><a class="header-anchor" href="#二元逻辑运算符"><span>二元逻辑运算符</span></a></h3><ul><li><p>支持运算符</p><ul><li>AND:<code>and</code>,<code>&amp;</code>, <code>&amp;&amp;</code></li><li>OR:<code>or</code>,<code>|</code>,<code>||</code></li></ul></li><li><p>输入数据类型：<code>BOOLEAN</code>。</p></li><li><p>返回类型 <code>BOOLEAN</code>。</p></li><li><p>注意：当某个时间戳下左操作数和右操作数都为<code>BOOLEAN</code>类型时，二元逻辑操作才会有输出结果。</p></li></ul><p><strong>示例：</strong></p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">select</span><span style="color:#ABB2BF;"> a, b, a </span><span style="color:#56B6C2;">&gt;</span><span style="color:#D19A66;"> 10</span><span style="color:#ABB2BF;">, a </span><span style="color:#56B6C2;">&lt;=</span><span style="color:#ABB2BF;"> b, !(a </span><span style="color:#56B6C2;">&lt;=</span><span style="color:#ABB2BF;"> b), a </span><span style="color:#56B6C2;">&gt;</span><span style="color:#D19A66;"> 10</span><span style="color:#ABB2BF;"> &amp;&amp; a </span><span style="color:#56B6C2;">&gt;</span><span style="color:#ABB2BF;"> b </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">test</span><span style="color:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>运行结果</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>IoTDB&gt; select a, b, a &gt; 10, a &lt;= b, !(a &lt;= b), a &gt; 10 &amp;&amp; a &gt; b from root.test;</span></span>
<span class="line"><span>+-----------------------------+-----------+-----------+----------------+--------------------------+---------------------------+------------------------------------------------+</span></span>
<span class="line"><span>|                         Time|root.test.a|root.test.b|root.test.a &gt; 10|root.test.a &lt;= root.test.b|!root.test.a &lt;= root.test.b|(root.test.a &gt; 10) &amp; (root.test.a &gt; root.test.b)|</span></span>
<span class="line"><span>+-----------------------------+-----------+-----------+----------------+--------------------------+---------------------------+------------------------------------------------+</span></span>
<span class="line"><span>|1970-01-01T08:00:00.001+08:00|         23|       10.0|            true|                     false|                       true|                                            true|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.002+08:00|         33|       21.0|            true|                     false|                       true|                                            true|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.004+08:00|         13|       15.0|            true|                      true|                      false|                                           false|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.005+08:00|         26|        0.0|            true|                     false|                       true|                                            true|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.008+08:00|          1|       22.0|           false|                      true|                      false|                                           false|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.010+08:00|         23|       12.0|            true|                     false|                       true|                                            true|</span></span>
<span class="line"><span>+-----------------------------+-----------+-----------+----------------+--------------------------+---------------------------+------------------------------------------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="字符串处理" tabindex="-1"><a class="header-anchor" href="#字符串处理"><span>字符串处理</span></a></h2><h3 id="string-contains" tabindex="-1"><a class="header-anchor" href="#string-contains"><span>STRING_CONTAINS</span></a></h3><h4 id="函数简介" tabindex="-1"><a class="header-anchor" href="#函数简介"><span>函数简介</span></a></h4><p>本函数判断字符串中是否存在子串 <code>s</code></p><p><strong>函数名:</strong> STRING_CONTAINS</p><p><strong>输入序列:</strong> 仅支持单个输入序列，类型为 TEXT。</p><p><strong>参数:</strong></p><ul><li><code>s</code>: 待搜寻的字符串。</li></ul><p><strong>输出序列:</strong> 输出单个序列，类型为 BOOLEAN。</p><h4 id="使用示例-6" tabindex="-1"><a class="header-anchor" href="#使用示例-6"><span>使用示例</span></a></h4><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">select</span><span style="color:#ABB2BF;"> s1, string_contains(s1, </span><span style="color:#98C379;">&#39;s&#39;</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&#39;warn&#39;</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">sg1</span><span style="color:#ABB2BF;">.d4;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>结果：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+--------------+-------------------------------------------+</span></span>
<span class="line"><span>|                         Time|root.sg1.d4.s1|string_contains(root.sg1.d4.s1, &quot;s&quot;=&quot;warn&quot;)|</span></span>
<span class="line"><span>+-----------------------------+--------------+-------------------------------------------+</span></span>
<span class="line"><span>|1970-01-01T08:00:00.001+08:00|    warn:-8721|                                       true|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.002+08:00|  error:-37229|                                      false|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.003+08:00|     warn:1731|                                       true|</span></span>
<span class="line"><span>+-----------------------------+--------------+-------------------------------------------+</span></span>
<span class="line"><span>Total line number = 3</span></span>
<span class="line"><span>It costs 0.007s</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="string-matches" tabindex="-1"><a class="header-anchor" href="#string-matches"><span>STRING_MATCHES</span></a></h3><h4 id="函数简介-1" tabindex="-1"><a class="header-anchor" href="#函数简介-1"><span>函数简介</span></a></h4><p>本函数判断字符串是否能够被正则表达式<code>regex</code>匹配。</p><p><strong>函数名:</strong> STRING_MATCHES</p><p><strong>输入序列:</strong> 仅支持单个输入序列，类型为 TEXT。</p><p><strong>参数:</strong></p><ul><li><code>regex</code>: Java 标准库风格的正则表达式。</li></ul><p><strong>输出序列:</strong> 输出单个序列，类型为 BOOLEAN。</p><h4 id="使用示例-7" tabindex="-1"><a class="header-anchor" href="#使用示例-7"><span>使用示例</span></a></h4><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">select</span><span style="color:#ABB2BF;"> s1, string_matches(s1, </span><span style="color:#98C379;">&#39;regex&#39;</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&#39;[^\\\\s]+37229&#39;</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">sg1</span><span style="color:#ABB2BF;">.d4;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>结果：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+--------------+------------------------------------------------------+</span></span>
<span class="line"><span>|                         Time|root.sg1.d4.s1|string_matches(root.sg1.d4.s1, &quot;regex&quot;=&quot;[^\\\\s]+37229&quot;)|</span></span>
<span class="line"><span>+-----------------------------+--------------+------------------------------------------------------+</span></span>
<span class="line"><span>|1970-01-01T08:00:00.001+08:00|    warn:-8721|                                                 false|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.002+08:00|  error:-37229|                                                  true|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.003+08:00|     warn:1731|                                                 false|</span></span>
<span class="line"><span>+-----------------------------+--------------+------------------------------------------------------+</span></span>
<span class="line"><span>Total line number = 3</span></span>
<span class="line"><span>It costs 0.007s</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="length" tabindex="-1"><a class="header-anchor" href="#length"><span>Length</span></a></h3><h4 id="函数简介-2" tabindex="-1"><a class="header-anchor" href="#函数简介-2"><span>函数简介</span></a></h4><p>本函数用于获取输入序列的长度。</p><p><strong>函数名:</strong> LENGTH</p><p><strong>输入序列:</strong> 仅支持单个输入序列，类型为 TEXT。</p><p><strong>输出序列:</strong> 输出单个序列，类型为 INT32。</p><p><strong>提示:</strong> 如果输入是NULL，返回NULL。</p><h4 id="使用示例-8" tabindex="-1"><a class="header-anchor" href="#使用示例-8"><span>使用示例</span></a></h4><p>输入序列:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+--------------+</span></span>
<span class="line"><span>|                         Time|root.sg1.d1.s1|</span></span>
<span class="line"><span>+-----------------------------+--------------+</span></span>
<span class="line"><span>|1970-01-01T08:00:00.001+08:00|        1test1|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.002+08:00|      22test22|</span></span>
<span class="line"><span>+-----------------------------+--------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>用于查询的 SQL 语句:</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">select</span><span style="color:#ABB2BF;"> s1, </span><span style="color:#C678DD;">length</span><span style="color:#ABB2BF;">(s1) </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">sg1</span><span style="color:#ABB2BF;">.d1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>输出序列:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+--------------+----------------------+</span></span>
<span class="line"><span>|                         Time|root.sg1.d1.s1|length(root.sg1.d1.s1)|</span></span>
<span class="line"><span>+-----------------------------+--------------+----------------------+</span></span>
<span class="line"><span>|1970-01-01T08:00:00.001+08:00|        1test1|                     6|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.002+08:00|      22test22|                     8|</span></span>
<span class="line"><span>+-----------------------------+--------------+----------------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="locate" tabindex="-1"><a class="header-anchor" href="#locate"><span>Locate</span></a></h3><h4 id="函数简介-3" tabindex="-1"><a class="header-anchor" href="#函数简介-3"><span>函数简介</span></a></h4><p>本函数用于获取<code>target</code>子串第一次出现在输入序列的位置，如果输入序列中不包含<code>target</code>则返回 -1 。</p><p><strong>函数名:</strong> LOCATE</p><p><strong>输入序列:</strong> 仅支持单个输入序列，类型为 TEXT。</p><p><strong>参数:</strong></p><ul><li><code>target</code>: 需要被定位的子串。</li><li><code>reverse</code>: 指定是否需要倒序定位，默认值为<code>false</code>, 即从左至右定位。</li></ul><p><strong>输出序列:</strong> 输出单个序列，类型为INT32。</p><p><strong>提示:</strong> 下标从 0 开始。</p><h4 id="使用示例-9" tabindex="-1"><a class="header-anchor" href="#使用示例-9"><span>使用示例</span></a></h4><p>输入序列:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+--------------+</span></span>
<span class="line"><span>|                         Time|root.sg1.d1.s1|</span></span>
<span class="line"><span>+-----------------------------+--------------+</span></span>
<span class="line"><span>|1970-01-01T08:00:00.001+08:00|        1test1|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.002+08:00|      22test22|</span></span>
<span class="line"><span>+-----------------------------+--------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>用于查询的 SQL 语句:</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">select</span><span style="color:#ABB2BF;"> s1, </span><span style="color:#C678DD;">locate</span><span style="color:#ABB2BF;">(s1, </span><span style="color:#98C379;">&quot;target&quot;</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;1&quot;</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">sg1</span><span style="color:#ABB2BF;">.d1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>输出序列:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+--------------+------------------------------------+</span></span>
<span class="line"><span>|                         Time|root.sg1.d1.s1|locate(root.sg1.d1.s1, &quot;target&quot;=&quot;1&quot;)|</span></span>
<span class="line"><span>+-----------------------------+--------------+------------------------------------+</span></span>
<span class="line"><span>|1970-01-01T08:00:00.001+08:00|        1test1|                                   0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.002+08:00|      22test22|                                  -1|</span></span>
<span class="line"><span>+-----------------------------+--------------+------------------------------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>另一个用于查询的 SQL 语句:</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">select</span><span style="color:#ABB2BF;"> s1, </span><span style="color:#C678DD;">locate</span><span style="color:#ABB2BF;">(s1, </span><span style="color:#98C379;">&quot;target&quot;</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;1&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;reverse&quot;</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;true&quot;</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">sg1</span><span style="color:#ABB2BF;">.d1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>输出序列:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+--------------+------------------------------------------------------+</span></span>
<span class="line"><span>|                         Time|root.sg1.d1.s1|locate(root.sg1.d1.s1, &quot;target&quot;=&quot;1&quot;, &quot;reverse&quot;=&quot;true&quot;)|</span></span>
<span class="line"><span>+-----------------------------+--------------+------------------------------------------------------+</span></span>
<span class="line"><span>|1970-01-01T08:00:00.001+08:00|        1test1|                                                     5|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.002+08:00|      22test22|                                                    -1|</span></span>
<span class="line"><span>+-----------------------------+--------------+------------------------------------------------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="startswith" tabindex="-1"><a class="header-anchor" href="#startswith"><span>StartsWith</span></a></h3><h4 id="函数简介-4" tabindex="-1"><a class="header-anchor" href="#函数简介-4"><span>函数简介</span></a></h4><p>本函数用于判断输入序列是否有指定前缀。</p><p><strong>函数名:</strong> STARTSWITH</p><p><strong>输入序列:</strong> 仅支持单个输入序列，类型为 TEXT。</p><p><strong>参数:</strong></p><ul><li><code>target</code>: 需要匹配的前缀。</li></ul><p><strong>输出序列:</strong> 输出单个序列，类型为 BOOLEAN。</p><p><strong>提示:</strong> 如果输入是NULL，返回NULL。</p><h4 id="使用示例-10" tabindex="-1"><a class="header-anchor" href="#使用示例-10"><span>使用示例</span></a></h4><p>输入序列:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+--------------+</span></span>
<span class="line"><span>|                         Time|root.sg1.d1.s1|</span></span>
<span class="line"><span>+-----------------------------+--------------+</span></span>
<span class="line"><span>|1970-01-01T08:00:00.001+08:00|        1test1|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.002+08:00|      22test22|</span></span>
<span class="line"><span>+-----------------------------+--------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>用于查询的 SQL 语句:</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">select</span><span style="color:#ABB2BF;"> s1, startswith(s1, </span><span style="color:#98C379;">&quot;target&quot;</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;1&quot;</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">sg1</span><span style="color:#ABB2BF;">.d1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>输出序列:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+--------------+----------------------------------------+</span></span>
<span class="line"><span>|                         Time|root.sg1.d1.s1|startswith(root.sg1.d1.s1, &quot;target&quot;=&quot;1&quot;)|</span></span>
<span class="line"><span>+-----------------------------+--------------+----------------------------------------+</span></span>
<span class="line"><span>|1970-01-01T08:00:00.001+08:00|        1test1|                                    true|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.002+08:00|      22test22|                                   false|</span></span>
<span class="line"><span>+-----------------------------+--------------+----------------------------------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="endswith" tabindex="-1"><a class="header-anchor" href="#endswith"><span>EndsWith</span></a></h3><h4 id="函数简介-5" tabindex="-1"><a class="header-anchor" href="#函数简介-5"><span>函数简介</span></a></h4><p>本函数用于判断输入序列是否有指定后缀。</p><p><strong>函数名:</strong> ENDSWITH</p><p><strong>输入序列:</strong> 仅支持单个输入序列，类型为 TEXT。</p><p><strong>参数:</strong></p><ul><li><code>target</code>: 需要匹配的后缀。</li></ul><p><strong>输出序列:</strong> 输出单个序列，类型为 BOOLEAN。</p><p><strong>提示:</strong> 如果输入是NULL，返回NULL。</p><h4 id="使用示例-11" tabindex="-1"><a class="header-anchor" href="#使用示例-11"><span>使用示例</span></a></h4><p>输入序列:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+--------------+</span></span>
<span class="line"><span>|                         Time|root.sg1.d1.s1|</span></span>
<span class="line"><span>+-----------------------------+--------------+</span></span>
<span class="line"><span>|1970-01-01T08:00:00.001+08:00|        1test1|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.002+08:00|      22test22|</span></span>
<span class="line"><span>+-----------------------------+--------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>用于查询的 SQL 语句:</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">select</span><span style="color:#ABB2BF;"> s1, endswith(s1, </span><span style="color:#98C379;">&quot;target&quot;</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;1&quot;</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">sg1</span><span style="color:#ABB2BF;">.d1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>输出序列:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+--------------+--------------------------------------+</span></span>
<span class="line"><span>|                         Time|root.sg1.d1.s1|endswith(root.sg1.d1.s1, &quot;target&quot;=&quot;1&quot;)|</span></span>
<span class="line"><span>+-----------------------------+--------------+--------------------------------------+</span></span>
<span class="line"><span>|1970-01-01T08:00:00.001+08:00|        1test1|                                  true|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.002+08:00|      22test22|                                 false|</span></span>
<span class="line"><span>+-----------------------------+--------------+--------------------------------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concat" tabindex="-1"><a class="header-anchor" href="#concat"><span>Concat</span></a></h3><h4 id="函数简介-6" tabindex="-1"><a class="header-anchor" href="#函数简介-6"><span>函数简介</span></a></h4><p>本函数用于拼接输入序列和<code>target</code>字串。</p><p><strong>函数名:</strong> CONCAT</p><p><strong>输入序列:</strong> 至少一个输入序列，类型为 TEXT。</p><p><strong>参数:</strong></p><ul><li><code>targets</code>: 一系列 K-V, key需要以<code>target</code>为前缀且不重复, value是待拼接的字符串。</li><li><code>series_behind</code>: 指定拼接时时间序列是否在后面，默认为<code>false</code>。</li></ul><p><strong>输出序列:</strong> 输出单个序列，类型为 TEXT。</p><p><strong>提示:</strong></p><ul><li>如果输入序列是NULL, 跳过该序列的拼接。</li><li>函数只能将输入序列和<code>targets</code>区分开各自拼接。<code>concat(s1, &quot;target1&quot;=&quot;IoT&quot;, s2, &quot;target2&quot;=&quot;DB&quot;)</code>和<br><code>concat(s1, s2, &quot;target1&quot;=&quot;IoT&quot;, &quot;target2&quot;=&quot;DB&quot;)</code>得到的结果是一样的。</li></ul><h4 id="使用示例-12" tabindex="-1"><a class="header-anchor" href="#使用示例-12"><span>使用示例</span></a></h4><p>输入序列:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+--------------+--------------+</span></span>
<span class="line"><span>|                         Time|root.sg1.d1.s1|root.sg1.d1.s2|</span></span>
<span class="line"><span>+-----------------------------+--------------+--------------+</span></span>
<span class="line"><span>|1970-01-01T08:00:00.001+08:00|        1test1|          null|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.002+08:00|      22test22|      2222test|</span></span>
<span class="line"><span>+-----------------------------+--------------+--------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>用于查询的 SQL 语句:</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">select</span><span style="color:#ABB2BF;"> s1, s2, </span><span style="color:#56B6C2;">concat</span><span style="color:#ABB2BF;">(s1, s2, </span><span style="color:#98C379;">&quot;target1&quot;</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;IoT&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;target2&quot;</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;DB&quot;</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">sg1</span><span style="color:#ABB2BF;">.d1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>输出序列:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+--------------+--------------+-----------------------------------------------------------------------+</span></span>
<span class="line"><span>|                         Time|root.sg1.d1.s1|root.sg1.d1.s2|concat(root.sg1.d1.s1, root.sg1.d1.s2, &quot;target1&quot;=&quot;IoT&quot;, &quot;target2&quot;=&quot;DB&quot;)|</span></span>
<span class="line"><span>+-----------------------------+--------------+--------------+-----------------------------------------------------------------------+</span></span>
<span class="line"><span>|1970-01-01T08:00:00.001+08:00|        1test1|          null|                                                            1test1IoTDB|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.002+08:00|      22test22|      2222test|                                                  22test222222testIoTDB|</span></span>
<span class="line"><span>+-----------------------------+--------------+--------------+-----------------------------------------------------------------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>另一个用于查询的 SQL 语句:</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">select</span><span style="color:#ABB2BF;"> s1, s2, </span><span style="color:#56B6C2;">concat</span><span style="color:#ABB2BF;">(s1, s2, </span><span style="color:#98C379;">&quot;target1&quot;</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;IoT&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;target2&quot;</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;DB&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;series_behind&quot;</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;true&quot;</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">sg1</span><span style="color:#ABB2BF;">.d1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>输出序列:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+--------------+--------------+-----------------------------------------------------------------------------------------------+</span></span>
<span class="line"><span>|                         Time|root.sg1.d1.s1|root.sg1.d1.s2|concat(root.sg1.d1.s1, root.sg1.d1.s2, &quot;target1&quot;=&quot;IoT&quot;, &quot;target2&quot;=&quot;DB&quot;, &quot;series_behind&quot;=&quot;true&quot;)|</span></span>
<span class="line"><span>+-----------------------------+--------------+--------------+-----------------------------------------------------------------------------------------------+</span></span>
<span class="line"><span>|1970-01-01T08:00:00.001+08:00|        1test1|          null|                                                                                    IoTDB1test1|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.002+08:00|      22test22|      2222test|                                                                          IoTDB22test222222test|</span></span>
<span class="line"><span>+-----------------------------+--------------+--------------+-----------------------------------------------------------------------------------------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="substring" tabindex="-1"><a class="header-anchor" href="#substring"><span>Substring</span></a></h3><h4 id="函数简介-7" tabindex="-1"><a class="header-anchor" href="#函数简介-7"><span>函数简介</span></a></h4><p>提取字符串的子字符串，从指定的第一个字符开始，并在指定的字符数之后停止。下标从1开始。from 和 for的范围是 INT32 类型取值范围。</p><p><strong>函数名:</strong> SUBSTRING</p><p><strong>输入序列:</strong> 仅支持单个输入序列，类型为TEXT。</p><p><strong>参数:</strong></p><ul><li><code>from</code>: 指定子串开始下标。</li><li><code>for</code>: 指定多少个字符数后停止。</li></ul><p><strong>输出序列:</strong> 输出单个序列，类型为 TEXT。</p><p><strong>提示:</strong> 如果输入是NULL，返回NULL。</p><h4 id="使用示例-13" tabindex="-1"><a class="header-anchor" href="#使用示例-13"><span>使用示例</span></a></h4><p>输入序列:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+--------------+</span></span>
<span class="line"><span>|                         Time|root.sg1.d1.s1|</span></span>
<span class="line"><span>+-----------------------------+--------------+</span></span>
<span class="line"><span>|1970-01-01T08:00:00.001+08:00|        1test1|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.002+08:00|      22test22|</span></span>
<span class="line"><span>+-----------------------------+--------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>用于查询的 SQL 语句:</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">select</span><span style="color:#ABB2BF;"> s1, </span><span style="color:#56B6C2;">substring</span><span style="color:#ABB2BF;">(s1 </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> 1</span><span style="color:#C678DD;"> for</span><span style="color:#D19A66;"> 2</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">sg1</span><span style="color:#ABB2BF;">.d1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>输出序列:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+--------------+--------------------------------------+</span></span>
<span class="line"><span>|                         Time|root.sg1.d1.s1|SUBSTRING(root.sg1.d1.s1 FROM 1 FOR 2)|</span></span>
<span class="line"><span>+-----------------------------+--------------+--------------------------------------+</span></span>
<span class="line"><span>|1970-01-01T08:00:00.001+08:00|        1test1|                                    1t|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.002+08:00|      22test22|                                    22|</span></span>
<span class="line"><span>+-----------------------------+--------------+--------------------------------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="replace" tabindex="-1"><a class="header-anchor" href="#replace"><span>Replace</span></a></h3><h4 id="函数简介-8" tabindex="-1"><a class="header-anchor" href="#函数简介-8"><span>函数简介</span></a></h4><p>将输入序列中的子串替换成目标子串。</p><p><strong>函数名:</strong> REPLACE</p><p><strong>输入序列:</strong> 仅支持单个输入序列，类型为TEXT。</p><p><strong>参数:</strong></p><ul><li>第一个参数: 需要替换的目标子串。</li><li>第二个参数: 要替换成的子串。</li></ul><p><strong>输出序列:</strong> 输出单个序列，类型为 TEXT。</p><p><strong>提示:</strong> 如果输入是NULL，返回NULL。</p><h4 id="使用示例-14" tabindex="-1"><a class="header-anchor" href="#使用示例-14"><span>使用示例</span></a></h4><p>输入序列:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+--------------+</span></span>
<span class="line"><span>|                         Time|root.sg1.d1.s1|</span></span>
<span class="line"><span>+-----------------------------+--------------+</span></span>
<span class="line"><span>|1970-01-01T08:00:00.001+08:00|        1test1|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.002+08:00|      22test22|</span></span>
<span class="line"><span>+-----------------------------+--------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>用于查询的 SQL 语句:</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">select</span><span style="color:#ABB2BF;"> s1, </span><span style="color:#56B6C2;">replace</span><span style="color:#ABB2BF;">(s1, </span><span style="color:#98C379;">&#39;es&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;tt&#39;</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">sg1</span><span style="color:#ABB2BF;">.d1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>输出序列:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+--------------+-----------------------------------+</span></span>
<span class="line"><span>|                         Time|root.sg1.d1.s1|REPLACE(root.sg1.d1.s1, &#39;es&#39;, &#39;tt&#39;)|</span></span>
<span class="line"><span>+-----------------------------+--------------+-----------------------------------+</span></span>
<span class="line"><span>|1970-01-01T08:00:00.001+08:00|        1test1|                             1tttt1|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.002+08:00|      22test22|                           22tttt22|</span></span>
<span class="line"><span>+-----------------------------+--------------+-----------------------------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="upper" tabindex="-1"><a class="header-anchor" href="#upper"><span>Upper</span></a></h3><h4 id="函数简介-9" tabindex="-1"><a class="header-anchor" href="#函数简介-9"><span>函数简介</span></a></h4><p>本函数用于将输入序列转化为大写。</p><p><strong>函数名:</strong> UPPER</p><p><strong>输入序列:</strong> 仅支持单个输入序列，类型为TEXT。</p><p><strong>输出序列:</strong> 输出单个序列，类型为 TEXT。</p><p><strong>提示:</strong> 如果输入是NULL，返回NULL。</p><h4 id="使用示例-15" tabindex="-1"><a class="header-anchor" href="#使用示例-15"><span>使用示例</span></a></h4><p>输入序列:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+--------------+</span></span>
<span class="line"><span>|                         Time|root.sg1.d1.s1|</span></span>
<span class="line"><span>+-----------------------------+--------------+</span></span>
<span class="line"><span>|1970-01-01T08:00:00.001+08:00|        1test1|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.002+08:00|      22test22|</span></span>
<span class="line"><span>+-----------------------------+--------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>用于查询的 SQL 语句:</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">select</span><span style="color:#ABB2BF;"> s1, </span><span style="color:#56B6C2;">upper</span><span style="color:#ABB2BF;">(s1) </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">sg1</span><span style="color:#ABB2BF;">.d1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>输出序列:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+--------------+---------------------+</span></span>
<span class="line"><span>|                         Time|root.sg1.d1.s1|upper(root.sg1.d1.s1)|</span></span>
<span class="line"><span>+-----------------------------+--------------+---------------------+</span></span>
<span class="line"><span>|1970-01-01T08:00:00.001+08:00|        1test1|               1TEST1|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.002+08:00|      22test22|             22TEST22|</span></span>
<span class="line"><span>+-----------------------------+--------------+---------------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="lower" tabindex="-1"><a class="header-anchor" href="#lower"><span>Lower</span></a></h3><h4 id="函数简介-10" tabindex="-1"><a class="header-anchor" href="#函数简介-10"><span>函数简介</span></a></h4><p>本函数用于将输入序列转换为小写。</p><p><strong>函数名:</strong> LOWER</p><p><strong>输入序列:</strong> 仅支持单个输入序列，类型为TEXT。</p><p><strong>输出序列:</strong> 输出单个序列，类型为 TEXT。</p><p><strong>提示:</strong> 如果输入是NULL，返回NULL。</p><h4 id="使用示例-16" tabindex="-1"><a class="header-anchor" href="#使用示例-16"><span>使用示例</span></a></h4><p>输入序列:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+--------------+</span></span>
<span class="line"><span>|                         Time|root.sg1.d1.s1|</span></span>
<span class="line"><span>+-----------------------------+--------------+</span></span>
<span class="line"><span>|1970-01-01T08:00:00.001+08:00|        1TEST1|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.002+08:00|      22TEST22|</span></span>
<span class="line"><span>+-----------------------------+--------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>用于查询的 SQL 语句:</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">select</span><span style="color:#ABB2BF;"> s1, </span><span style="color:#56B6C2;">lower</span><span style="color:#ABB2BF;">(s1) </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">sg1</span><span style="color:#ABB2BF;">.d1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>输出序列:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+--------------+---------------------+</span></span>
<span class="line"><span>|                         Time|root.sg1.d1.s1|lower(root.sg1.d1.s1)|</span></span>
<span class="line"><span>+-----------------------------+--------------+---------------------+</span></span>
<span class="line"><span>|1970-01-01T08:00:00.001+08:00|        1TEST1|               1test1|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.002+08:00|      22TEST22|             22test22|</span></span>
<span class="line"><span>+-----------------------------+--------------+---------------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="trim" tabindex="-1"><a class="header-anchor" href="#trim"><span>Trim</span></a></h3><h4 id="函数简介-11" tabindex="-1"><a class="header-anchor" href="#函数简介-11"><span>函数简介</span></a></h4><p>本函数用于移除输入序列前后的空格。</p><p><strong>函数名:</strong> TRIM</p><p><strong>输入序列:</strong> 仅支持单个输入序列，类型为TEXT。</p><p><strong>输出序列:</strong> 输出单个序列，类型为 TEXT。</p><p><strong>提示:</strong> 如果输入是NULL，返回NULL。</p><h4 id="使用示例-17" tabindex="-1"><a class="header-anchor" href="#使用示例-17"><span>使用示例</span></a></h4><p>输入序列:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+--------------+</span></span>
<span class="line"><span>|                         Time|root.sg1.d1.s3|</span></span>
<span class="line"><span>+-----------------------------+--------------+</span></span>
<span class="line"><span>|1970-01-01T08:00:00.002+08:00|   3querytest3|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.003+08:00|  3querytest3 |</span></span>
<span class="line"><span>+-----------------------------+--------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>用于查询的 SQL 语句:</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">select</span><span style="color:#ABB2BF;"> s3, </span><span style="color:#56B6C2;">trim</span><span style="color:#ABB2BF;">(s3) </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">sg1</span><span style="color:#ABB2BF;">.d1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>输出序列:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+--------------+--------------------+</span></span>
<span class="line"><span>|                         Time|root.sg1.d1.s3|trim(root.sg1.d1.s3)|</span></span>
<span class="line"><span>+-----------------------------+--------------+--------------------+</span></span>
<span class="line"><span>|1970-01-01T08:00:00.002+08:00|   3querytest3|         3querytest3|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.003+08:00|  3querytest3 |         3querytest3|</span></span>
<span class="line"><span>+-----------------------------+--------------+--------------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="strcmp" tabindex="-1"><a class="header-anchor" href="#strcmp"><span>StrCmp</span></a></h3><h4 id="函数简介-12" tabindex="-1"><a class="header-anchor" href="#函数简介-12"><span>函数简介</span></a></h4><p>本函数用于比较两个输入序列。 如果值相同返回 <code>0</code> , 序列1的值小于序列2的值返回一个<code>负数</code>，序列1的值大于序列2的值返回一个<code>正数</code>。</p><p><strong>函数名:</strong> StrCmp</p><p><strong>输入序列:</strong> 输入两个序列，类型均为 TEXT。</p><p><strong>输出序列:</strong> 输出单个序列，类型为 TEXT。</p><p><strong>提示:</strong> 如果任何一个输入是NULL，返回NULL。</p><h4 id="使用示例-18" tabindex="-1"><a class="header-anchor" href="#使用示例-18"><span>使用示例</span></a></h4><p>输入序列:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+--------------+--------------+</span></span>
<span class="line"><span>|                         Time|root.sg1.d1.s1|root.sg1.d1.s2|</span></span>
<span class="line"><span>+-----------------------------+--------------+--------------+</span></span>
<span class="line"><span>|1970-01-01T08:00:00.001+08:00|        1test1|          null|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.002+08:00|      22test22|      2222test|</span></span>
<span class="line"><span>+-----------------------------+--------------+--------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>用于查询的 SQL 语句:</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">select</span><span style="color:#ABB2BF;"> s1, s2, strcmp(s1, s2) </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">sg1</span><span style="color:#ABB2BF;">.d1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>输出序列:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+--------------+--------------+--------------------------------------+</span></span>
<span class="line"><span>|                         Time|root.sg1.d1.s1|root.sg1.d1.s2|strcmp(root.sg1.d1.s1, root.sg1.d1.s2)|</span></span>
<span class="line"><span>+-----------------------------+--------------+--------------+--------------------------------------+</span></span>
<span class="line"><span>|1970-01-01T08:00:00.001+08:00|        1test1|          null|                                  null|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.002+08:00|      22test22|      2222test|                                    66|</span></span>
<span class="line"><span>+-----------------------------+--------------+--------------+--------------------------------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="strreplace" tabindex="-1"><a class="header-anchor" href="#strreplace"><span>StrReplace</span></a></h3><h4 id="函数简介-13" tabindex="-1"><a class="header-anchor" href="#函数简介-13"><span>函数简介</span></a></h4><p><strong>非内置函数，需要注册数据质量函数库后才能使用</strong>。本函数用于将文本中的子串替换为指定的字符串。</p><p><strong>函数名：</strong> STRREPLACE</p><p><strong>输入序列：</strong> 仅支持单个输入序列，类型为 TEXT。</p><p><strong>参数：</strong></p><ul><li><code>target</code>: 需要替换的字符子串</li><li><code>replace</code>: 替换后的字符串。</li><li><code>limit</code>: 替换次数，大于等于 -1 的整数，默认为 -1 表示所有匹配的子串都会被替换。</li><li><code>offset</code>: 需要跳过的匹配次数，即前<code>offset</code>次匹配到的字符子串并不会被替换，默认为 0。</li><li><code>reverse</code>: 是否需要反向计数，默认为 false 即按照从左向右的次序。</li></ul><p><strong>输出序列：</strong> 输出单个序列，类型为 TEXT。</p><h4 id="使用示例-19" tabindex="-1"><a class="header-anchor" href="#使用示例-19"><span>使用示例</span></a></h4><p>输入序列：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+---------------+</span></span>
<span class="line"><span>|                         Time|root.test.d1.s1|</span></span>
<span class="line"><span>+-----------------------------+---------------+</span></span>
<span class="line"><span>|2021-01-01T00:00:01.000+08:00|      A,B,A+,B-|</span></span>
<span class="line"><span>|2021-01-01T00:00:02.000+08:00|      A,A+,A,B+|</span></span>
<span class="line"><span>|2021-01-01T00:00:03.000+08:00|         B+,B,B|</span></span>
<span class="line"><span>|2021-01-01T00:00:04.000+08:00|      A+,A,A+,A|</span></span>
<span class="line"><span>|2021-01-01T00:00:05.000+08:00|       A,B-,B,B|</span></span>
<span class="line"><span>+-----------------------------+---------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>用于查询的 SQL 语句：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">select</span><span style="color:#ABB2BF;"> strreplace(s1, </span><span style="color:#98C379;">&quot;target&quot;</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;,&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;replace&quot;</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;/&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;limit&quot;</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;2&quot;</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">test</span><span style="color:#ABB2BF;">.d1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>输出序列：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+-----------------------------------------+</span></span>
<span class="line"><span>|                         Time|strreplace(root.test.d1.s1, &quot;target&quot;=&quot;,&quot;,|</span></span>
<span class="line"><span>|                             |              &quot;replace&quot;=&quot;/&quot;, &quot;limit&quot;=&quot;2&quot;)|</span></span>
<span class="line"><span>+-----------------------------+-----------------------------------------+</span></span>
<span class="line"><span>|2021-01-01T00:00:01.000+08:00|                                A/B/A+,B-|</span></span>
<span class="line"><span>|2021-01-01T00:00:02.000+08:00|                                A/A+/A,B+|</span></span>
<span class="line"><span>|2021-01-01T00:00:03.000+08:00|                                   B+/B/B|</span></span>
<span class="line"><span>|2021-01-01T00:00:04.000+08:00|                                A+/A/A+,A|</span></span>
<span class="line"><span>|2021-01-01T00:00:05.000+08:00|                                 A/B-/B,B|</span></span>
<span class="line"><span>+-----------------------------+-----------------------------------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>另一个用于查询的 SQL 语句：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">select</span><span style="color:#ABB2BF;"> strreplace(s1, </span><span style="color:#98C379;">&quot;target&quot;</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;,&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;replace&quot;</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;/&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;limit&quot;</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;1&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;offset&quot;</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;1&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;reverse&quot;</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;true&quot;</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">test</span><span style="color:#ABB2BF;">.d1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>输出序列：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+-----------------------------------------------------+</span></span>
<span class="line"><span>|                         Time|strreplace(root.test.d1.s1, &quot;target&quot;=&quot;,&quot;, &quot;replace&quot;= | </span></span>
<span class="line"><span>|                             |    &quot;|&quot;, &quot;limit&quot;=&quot;1&quot;, &quot;offset&quot;=&quot;1&quot;, &quot;reverse&quot;=&quot;true&quot;)|</span></span>
<span class="line"><span>+-----------------------------+-----------------------------------------------------+</span></span>
<span class="line"><span>|2021-01-01T00:00:01.000+08:00|                                            A,B/A+,B-|</span></span>
<span class="line"><span>|2021-01-01T00:00:02.000+08:00|                                            A,A+/A,B+|</span></span>
<span class="line"><span>|2021-01-01T00:00:03.000+08:00|                                               B+/B,B|</span></span>
<span class="line"><span>|2021-01-01T00:00:04.000+08:00|                                            A+,A/A+,A|</span></span>
<span class="line"><span>|2021-01-01T00:00:05.000+08:00|                                             A,B-/B,B|</span></span>
<span class="line"><span>+-----------------------------+-----------------------------------------------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="regexmatch" tabindex="-1"><a class="header-anchor" href="#regexmatch"><span>RegexMatch</span></a></h3><h4 id="函数简介-14" tabindex="-1"><a class="header-anchor" href="#函数简介-14"><span>函数简介</span></a></h4><p><strong>非内置函数，需要注册数据质量函数库后才能使用</strong>。本函数用于正则表达式匹配文本中的具体内容并返回。</p><p><strong>函数名：</strong> REGEXMATCH</p><p><strong>输入序列：</strong> 仅支持单个输入序列，类型为 TEXT。</p><p><strong>参数：</strong></p><ul><li><code>regex</code>: 匹配的正则表达式，支持所有 Java 正则表达式语法，比如<code>\\d+\\.\\d+\\.\\d+\\.\\d+</code>将会匹配任意 IPv4 地址.</li><li><code>group</code>: 输出的匹配组序号，根据 java.util.regex 规定，第 0 组为整个正则表达式，此后的组按照左括号出现的顺序依次编号。<br> 如<code>A(B(CD))</code>中共有三个组，第 0 组<code>A(B(CD))</code>，第 1 组<code>B(CD)</code>和第 2 组<code>CD</code>。</li></ul><p><strong>输出序列：</strong> 输出单个序列，类型为 TEXT。</p><p><strong>提示：</strong> 空值或无法匹配给定的正则表达式的数据点没有输出结果。</p><h4 id="使用示例-20" tabindex="-1"><a class="header-anchor" href="#使用示例-20"><span>使用示例</span></a></h4><p>输入序列：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+-------------------------------+</span></span>
<span class="line"><span>|                         Time|                root.test.d1.s1|</span></span>
<span class="line"><span>+-----------------------------+-------------------------------+</span></span>
<span class="line"><span>|2021-01-01T00:00:01.000+08:00|        [192.168.0.1] [SUCCESS]|</span></span>
<span class="line"><span>|2021-01-01T00:00:02.000+08:00|       [192.168.0.24] [SUCCESS]|</span></span>
<span class="line"><span>|2021-01-01T00:00:03.000+08:00|           [192.168.0.2] [FAIL]|</span></span>
<span class="line"><span>|2021-01-01T00:00:04.000+08:00|        [192.168.0.5] [SUCCESS]|</span></span>
<span class="line"><span>|2021-01-01T00:00:05.000+08:00|      [192.168.0.124] [SUCCESS]|</span></span>
<span class="line"><span>+-----------------------------+-------------------------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>用于查询的 SQL 语句：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">select</span><span style="color:#ABB2BF;"> regexmatch(s1, </span><span style="color:#98C379;">&quot;regex&quot;</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;\\d+\\.\\d+\\.\\d+\\.\\d+&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;group&quot;</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;0&quot;</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">test</span><span style="color:#ABB2BF;">.d1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>输出序列：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+----------------------------------------------------------------------+</span></span>
<span class="line"><span>|                         Time|regexmatch(root.test.d1.s1, &quot;regex&quot;=&quot;\\d+\\.\\d+\\.\\d+\\.\\d+&quot;, &quot;group&quot;=&quot;0&quot;)|</span></span>
<span class="line"><span>+-----------------------------+----------------------------------------------------------------------+</span></span>
<span class="line"><span>|2021-01-01T00:00:01.000+08:00|                                                           192.168.0.1|</span></span>
<span class="line"><span>|2021-01-01T00:00:02.000+08:00|                                                          192.168.0.24|</span></span>
<span class="line"><span>|2021-01-01T00:00:03.000+08:00|                                                           192.168.0.2|</span></span>
<span class="line"><span>|2021-01-01T00:00:04.000+08:00|                                                           192.168.0.5|</span></span>
<span class="line"><span>|2021-01-01T00:00:05.000+08:00|                                                         192.168.0.124|</span></span>
<span class="line"><span>+-----------------------------+----------------------------------------------------------------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="regexreplace" tabindex="-1"><a class="header-anchor" href="#regexreplace"><span>RegexReplace</span></a></h3><h5 id="函数简介-15" tabindex="-1"><a class="header-anchor" href="#函数简介-15"><span>函数简介</span></a></h5><p><strong>非内置函数，需要注册数据质量函数库后才能使用</strong>。本函数用于将文本中符合正则表达式的匹配结果替换为指定的字符串。</p><p><strong>函数名：</strong> REGEXREPLACE</p><p><strong>输入序列：</strong> 仅支持单个输入序列，类型为 TEXT。</p><p><strong>参数：</strong></p><ul><li><code>regex</code>: 需要替换的正则表达式，支持所有 Java 正则表达式语法。</li><li><code>replace</code>: 替换后的字符串，支持 Java 正则表达式中的后向引用，<br> 形如&#39;$1&#39;指代了正则表达式<code>regex</code>中的第一个分组，并会在替换时自动填充匹配到的子串。</li><li><code>limit</code>: 替换次数，大于等于 -1 的整数，默认为 -1 表示所有匹配的子串都会被替换。</li><li><code>offset</code>: 需要跳过的匹配次数，即前<code>offset</code>次匹配到的字符子串并不会被替换，默认为 0。</li><li><code>reverse</code>: 是否需要反向计数，默认为 false 即按照从左向右的次序。</li></ul><p><strong>输出序列：</strong> 输出单个序列，类型为 TEXT。</p><h5 id="使用示例-21" tabindex="-1"><a class="header-anchor" href="#使用示例-21"><span>使用示例</span></a></h5><p>输入序列：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+-------------------------------+</span></span>
<span class="line"><span>|                         Time|                root.test.d1.s1|</span></span>
<span class="line"><span>+-----------------------------+-------------------------------+</span></span>
<span class="line"><span>|2021-01-01T00:00:01.000+08:00|        [192.168.0.1] [SUCCESS]|</span></span>
<span class="line"><span>|2021-01-01T00:00:02.000+08:00|       [192.168.0.24] [SUCCESS]|</span></span>
<span class="line"><span>|2021-01-01T00:00:03.000+08:00|           [192.168.0.2] [FAIL]|</span></span>
<span class="line"><span>|2021-01-01T00:00:04.000+08:00|        [192.168.0.5] [SUCCESS]|</span></span>
<span class="line"><span>|2021-01-01T00:00:05.000+08:00|      [192.168.0.124] [SUCCESS]|</span></span>
<span class="line"><span>+-----------------------------+-------------------------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>用于查询的 SQL 语句：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">select</span><span style="color:#ABB2BF;"> regexreplace(s1, </span><span style="color:#98C379;">&quot;regex&quot;</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;192\\.168\\.0\\.(\\d+)&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;replace&quot;</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;cluster-$1&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;limit&quot;</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;1&quot;</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">test</span><span style="color:#ABB2BF;">.d1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>输出序列：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+-----------------------------------------------------------+</span></span>
<span class="line"><span>|                         Time|regexreplace(root.test.d1.s1, &quot;regex&quot;=&quot;192\\.168\\.0\\.(\\d+)&quot;,|</span></span>
<span class="line"><span>|                             |                       &quot;replace&quot;=&quot;cluster-$1&quot;, &quot;limit&quot;=&quot;1&quot;)|</span></span>
<span class="line"><span>+-----------------------------+-----------------------------------------------------------+</span></span>
<span class="line"><span>|2021-01-01T00:00:01.000+08:00|                                      [cluster-1] [SUCCESS]|</span></span>
<span class="line"><span>|2021-01-01T00:00:02.000+08:00|                                     [cluster-24] [SUCCESS]|</span></span>
<span class="line"><span>|2021-01-01T00:00:03.000+08:00|                                         [cluster-2] [FAIL]|</span></span>
<span class="line"><span>|2021-01-01T00:00:04.000+08:00|                                      [cluster-5] [SUCCESS]|</span></span>
<span class="line"><span>|2021-01-01T00:00:05.000+08:00|                                    [cluster-124] [SUCCESS]|</span></span>
<span class="line"><span>+-----------------------------+-----------------------------------------------------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="regexsplit" tabindex="-1"><a class="header-anchor" href="#regexsplit"><span>RegexSplit</span></a></h4><h5 id="函数简介-16" tabindex="-1"><a class="header-anchor" href="#函数简介-16"><span>函数简介</span></a></h5><p><strong>非内置函数，需要注册数据质量函数库后才能使用</strong>。本函数用于使用给定的正则表达式切分文本，并返回指定的项。</p><p><strong>函数名：</strong> REGEXSPLIT</p><p><strong>输入序列：</strong> 仅支持单个输入序列，类型为 TEXT。</p><p><strong>参数：</strong></p><ul><li><code>regex</code>: 用于分割文本的正则表达式，支持所有 Java 正则表达式语法，比如<code>[&#39;&quot;]</code>将会匹配任意的英文引号<code>&#39;</code>和<code>&quot;</code>。</li><li><code>index</code>: 输出结果在切分后数组中的序号，需要是大于等于 -1 的整数，默认值为 -1 表示返回切分后数组的长度，其它非负整数即表示返回数组中对应位置的切分结果（数组的秩从 0 开始计数）。</li></ul><p><strong>输出序列：</strong> 输出单个序列，在<code>index</code>为 -1 时输出数据类型为 INT32，否则为 TEXT。</p><p><strong>提示：</strong> 如果<code>index</code>超出了切分后结果数组的秩范围，例如使用<code>,</code>切分<code>0,1,2</code>时输入<code>index</code>为 3，则该数据点没有输出结果。</p><h5 id="使用示例-22" tabindex="-1"><a class="header-anchor" href="#使用示例-22"><span>使用示例</span></a></h5><p>输入序列：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+---------------+</span></span>
<span class="line"><span>|                         Time|root.test.d1.s1|</span></span>
<span class="line"><span>+-----------------------------+---------------+</span></span>
<span class="line"><span>|2021-01-01T00:00:01.000+08:00|      A,B,A+,B-|</span></span>
<span class="line"><span>|2021-01-01T00:00:02.000+08:00|      A,A+,A,B+|</span></span>
<span class="line"><span>|2021-01-01T00:00:03.000+08:00|         B+,B,B|</span></span>
<span class="line"><span>|2021-01-01T00:00:04.000+08:00|      A+,A,A+,A|</span></span>
<span class="line"><span>|2021-01-01T00:00:05.000+08:00|       A,B-,B,B|</span></span>
<span class="line"><span>+-----------------------------+---------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>用于查询的 SQL 语句：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">select</span><span style="color:#ABB2BF;"> regexsplit(s1, </span><span style="color:#98C379;">&quot;regex&quot;</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;,&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;index&quot;</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;-1&quot;</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">test</span><span style="color:#ABB2BF;">.d1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>输出序列：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+------------------------------------------------------+</span></span>
<span class="line"><span>|                         Time|regexsplit(root.test.d1.s1, &quot;regex&quot;=&quot;,&quot;, &quot;index&quot;=&quot;-1&quot;)|</span></span>
<span class="line"><span>+-----------------------------+------------------------------------------------------+</span></span>
<span class="line"><span>|2021-01-01T00:00:01.000+08:00|                                                     4|</span></span>
<span class="line"><span>|2021-01-01T00:00:02.000+08:00|                                                     4|</span></span>
<span class="line"><span>|2021-01-01T00:00:03.000+08:00|                                                     3|</span></span>
<span class="line"><span>|2021-01-01T00:00:04.000+08:00|                                                     4|</span></span>
<span class="line"><span>|2021-01-01T00:00:05.000+08:00|                                                     4|</span></span>
<span class="line"><span>+-----------------------------+------------------------------------------------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>另一个查询的 SQL 语句：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">select</span><span style="color:#ABB2BF;"> regexsplit(s1, </span><span style="color:#98C379;">&quot;regex&quot;</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;,&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;index&quot;</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;3&quot;</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">test</span><span style="color:#ABB2BF;">.d1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>输出序列：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+-----------------------------------------------------+</span></span>
<span class="line"><span>|                         Time|regexsplit(root.test.d1.s1, &quot;regex&quot;=&quot;,&quot;, &quot;index&quot;=&quot;3&quot;)|</span></span>
<span class="line"><span>+-----------------------------+-----------------------------------------------------+</span></span>
<span class="line"><span>|2021-01-01T00:00:01.000+08:00|                                                   B-|</span></span>
<span class="line"><span>|2021-01-01T00:00:02.000+08:00|                                                   B+|</span></span>
<span class="line"><span>|2021-01-01T00:00:04.000+08:00|                                                    A|</span></span>
<span class="line"><span>|2021-01-01T00:00:05.000+08:00|                                                    B|</span></span>
<span class="line"><span>+-----------------------------+-----------------------------------------------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="数据类型转换" tabindex="-1"><a class="header-anchor" href="#数据类型转换"><span>数据类型转换</span></a></h2><h3 id="cast" tabindex="-1"><a class="header-anchor" href="#cast"><span>CAST</span></a></h3><h4 id="函数简介-17" tabindex="-1"><a class="header-anchor" href="#函数简介-17"><span>函数简介</span></a></h4><p>当前 IoTDB 支持6种数据类型，其中包括 INT32、INT64、FLOAT、DOUBLE、BOOLEAN 以及 TEXT。当我们对数据进行查询或者计算时可能需要进行数据类型的转换， 比如说将 TEXT 转换为 INT32，或者提高数据精度，比如说将 FLOAT 转换为 DOUBLE。IoTDB 支持使用cast 函数对数据类型进行转换。</p><p>语法示例如下：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">SELECT</span><span style="color:#56B6C2;"> cast</span><span style="color:#ABB2BF;">(s1 </span><span style="color:#C678DD;">as</span><span style="color:#ABB2BF;"> INT32) </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">sg</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>cast 函数语法形式上与 PostgreSQL 一致，AS 后指定的数据类型表明要转换成的目标类型，目前 IoTDB 支持的六种数据类型均可以在 cast 函数中使用，遵循的转换规则如下表所示，其中行表示原始数据类型，列表示要转化成的目标数据类型：</p><table><thead><tr><th></th><th><strong>INT32</strong></th><th><strong>INT64</strong></th><th><strong>FLOAT</strong></th><th><strong>DOUBLE</strong></th><th><strong>BOOLEAN</strong></th><th><strong>TEXT</strong></th></tr></thead><tbody><tr><td><strong>INT32</strong></td><td>不转化</td><td>直接转化</td><td>直接转化</td><td>直接转化</td><td>!=0 : true<br>==0: false</td><td>String.valueOf()</td></tr><tr><td><strong>INT64</strong></td><td>超出 INT32 范围：执行抛异常<br>否则：直接转化</td><td>不转化</td><td>直接转化</td><td>直接转化</td><td>!=0L : true<br>==0: false</td><td>String.valueOf()</td></tr><tr><td><strong>FLOAT</strong></td><td>超出 INT32 范围：执行抛异常<br>否则：四舍五入(Math.round())</td><td>超出 INT64 范围：执行抛异常<br>否则：四舍五入(Math.round())</td><td>不转化</td><td>直接转化</td><td>!=0.0f : true<br>==0: false</td><td>String.valueOf()</td></tr><tr><td><strong>DOUBLE</strong></td><td>超出 INT32 范围：执行抛异常<br>否则：四舍五入(Math.round())</td><td>超出 INT64 范围：执行抛异常<br>否则：四舍五入(Math.round())</td><td>超出 FLOAT 范围：执行抛异常<br>否则：直接转化</td><td>不转化</td><td>!=0.0 : true<br>==0: false</td><td>String.valueOf()</td></tr><tr><td><strong>BOOLEAN</strong></td><td>true: 1<br>false: 0</td><td>true: 1L<br>false: 0</td><td>true: 1.0f<br>false: 0</td><td>true: 1.0<br>false: 0</td><td>不转化</td><td>true: &quot;true&quot;<br>false: &quot;false&quot;</td></tr><tr><td><strong>TEXT</strong></td><td>Integer.parseInt()</td><td>Long.parseLong()</td><td>Float.parseFloat()</td><td>Double.parseDouble()</td><td>text.toLowerCase ==&quot;true&quot; : true<br>text.toLowerCase ==&quot;false&quot; : false<br>其它情况：执行抛异常</td><td>不转化</td></tr></tbody></table><h4 id="使用示例-23" tabindex="-1"><a class="header-anchor" href="#使用示例-23"><span>使用示例</span></a></h4><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>// timeseries</span></span>
<span class="line"><span>IoTDB&gt; show timeseries root.sg.d1.**</span></span>
<span class="line"><span>+-------------+-----+--------+--------+--------+-----------+----+----------+--------+------------------+</span></span>
<span class="line"><span>|   Timeseries|Alias|Database|DataType|Encoding|Compression|Tags|Attributes|Deadband|DeadbandParameters|</span></span>
<span class="line"><span>+-------------+-----+--------+--------+--------+-----------+----+----------+--------+------------------+</span></span>
<span class="line"><span>|root.sg.d1.s3| null| root.sg|   FLOAT|   PLAIN|     SNAPPY|null|      null|    null|              null|</span></span>
<span class="line"><span>|root.sg.d1.s4| null| root.sg|  DOUBLE|   PLAIN|     SNAPPY|null|      null|    null|              null|</span></span>
<span class="line"><span>|root.sg.d1.s5| null| root.sg| BOOLEAN|   PLAIN|     SNAPPY|null|      null|    null|              null|</span></span>
<span class="line"><span>|root.sg.d1.s6| null| root.sg|    TEXT|   PLAIN|     SNAPPY|null|      null|    null|              null|</span></span>
<span class="line"><span>|root.sg.d1.s1| null| root.sg|   INT32|   PLAIN|     SNAPPY|null|      null|    null|              null|</span></span>
<span class="line"><span>|root.sg.d1.s2| null| root.sg|   INT64|   PLAIN|     SNAPPY|null|      null|    null|              null|</span></span>
<span class="line"><span>+-------------+-----+--------+--------+--------+-----------+----+----------+--------+------------------+</span></span>
<span class="line"><span></span></span>
<span class="line"><span>// data of timeseries</span></span>
<span class="line"><span>IoTDB&gt; select * from root.sg.d1;</span></span>
<span class="line"><span>+-----------------------------+-------------+-------------+-------------+-------------+-------------+-------------+</span></span>
<span class="line"><span>|                         Time|root.sg.d1.s3|root.sg.d1.s4|root.sg.d1.s5|root.sg.d1.s6|root.sg.d1.s1|root.sg.d1.s2|</span></span>
<span class="line"><span>+-----------------------------+-------------+-------------+-------------+-------------+-------------+-------------+</span></span>
<span class="line"><span>|1970-01-01T08:00:00.000+08:00|          0.0|          0.0|        false|        10000|            0|            0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.001+08:00|          1.0|          1.0|        false|            3|            1|            1|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.002+08:00|          2.7|          2.7|         true|         TRue|            2|            2|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.003+08:00|         3.33|         3.33|         true|        faLse|            3|            3|</span></span>
<span class="line"><span>+-----------------------------+-------------+-------------+-------------+-------------+-------------+-------------+</span></span>
<span class="line"><span></span></span>
<span class="line"><span>// cast BOOLEAN to other types</span></span>
<span class="line"><span>IoTDB&gt; select cast(s5 as INT32), cast(s5 as INT64),cast(s5 as FLOAT),cast(s5 as DOUBLE), cast(s5 as TEXT) from root.sg.d1</span></span>
<span class="line"><span>+-----------------------------+----------------------------+----------------------------+----------------------------+-----------------------------+---------------------------+</span></span>
<span class="line"><span>|                         Time|CAST(root.sg.d1.s5 AS INT32)|CAST(root.sg.d1.s5 AS INT64)|CAST(root.sg.d1.s5 AS FLOAT)|CAST(root.sg.d1.s5 AS DOUBLE)|CAST(root.sg.d1.s5 AS TEXT)|</span></span>
<span class="line"><span>+-----------------------------+----------------------------+----------------------------+----------------------------+-----------------------------+---------------------------+</span></span>
<span class="line"><span>|1970-01-01T08:00:00.000+08:00|                           0|                           0|                         0.0|                          0.0|                      false|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.001+08:00|                           0|                           0|                         0.0|                          0.0|                      false|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.002+08:00|                           1|                           1|                         1.0|                          1.0|                       true|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.003+08:00|                           1|                           1|                         1.0|                          1.0|                       true|</span></span>
<span class="line"><span>+-----------------------------+----------------------------+----------------------------+----------------------------+-----------------------------+---------------------------+</span></span>
<span class="line"><span></span></span>
<span class="line"><span>// cast TEXT to numeric types</span></span>
<span class="line"><span>IoTDB&gt; select cast(s6 as INT32), cast(s6 as INT64), cast(s6 as FLOAT), cast(s6 as DOUBLE) from root.sg.d1 where time &lt; 2</span></span>
<span class="line"><span>+-----------------------------+----------------------------+----------------------------+----------------------------+-----------------------------+</span></span>
<span class="line"><span>|                         Time|CAST(root.sg.d1.s6 AS INT32)|CAST(root.sg.d1.s6 AS INT64)|CAST(root.sg.d1.s6 AS FLOAT)|CAST(root.sg.d1.s6 AS DOUBLE)|</span></span>
<span class="line"><span>+-----------------------------+----------------------------+----------------------------+----------------------------+-----------------------------+</span></span>
<span class="line"><span>|1970-01-01T08:00:00.000+08:00|                       10000|                       10000|                     10000.0|                      10000.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.001+08:00|                           3|                           3|                         3.0|                          3.0|</span></span>
<span class="line"><span>+-----------------------------+----------------------------+----------------------------+----------------------------+-----------------------------+</span></span>
<span class="line"><span></span></span>
<span class="line"><span>// cast TEXT to BOOLEAN</span></span>
<span class="line"><span>IoTDB&gt; select cast(s6 as BOOLEAN) from root.sg.d1 where time &gt;= 2</span></span>
<span class="line"><span>+-----------------------------+------------------------------+</span></span>
<span class="line"><span>|                         Time|CAST(root.sg.d1.s6 AS BOOLEAN)|</span></span>
<span class="line"><span>+-----------------------------+------------------------------+</span></span>
<span class="line"><span>|1970-01-01T08:00:00.002+08:00|                          true|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.003+08:00|                         false|</span></span>
<span class="line"><span>+-----------------------------+------------------------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="常序列生成函数" tabindex="-1"><a class="header-anchor" href="#常序列生成函数"><span>常序列生成函数</span></a></h2><p>常序列生成函数用于生成所有数据点的值都相同的时间序列。</p><p>常序列生成函数接受一个或者多个时间序列输入，其输出的数据点的时间戳集合是这些输入序列时间戳集合的并集。</p><p>目前 IoTDB 支持如下常序列生成函数：</p><table><thead><tr><th>函数名</th><th>必要的属性参数</th><th>输出序列类型</th><th>功能描述</th></tr></thead><tbody><tr><td>CONST</td><td><code>value</code>: 输出的数据点的值 <br><code>type</code>: 输出的数据点的类型，只能是 INT32 / INT64 / FLOAT / DOUBLE / BOOLEAN / TEXT</td><td>由输入属性参数 <code>type</code> 决定</td><td>根据输入属性 <code>value</code> 和 <code>type</code> 输出用户指定的常序列。</td></tr><tr><td>PI</td><td>无</td><td>DOUBLE</td><td>常序列的值：<code>π</code> 的 <code>double</code> 值，圆的周长与其直径的比值，即圆周率，等于 <em>Java标准库</em> 中的<code>Math.PI</code>。</td></tr><tr><td>E</td><td>无</td><td>DOUBLE</td><td>常序列的值：<code>e</code> 的 <code>double</code> 值，自然对数的底，它等于 <em>Java 标准库</em> 中的 <code>Math.E</code>。</td></tr></tbody></table><p>例如：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">select</span><span style="color:#ABB2BF;"> s1, s2, const(s1, </span><span style="color:#98C379;">&#39;value&#39;</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&#39;1024&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;type&#39;</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&#39;INT64&#39;</span><span style="color:#ABB2BF;">), </span><span style="color:#56B6C2;">pi</span><span style="color:#ABB2BF;">(s2), e(s1, s2) </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">sg1</span><span style="color:#ABB2BF;">.d1;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>结果：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>select s1, s2, const(s1, &#39;value&#39;=&#39;1024&#39;, &#39;type&#39;=&#39;INT64&#39;), pi(s2), e(s1, s2) from root.sg1.d1; </span></span>
<span class="line"><span>+-----------------------------+--------------+--------------+-----------------------------------------------------+------------------+---------------------------------+</span></span>
<span class="line"><span>|                         Time|root.sg1.d1.s1|root.sg1.d1.s2|const(root.sg1.d1.s1, &quot;value&quot;=&quot;1024&quot;, &quot;type&quot;=&quot;INT64&quot;)|pi(root.sg1.d1.s2)|e(root.sg1.d1.s1, root.sg1.d1.s2)|</span></span>
<span class="line"><span>+-----------------------------+--------------+--------------+-----------------------------------------------------+------------------+---------------------------------+</span></span>
<span class="line"><span>|1970-01-01T08:00:00.000+08:00|           0.0|           0.0|                                                 1024| 3.141592653589793|                2.718281828459045|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.001+08:00|           1.0|          null|                                                 1024|              null|                2.718281828459045|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.002+08:00|           2.0|          null|                                                 1024|              null|                2.718281828459045|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.003+08:00|          null|           3.0|                                                 null| 3.141592653589793|                2.718281828459045|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.004+08:00|          null|           4.0|                                                 null| 3.141592653589793|                2.718281828459045|</span></span>
<span class="line"><span>+-----------------------------+--------------+--------------+-----------------------------------------------------+------------------+---------------------------------+</span></span>
<span class="line"><span>Total line number = 5</span></span>
<span class="line"><span>It costs 0.005s</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="选择函数" tabindex="-1"><a class="header-anchor" href="#选择函数"><span>选择函数</span></a></h2><p>目前 IoTDB 支持如下选择函数：</p><table><thead><tr><th>函数名</th><th>输入序列类型</th><th>必要的属性参数</th><th>输出序列类型</th><th>功能描述</th></tr></thead><tbody><tr><td>TOP_K</td><td>INT32 / INT64 / FLOAT / DOUBLE / TEXT</td><td><code>k</code>: 最多选择的数据点数，必须大于 0 小于等于 1000</td><td>与输入序列的实际类型一致</td><td>返回某时间序列中值最大的<code>k</code>个数据点。若多于<code>k</code>个数据点的值并列最大，则返回时间戳最小的数据点。</td></tr><tr><td>BOTTOM_K</td><td>INT32 / INT64 / FLOAT / DOUBLE / TEXT</td><td><code>k</code>: 最多选择的数据点数，必须大于 0 小于等于 1000</td><td>与输入序列的实际类型一致</td><td>返回某时间序列中值最小的<code>k</code>个数据点。若多于<code>k</code>个数据点的值并列最小，则返回时间戳最小的数据点。</td></tr></tbody></table><p>例如：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">select</span><span style="color:#ABB2BF;"> s1, top_k(s1, </span><span style="color:#98C379;">&#39;k&#39;</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&#39;2&#39;</span><span style="color:#ABB2BF;">), bottom_k(s1, </span><span style="color:#98C379;">&#39;k&#39;</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&#39;2&#39;</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">sg1</span><span style="color:#ABB2BF;">.d2 </span><span style="color:#C678DD;">where</span><span style="color:#C678DD;"> time</span><span style="color:#56B6C2;"> &gt;</span><span style="color:#D19A66;"> 2020</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">12</span><span style="color:#ABB2BF;">-10T20:</span><span style="color:#D19A66;">36</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">15</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">530</span><span style="color:#ABB2BF;">+</span><span style="color:#D19A66;">08</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>结果：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+--------------------+------------------------------+---------------------------------+</span></span>
<span class="line"><span>|                         Time|      root.sg1.d2.s1|top_k(root.sg1.d2.s1, &quot;k&quot;=&quot;2&quot;)|bottom_k(root.sg1.d2.s1, &quot;k&quot;=&quot;2&quot;)|</span></span>
<span class="line"><span>+-----------------------------+--------------------+------------------------------+---------------------------------+</span></span>
<span class="line"><span>|2020-12-10T20:36:15.531+08:00| 1531604122307244742|           1531604122307244742|                             null|</span></span>
<span class="line"><span>|2020-12-10T20:36:15.532+08:00|-7426070874923281101|                          null|                             null|</span></span>
<span class="line"><span>|2020-12-10T20:36:15.533+08:00|-7162825364312197604|          -7162825364312197604|                             null|</span></span>
<span class="line"><span>|2020-12-10T20:36:15.534+08:00|-8581625725655917595|                          null|             -8581625725655917595|</span></span>
<span class="line"><span>|2020-12-10T20:36:15.535+08:00|-7667364751255535391|                          null|             -7667364751255535391|</span></span>
<span class="line"><span>+-----------------------------+--------------------+------------------------------+---------------------------------+</span></span>
<span class="line"><span>Total line number = 5</span></span>
<span class="line"><span>It costs 0.006s</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="区间查询函数" tabindex="-1"><a class="header-anchor" href="#区间查询函数"><span>区间查询函数</span></a></h2><h3 id="连续满足区间函数" tabindex="-1"><a class="header-anchor" href="#连续满足区间函数"><span>连续满足区间函数</span></a></h3><p>连续满足条件区间函数用来查询所有满足指定条件的连续区间。</p><p>按返回值可分为两类：</p><ol><li>返回满足条件连续区间的起始时间戳和时间跨度(时间跨度为0表示此处只有起始时间这一个数据点满足条件)</li><li>返回满足条件连续区间的起始时间戳和后面连续满足条件的点的个数（个数为1表示此处只有起始时间这一个数据点满足条件）</li></ol><table><thead><tr><th>函数名</th><th>输入序列类型</th><th>属性参数</th><th>输出序列类型</th><th>功能描述</th></tr></thead><tbody><tr><td>ZERO_DURATION</td><td>INT32/ INT64/ FLOAT/ DOUBLE/ BOOLEAN</td><td><code>min</code>:可选，默认值0<br><code>max</code>:可选，默认值<code>Long.MAX_VALUE</code></td><td>Long</td><td>返回时间序列连续为0(false)的开始时间与持续时间，持续时间t(单位ms)满足<code>t &gt;= min &amp;&amp; t &lt;= max</code></td></tr><tr><td>NON_ZERO_DURATION</td><td>INT32/ INT64/ FLOAT/ DOUBLE/ BOOLEAN</td><td><code>min</code>:可选，默认值0<br><code>max</code>:可选，默认值<code>Long.MAX_VALUE</code></td><td>Long</td><td>返回时间序列连续不为0(false)的开始时间与持续时间，持续时间t(单位ms)满足<code>t &gt;= min &amp;&amp; t &lt;= max</code></td></tr><tr><td>ZERO_COUNT</td><td>INT32/ INT64/ FLOAT/ DOUBLE/ BOOLEAN</td><td><code>min</code>:可选，默认值1<br><code>max</code>:可选，默认值<code>Long.MAX_VALUE</code></td><td>Long</td><td>返回时间序列连续为0(false)的开始时间与其后数据点的个数，数据点个数n满足<code>n &gt;= min &amp;&amp; n &lt;= max</code></td></tr><tr><td>NON_ZERO_COUNT</td><td>INT32/ INT64/ FLOAT/ DOUBLE/ BOOLEAN</td><td><code>min</code>:可选，默认值1<br><code>max</code>:可选，默认值<code>Long.MAX_VALUE</code></td><td>Long</td><td>返回时间序列连续不为0(false)的开始时间与其后数据点的个数，数据点个数n满足<code>n &gt;= min &amp;&amp; n &lt;= max</code></td></tr></tbody></table><p>测试数据:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>IoTDB&gt; select s1,s2,s3,s4,s5 from root.sg.d2;</span></span>
<span class="line"><span>+-----------------------------+-------------+-------------+-------------+-------------+-------------+</span></span>
<span class="line"><span>|                         Time|root.sg.d2.s1|root.sg.d2.s2|root.sg.d2.s3|root.sg.d2.s4|root.sg.d2.s5|</span></span>
<span class="line"><span>+-----------------------------+-------------+-------------+-------------+-------------+-------------+</span></span>
<span class="line"><span>|1970-01-01T08:00:00.000+08:00|            0|            0|          0.0|          0.0|        false|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.001+08:00|            1|            1|          1.0|          1.0|         true|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.002+08:00|            1|            1|          1.0|          1.0|         true|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.003+08:00|            0|            0|          0.0|          0.0|        false|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.004+08:00|            1|            1|          1.0|          1.0|         true|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.005+08:00|            0|            0|          0.0|          0.0|        false|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.006+08:00|            0|            0|          0.0|          0.0|        false|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.007+08:00|            1|            1|          1.0|          1.0|         true|</span></span>
<span class="line"><span>+-----------------------------+-------------+-------------+-------------+-------------+-------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>sql:</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">select</span><span style="color:#ABB2BF;"> s1, zero_count(s1), non_zero_count(s2), zero_duration(s3), non_zero_duration(s4) </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">sg</span><span style="color:#ABB2BF;">.d2;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>结果:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+-------------+-------------------------+-----------------------------+----------------------------+--------------------------------+</span></span>
<span class="line"><span>|                         Time|root.sg.d2.s1|zero_count(root.sg.d2.s1)|non_zero_count(root.sg.d2.s2)|zero_duration(root.sg.d2.s3)|non_zero_duration(root.sg.d2.s4)|</span></span>
<span class="line"><span>+-----------------------------+-------------+-------------------------+-----------------------------+----------------------------+--------------------------------+</span></span>
<span class="line"><span>|1970-01-01T08:00:00.000+08:00|            0|                        1|                         null|                           0|                            null|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.001+08:00|            1|                     null|                            2|                        null|                               1|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.002+08:00|            1|                     null|                         null|                        null|                            null|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.003+08:00|            0|                        1|                         null|                           0|                            null|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.004+08:00|            1|                     null|                            1|                        null|                               0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.005+08:00|            0|                        2|                         null|                           1|                            null|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.006+08:00|            0|                     null|                         null|                        null|                            null|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.007+08:00|            1|                     null|                            1|                        null|                               0|</span></span>
<span class="line"><span>+-----------------------------+-------------+-------------------------+-----------------------------+----------------------------+--------------------------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="趋势计算函数" tabindex="-1"><a class="header-anchor" href="#趋势计算函数"><span>趋势计算函数</span></a></h2><p>目前 IoTDB 支持如下趋势计算函数：</p><table><thead><tr><th>函数名</th><th>输入序列类型</th><th>属性参数</th><th>输出序列类型</th><th>功能描述</th></tr></thead><tbody><tr><td>TIME_DIFFERENCE</td><td>INT32 / INT64 / FLOAT / DOUBLE / BOOLEAN / TEXT</td><td>无</td><td>INT64</td><td>统计序列中某数据点的时间戳与前一数据点时间戳的差。范围内第一个数据点没有对应的结果输出。</td></tr><tr><td>DIFFERENCE</td><td>INT32 / INT64 / FLOAT / DOUBLE</td><td>无</td><td>与输入序列的实际类型一致</td><td>统计序列中某数据点的值与前一数据点的值的差。范围内第一个数据点没有对应的结果输出。</td></tr><tr><td>NON_NEGATIVE_DIFFERENCE</td><td>INT32 / INT64 / FLOAT / DOUBLE</td><td>无</td><td>与输入序列的实际类型一致</td><td>统计序列中某数据点的值与前一数据点的值的差的绝对值。范围内第一个数据点没有对应的结果输出。</td></tr><tr><td>DERIVATIVE</td><td>INT32 / INT64 / FLOAT / DOUBLE</td><td>无</td><td>DOUBLE</td><td>统计序列中某数据点相对于前一数据点的变化率，数量上等同于 DIFFERENCE / TIME_DIFFERENCE。范围内第一个数据点没有对应的结果输出。</td></tr><tr><td>NON_NEGATIVE_DERIVATIVE</td><td>INT32 / INT64 / FLOAT / DOUBLE</td><td>无</td><td>DOUBLE</td><td>统计序列中某数据点相对于前一数据点的变化率的绝对值，数量上等同于 NON_NEGATIVE_DIFFERENCE / TIME_DIFFERENCE。范围内第一个数据点没有对应的结果输出。</td></tr><tr><td>DIFF</td><td>INT32 / INT64 / FLOAT / DOUBLE</td><td><code>ignoreNull</code>：可选，默认为true；为true时，前一个数据点值为null时，忽略该数据点继续向前找到第一个出现的不为null的值；为false时，如果前一个数据点为null，则不忽略，使用null进行相减，结果也为null</td><td>DOUBLE</td><td>统计序列中某数据点的值与前一数据点的值的差。第一个数据点没有对应的结果输出，输出值为null</td></tr></tbody></table><p>例如：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">select</span><span style="color:#ABB2BF;"> s1, time_difference(s1), </span><span style="color:#56B6C2;">difference</span><span style="color:#ABB2BF;">(s1), non_negative_difference(s1), derivative(s1), non_negative_derivative(s1) </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">sg1</span><span style="color:#ABB2BF;">.d1 </span><span style="color:#C678DD;">limit</span><span style="color:#D19A66;"> 5</span><span style="color:#ABB2BF;"> offset </span><span style="color:#D19A66;">1000</span><span style="color:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>结果：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+-------------------+-------------------------------+--------------------------+---------------------------------------+--------------------------+---------------------------------------+</span></span>
<span class="line"><span>|                         Time|     root.sg1.d1.s1|time_difference(root.sg1.d1.s1)|difference(root.sg1.d1.s1)|non_negative_difference(root.sg1.d1.s1)|derivative(root.sg1.d1.s1)|non_negative_derivative(root.sg1.d1.s1)|</span></span>
<span class="line"><span>+-----------------------------+-------------------+-------------------------------+--------------------------+---------------------------------------+--------------------------+---------------------------------------+</span></span>
<span class="line"><span>|2020-12-10T17:11:49.037+08:00|7360723084922759782|                              1|      -8431715764844238876|                    8431715764844238876|    -8.4317157648442388E18|                  8.4317157648442388E18|</span></span>
<span class="line"><span>|2020-12-10T17:11:49.038+08:00|4377791063319964531|                              1|      -2982932021602795251|                    2982932021602795251|     -2.982932021602795E18|                   2.982932021602795E18|</span></span>
<span class="line"><span>|2020-12-10T17:11:49.039+08:00|7972485567734642915|                              1|       3594694504414678384|                    3594694504414678384|     3.5946945044146785E18|                  3.5946945044146785E18|</span></span>
<span class="line"><span>|2020-12-10T17:11:49.040+08:00|2508858212791964081|                              1|      -5463627354942678834|                    5463627354942678834|     -5.463627354942679E18|                   5.463627354942679E18|</span></span>
<span class="line"><span>|2020-12-10T17:11:49.041+08:00|2817297431185141819|                              1|        308439218393177738|                     308439218393177738|     3.0843921839317773E17|                  3.0843921839317773E17|</span></span>
<span class="line"><span>+-----------------------------+-------------------+-------------------------------+--------------------------+---------------------------------------+--------------------------+---------------------------------------+</span></span>
<span class="line"><span>Total line number = 5</span></span>
<span class="line"><span>It costs 0.014s</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="使用示例-24" tabindex="-1"><a class="header-anchor" href="#使用示例-24"><span>使用示例</span></a></h3><h4 id="原始数据-3" tabindex="-1"><a class="header-anchor" href="#原始数据-3"><span>原始数据</span></a></h4><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+------------+------------+</span></span>
<span class="line"><span>|                         Time|root.test.s1|root.test.s2|</span></span>
<span class="line"><span>+-----------------------------+------------+------------+</span></span>
<span class="line"><span>|1970-01-01T08:00:00.001+08:00|           1|         1.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.002+08:00|           2|        null|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.003+08:00|        null|         3.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.004+08:00|           4|        null|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.005+08:00|           5|         5.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.006+08:00|        null|         6.0|</span></span>
<span class="line"><span>+-----------------------------+------------+------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="不使用ignorenull参数-忽略null-1" tabindex="-1"><a class="header-anchor" href="#不使用ignorenull参数-忽略null-1"><span>不使用ignoreNull参数(忽略null)</span></a></h4><p>SQL:</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">SELECT</span><span style="color:#ABB2BF;"> DIFF(s1), DIFF(s2) </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">test</span><span style="color:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>输出:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+------------------+------------------+</span></span>
<span class="line"><span>|                         Time|DIFF(root.test.s1)|DIFF(root.test.s2)|</span></span>
<span class="line"><span>+-----------------------------+------------------+------------------+</span></span>
<span class="line"><span>|1970-01-01T08:00:00.001+08:00|              null|              null|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.002+08:00|               1.0|              null|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.003+08:00|              null|               2.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.004+08:00|               2.0|              null|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.005+08:00|               1.0|               2.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.006+08:00|              null|               1.0|</span></span>
<span class="line"><span>+-----------------------------+------------------+------------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="使用ignorenull参数-1" tabindex="-1"><a class="header-anchor" href="#使用ignorenull参数-1"><span>使用ignoreNull参数</span></a></h4><p>SQL:</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">SELECT</span><span style="color:#ABB2BF;"> DIFF(s1, </span><span style="color:#98C379;">&#39;ignoreNull&#39;</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&#39;false&#39;</span><span style="color:#ABB2BF;">), DIFF(s2, </span><span style="color:#98C379;">&#39;ignoreNull&#39;</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&#39;false&#39;</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">test</span><span style="color:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>输出:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+----------------------------------------+----------------------------------------+</span></span>
<span class="line"><span>|                         Time|DIFF(root.test.s1, &quot;ignoreNull&quot;=&quot;false&quot;)|DIFF(root.test.s2, &quot;ignoreNull&quot;=&quot;false&quot;)|</span></span>
<span class="line"><span>+-----------------------------+----------------------------------------+----------------------------------------+</span></span>
<span class="line"><span>|1970-01-01T08:00:00.001+08:00|                                    null|                                    null|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.002+08:00|                                     1.0|                                    null|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.003+08:00|                                    null|                                    null|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.004+08:00|                                    null|                                    null|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.005+08:00|                                     1.0|                                    null|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.006+08:00|                                    null|                                     1.0|</span></span>
<span class="line"><span>+-----------------------------+----------------------------------------+----------------------------------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="采样函数" tabindex="-1"><a class="header-anchor" href="#采样函数"><span>采样函数</span></a></h2><h3 id="等数量分桶降采样函数" tabindex="-1"><a class="header-anchor" href="#等数量分桶降采样函数"><span>等数量分桶降采样函数</span></a></h3><p>本函数对输入序列进行等数量分桶采样，即根据用户给定的降采样比例和降采样方法将输入序列按固定点数等分为若干桶。在每个桶内通过给定的采样方法进行采样。</p><h4 id="等数量分桶随机采样" tabindex="-1"><a class="header-anchor" href="#等数量分桶随机采样"><span>等数量分桶随机采样</span></a></h4><p>对等数量分桶后，桶内进行随机采样。</p><table><thead><tr><th>函数名</th><th>可接收的输入序列类型</th><th>必要的属性参数</th><th>输出序列类型</th><th>功能类型</th></tr></thead><tbody><tr><td>EQUAL_SIZE_BUCKET_RANDOM_SAMPLE</td><td>INT32 / INT64 / FLOAT / DOUBLE</td><td>降采样比例 <code>proportion</code>，取值范围为<code>(0, 1]</code>，默认为<code>0.1</code></td><td>INT32 / INT64 / FLOAT / DOUBLE</td><td>返回符合采样比例的等分桶随机采样</td></tr></tbody></table><h5 id="示例" tabindex="-1"><a class="header-anchor" href="#示例"><span>示例</span></a></h5><p>输入序列:<code>root.ln.wf01.wt01.temperature</code>从<code>0.0-99.0</code>共<code>100</code>条数据。</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>IoTDB&gt; select temperature from root.ln.wf01.wt01;</span></span>
<span class="line"><span>+-----------------------------+-----------------------------+</span></span>
<span class="line"><span>|                         Time|root.ln.wf01.wt01.temperature|</span></span>
<span class="line"><span>+-----------------------------+-----------------------------+</span></span>
<span class="line"><span>|1970-01-01T08:00:00.000+08:00|                          0.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.001+08:00|                          1.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.002+08:00|                          2.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.003+08:00|                          3.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.004+08:00|                          4.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.005+08:00|                          5.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.006+08:00|                          6.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.007+08:00|                          7.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.008+08:00|                          8.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.009+08:00|                          9.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.010+08:00|                         10.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.011+08:00|                         11.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.012+08:00|                         12.0|</span></span>
<span class="line"><span>|.............................|.............................|            </span></span>
<span class="line"><span>|1970-01-01T08:00:00.089+08:00|                         89.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.090+08:00|                         90.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.091+08:00|                         91.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.092+08:00|                         92.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.093+08:00|                         93.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.094+08:00|                         94.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.095+08:00|                         95.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.096+08:00|                         96.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.097+08:00|                         97.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.098+08:00|                         98.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.099+08:00|                         99.0|</span></span>
<span class="line"><span>+-----------------------------+-----------------------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>sql:</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">select</span><span style="color:#ABB2BF;"> equal_size_bucket_random_sample(temperature,</span><span style="color:#98C379;">&#39;proportion&#39;</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&#39;0.1&#39;</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">as</span><span style="color:#ABB2BF;"> random_sample </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">ln</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">wf01</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">wt01</span><span style="color:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>结果:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+-------------+</span></span>
<span class="line"><span>|                         Time|random_sample|</span></span>
<span class="line"><span>+-----------------------------+-------------+</span></span>
<span class="line"><span>|1970-01-01T08:00:00.007+08:00|          7.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.014+08:00|         14.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.020+08:00|         20.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.035+08:00|         35.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.047+08:00|         47.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.059+08:00|         59.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.063+08:00|         63.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.079+08:00|         79.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.086+08:00|         86.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.096+08:00|         96.0|</span></span>
<span class="line"><span>+-----------------------------+-------------+</span></span>
<span class="line"><span>Total line number = 10</span></span>
<span class="line"><span>It costs 0.024s</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="等数量分桶聚合采样" tabindex="-1"><a class="header-anchor" href="#等数量分桶聚合采样"><span>等数量分桶聚合采样</span></a></h4><p>采用聚合采样法对输入序列进行采样，用户需要另外提供一个聚合函数参数即</p><ul><li><code>type</code>：聚合类型，取值为<code>avg</code>或<code>max</code>或<code>min</code>或<code>sum</code>或<code>extreme</code>或<code>variance</code>。在缺省情况下，采用<code>avg</code>。其中<code>extreme</code>表示等分桶中，绝对值最大的值。<code>variance</code>表示采样等分桶中的方差。</li></ul><p>每个桶采样输出的时间戳为这个桶第一个点的时间戳</p><table><thead><tr><th>函数名</th><th>可接收的输入序列类型</th><th>必要的属性参数</th><th>输出序列类型</th><th>功能类型</th></tr></thead><tbody><tr><td>EQUAL_SIZE_BUCKET_AGG_SAMPLE</td><td>INT32 / INT64 / FLOAT / DOUBLE</td><td><code>proportion</code>取值范围为<code>(0, 1]</code>，默认为<code>0.1</code><br><code>type</code>:取值类型有<code>avg</code>, <code>max</code>, <code>min</code>, <code>sum</code>, <code>extreme</code>, <code>variance</code>, 默认为<code>avg</code></td><td>INT32 / INT64 / FLOAT / DOUBLE</td><td>返回符合采样比例的等分桶聚合采样</td></tr></tbody></table><h5 id="示例-1" tabindex="-1"><a class="header-anchor" href="#示例-1"><span>示例</span></a></h5><p>输入序列:<code>root.ln.wf01.wt01.temperature</code>从<code>0.0-99.0</code>共<code>100</code>条有序数据，同等分桶随机采样的测试数据。</p><p>sql:</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">select</span><span style="color:#ABB2BF;"> equal_size_bucket_agg_sample(temperature, </span><span style="color:#98C379;">&#39;type&#39;</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&#39;avg&#39;</span><span style="color:#ABB2BF;">,</span><span style="color:#98C379;">&#39;proportion&#39;</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&#39;0.1&#39;</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">as</span><span style="color:#ABB2BF;"> agg_avg, equal_size_bucket_agg_sample(temperature, </span><span style="color:#98C379;">&#39;type&#39;</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&#39;max&#39;</span><span style="color:#ABB2BF;">,</span><span style="color:#98C379;">&#39;proportion&#39;</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&#39;0.1&#39;</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">as</span><span style="color:#ABB2BF;"> agg_max, equal_size_bucket_agg_sample(temperature,</span><span style="color:#98C379;">&#39;type&#39;</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&#39;min&#39;</span><span style="color:#ABB2BF;">,</span><span style="color:#98C379;">&#39;proportion&#39;</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&#39;0.1&#39;</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">as</span><span style="color:#ABB2BF;"> agg_min, equal_size_bucket_agg_sample(temperature, </span><span style="color:#98C379;">&#39;type&#39;</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&#39;sum&#39;</span><span style="color:#ABB2BF;">,</span><span style="color:#98C379;">&#39;proportion&#39;</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&#39;0.1&#39;</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">as</span><span style="color:#ABB2BF;"> agg_sum, equal_size_bucket_agg_sample(temperature, </span><span style="color:#98C379;">&#39;type&#39;</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&#39;extreme&#39;</span><span style="color:#ABB2BF;">,</span><span style="color:#98C379;">&#39;proportion&#39;</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&#39;0.1&#39;</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">as</span><span style="color:#ABB2BF;"> agg_extreme, equal_size_bucket_agg_sample(temperature, </span><span style="color:#98C379;">&#39;type&#39;</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&#39;variance&#39;</span><span style="color:#ABB2BF;">,</span><span style="color:#98C379;">&#39;proportion&#39;</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&#39;0.1&#39;</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">as</span><span style="color:#ABB2BF;"> agg_variance </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">ln</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">wf01</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">wt01</span><span style="color:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>结果:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+-----------------+-------+-------+-------+-----------+------------+</span></span>
<span class="line"><span>|                         Time|          agg_avg|agg_max|agg_min|agg_sum|agg_extreme|agg_variance|</span></span>
<span class="line"><span>+-----------------------------+-----------------+-------+-------+-------+-----------+------------+</span></span>
<span class="line"><span>|1970-01-01T08:00:00.000+08:00|              4.5|    9.0|    0.0|   45.0|        9.0|        8.25|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.010+08:00|             14.5|   19.0|   10.0|  145.0|       19.0|        8.25|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.020+08:00|             24.5|   29.0|   20.0|  245.0|       29.0|        8.25|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.030+08:00|             34.5|   39.0|   30.0|  345.0|       39.0|        8.25|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.040+08:00|             44.5|   49.0|   40.0|  445.0|       49.0|        8.25|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.050+08:00|             54.5|   59.0|   50.0|  545.0|       59.0|        8.25|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.060+08:00|             64.5|   69.0|   60.0|  645.0|       69.0|        8.25|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.070+08:00|74.50000000000001|   79.0|   70.0|  745.0|       79.0|        8.25|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.080+08:00|             84.5|   89.0|   80.0|  845.0|       89.0|        8.25|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.090+08:00|             94.5|   99.0|   90.0|  945.0|       99.0|        8.25|</span></span>
<span class="line"><span>+-----------------------------+-----------------+-------+-------+-------+-----------+------------+</span></span>
<span class="line"><span>Total line number = 10</span></span>
<span class="line"><span>It costs 0.044s</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="等数量分桶-m4-采样" tabindex="-1"><a class="header-anchor" href="#等数量分桶-m4-采样"><span>等数量分桶 M4 采样</span></a></h4><p>采用M4采样法对输入序列进行采样。即对于每个桶采样首、尾、最小和最大值。</p><table><thead><tr><th>函数名</th><th>可接收的输入序列类型</th><th>必要的属性参数</th><th>输出序列类型</th><th>功能类型</th></tr></thead><tbody><tr><td>EQUAL_SIZE_BUCKET_M4_SAMPLE</td><td>INT32 / INT64 / FLOAT / DOUBLE</td><td><code>proportion</code>取值范围为<code>(0, 1]</code>，默认为<code>0.1</code></td><td>INT32 / INT64 / FLOAT / DOUBLE</td><td>返回符合采样比例的等分桶M4采样</td></tr></tbody></table><h5 id="示例-2" tabindex="-1"><a class="header-anchor" href="#示例-2"><span>示例</span></a></h5><p>输入序列:<code>root.ln.wf01.wt01.temperature</code>从<code>0.0-99.0</code>共<code>100</code>条有序数据，同等分桶随机采样的测试数据。</p><p>sql:</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">select</span><span style="color:#ABB2BF;"> equal_size_bucket_m4_sample(temperature, </span><span style="color:#98C379;">&#39;proportion&#39;</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&#39;0.1&#39;</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">as</span><span style="color:#ABB2BF;"> M4_sample </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">ln</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">wf01</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">wt01</span><span style="color:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>结果:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+---------+</span></span>
<span class="line"><span>|                         Time|M4_sample|</span></span>
<span class="line"><span>+-----------------------------+---------+</span></span>
<span class="line"><span>|1970-01-01T08:00:00.000+08:00|      0.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.001+08:00|      1.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.038+08:00|     38.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.039+08:00|     39.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.040+08:00|     40.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.041+08:00|     41.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.078+08:00|     78.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.079+08:00|     79.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.080+08:00|     80.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.081+08:00|     81.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.098+08:00|     98.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.099+08:00|     99.0|</span></span>
<span class="line"><span>+-----------------------------+---------+</span></span>
<span class="line"><span>Total line number = 12</span></span>
<span class="line"><span>It costs 0.065s</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="等数量分桶离群值采样" tabindex="-1"><a class="header-anchor" href="#等数量分桶离群值采样"><span>等数量分桶离群值采样</span></a></h4><p>本函数对输入序列进行等数量分桶离群值采样，即根据用户给定的降采样比例和桶内采样个数将输入序列按固定点数等分为若干桶，在每个桶内通过给定的离群值采样方法进行采样。</p><table><thead><tr><th>函数名</th><th>可接收的输入序列类型</th><th>必要的属性参数</th><th>输出序列类型</th><th>功能类型</th></tr></thead><tbody><tr><td>EQUAL_SIZE_BUCKET_OUTLIER_SAMPLE</td><td>INT32 / INT64 / FLOAT / DOUBLE</td><td><code>proportion</code>取值范围为<code>(0, 1]</code>，默认为<code>0.1</code><br><code>type</code>取值为<code>avg</code>或<code>stendis</code>或<code>cos</code>或<code>prenextdis</code>，默认为<code>avg</code><br><code>number</code>取值应大于0，默认<code>3</code></td><td>INT32 / INT64 / FLOAT / DOUBLE</td><td>返回符合采样比例和桶内采样个数的等分桶离群值采样</td></tr></tbody></table><p>参数说明</p><ul><li><code>proportion</code>: 采样比例 <ul><li><code>number</code>: 每个桶内的采样个数，默认<code>3</code></li></ul></li><li><code>type</code>: 离群值采样方法，取值为 <ul><li><code>avg</code>: 取桶内数据点的平均值，并根据采样比例，找到距离均值最远的<code>top number</code>个</li><li><code>stendis</code>: 取桶内每一个数据点距离桶的首末数据点连成直线的垂直距离，并根据采样比例，找到距离最大的<code>top number</code>个</li><li><code>cos</code>: 设桶内一个数据点为b，b左边的数据点为a，b右边的数据点为c，则取ab与bc向量的夹角的余弦值，值越小，说明形成的角度越大，越可能是异常值。找到cos值最小的<code>top number</code>个</li><li><code>prenextdis</code>: 设桶内一个数据点为b，b左边的数据点为a，b右边的数据点为c，则取ab与bc的长度之和作为衡量标准，和越大越可能是异常值，找到最大的<code>top number</code>个</li></ul></li></ul><h5 id="示例-3" tabindex="-1"><a class="header-anchor" href="#示例-3"><span>示例</span></a></h5><p>测试数据:<code>root.ln.wf01.wt01.temperature</code>从<code>0.0-99.0</code>共<code>100</code>条数据，其中为了加入离群值，我们使得个位数为5的值自增100。</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>IoTDB&gt; select temperature from root.ln.wf01.wt01;</span></span>
<span class="line"><span>+-----------------------------+-----------------------------+</span></span>
<span class="line"><span>|                         Time|root.ln.wf01.wt01.temperature|</span></span>
<span class="line"><span>+-----------------------------+-----------------------------+</span></span>
<span class="line"><span>|1970-01-01T08:00:00.000+08:00|                          0.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.001+08:00|                          1.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.002+08:00|                          2.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.003+08:00|                          3.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.004+08:00|                          4.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.005+08:00|                        105.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.006+08:00|                          6.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.007+08:00|                          7.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.008+08:00|                          8.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.009+08:00|                          9.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.010+08:00|                         10.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.011+08:00|                         11.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.012+08:00|                         12.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.013+08:00|                         13.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.014+08:00|                         14.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.015+08:00|                        115.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.016+08:00|                         16.0|</span></span>
<span class="line"><span>|.............................|.............................|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.092+08:00|                         92.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.093+08:00|                         93.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.094+08:00|                         94.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.095+08:00|                        195.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.096+08:00|                         96.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.097+08:00|                         97.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.098+08:00|                         98.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.099+08:00|                         99.0|</span></span>
<span class="line"><span>+-----------------------------+-----------------------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>sql:</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">select</span><span style="color:#ABB2BF;"> equal_size_bucket_outlier_sample(temperature, </span><span style="color:#98C379;">&#39;proportion&#39;</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&#39;0.1&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;type&#39;</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&#39;avg&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;number&#39;</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&#39;2&#39;</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">as</span><span style="color:#ABB2BF;"> outlier_avg_sample, equal_size_bucket_outlier_sample(temperature, </span><span style="color:#98C379;">&#39;proportion&#39;</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&#39;0.1&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;type&#39;</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&#39;stendis&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;number&#39;</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&#39;2&#39;</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">as</span><span style="color:#ABB2BF;"> outlier_stendis_sample, equal_size_bucket_outlier_sample(temperature, </span><span style="color:#98C379;">&#39;proportion&#39;</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&#39;0.1&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;type&#39;</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&#39;cos&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;number&#39;</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&#39;2&#39;</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">as</span><span style="color:#ABB2BF;"> outlier_cos_sample, equal_size_bucket_outlier_sample(temperature, </span><span style="color:#98C379;">&#39;proportion&#39;</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&#39;0.1&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;type&#39;</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&#39;prenextdis&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;number&#39;</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&#39;2&#39;</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">as</span><span style="color:#ABB2BF;"> outlier_prenextdis_sample </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">ln</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">wf01</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">wt01</span><span style="color:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>结果:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+------------------+----------------------+------------------+-------------------------+</span></span>
<span class="line"><span>|                         Time|outlier_avg_sample|outlier_stendis_sample|outlier_cos_sample|outlier_prenextdis_sample|</span></span>
<span class="line"><span>+-----------------------------+------------------+----------------------+------------------+-------------------------+</span></span>
<span class="line"><span>|1970-01-01T08:00:00.005+08:00|             105.0|                 105.0|             105.0|                    105.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.015+08:00|             115.0|                 115.0|             115.0|                    115.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.025+08:00|             125.0|                 125.0|             125.0|                    125.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.035+08:00|             135.0|                 135.0|             135.0|                    135.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.045+08:00|             145.0|                 145.0|             145.0|                    145.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.055+08:00|             155.0|                 155.0|             155.0|                    155.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.065+08:00|             165.0|                 165.0|             165.0|                    165.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.075+08:00|             175.0|                 175.0|             175.0|                    175.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.085+08:00|             185.0|                 185.0|             185.0|                    185.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.095+08:00|             195.0|                 195.0|             195.0|                    195.0|</span></span>
<span class="line"><span>+-----------------------------+------------------+----------------------+------------------+-------------------------+</span></span>
<span class="line"><span>Total line number = 10</span></span>
<span class="line"><span>It costs 0.041s</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="m4函数" tabindex="-1"><a class="header-anchor" href="#m4函数"><span>M4函数</span></a></h3><h4 id="函数简介-18" tabindex="-1"><a class="header-anchor" href="#函数简介-18"><span>函数简介</span></a></h4><p>M4用于在窗口内采样第一个点（<code>first</code>）、最后一个点（<code>last</code>）、最小值点（<code>bottom</code>）、最大值点（<code>top</code>）：</p><ul><li>第一个点是拥有这个窗口内最小时间戳的点；</li><li>最后一个点是拥有这个窗口内最大时间戳的点；</li><li>最小值点是拥有这个窗口内最小值的点（如果有多个这样的点，M4只返回其中一个）；</li><li>最大值点是拥有这个窗口内最大值的点（如果有多个这样的点，M4只返回其中一个）。</li></ul><img src="https://alioss.timecho.com/docs/img/github/198178733-a0919d17-0663-4672-9c4f-1efad6f463c2.png" alt="image" style="zoom:50%;"><table><thead><tr><th>函数名</th><th>可接收的输入序列类型</th><th>属性参数</th><th>输出序列类型</th><th>功能类型</th></tr></thead><tbody><tr><td>M4</td><td>INT32 / INT64 / FLOAT / DOUBLE</td><td>包含固定点数的窗口和滑动时间窗口使用不同的属性参数。包含固定点数的窗口使用属性<code>windowSize</code>和<code>slidingStep</code>。滑动时间窗口使用属性<code>timeInterval</code>、<code>slidingStep</code>、<code>displayWindowBegin</code>和<code>displayWindowEnd</code>。更多细节见下文。</td><td>INT32 / INT64 / FLOAT / DOUBLE</td><td>返回每个窗口内的第一个点（<code>first</code>）、最后一个点（<code>last</code>）、最小值点（<code>bottom</code>）、最大值点（<code>top</code>）。在一个窗口内的聚合点输出之前，M4会将它们按照时间戳递增排序并且去重。</td></tr></tbody></table><h4 id="属性参数" tabindex="-1"><a class="header-anchor" href="#属性参数"><span>属性参数</span></a></h4><p><strong>(1) 包含固定点数的窗口（SlidingSizeWindowAccessStrategy）使用的属性参数:</strong></p><ul><li><code>windowSize</code>: 一个窗口内的点数。Int数据类型。必需的属性参数。</li><li><code>slidingStep</code>: 按照设定的点数来滑动窗口。Int数据类型。可选的属性参数；如果没有设置，默认取值和<code>windowSize</code>一样。</li></ul><img src="https://alioss.timecho.com/docs/img/github/198181449-00d563c8-7bce-4ecd-a031-ec120ca42c3f.png" alt="image" style="zoom:50%;"><p><strong>(2) 滑动时间窗口（SlidingTimeWindowAccessStrategy）使用的属性参数:</strong></p><ul><li><code>timeInterval</code>: 一个窗口的时间长度。Long数据类型。必需的属性参数。</li><li><code>slidingStep</code>: 按照设定的时长来滑动窗口。Long数据类型。可选的属性参数；如果没有设置，默认取值和<code>timeInterval</code>一样。</li><li><code>displayWindowBegin</code>: 窗口滑动的起始时间戳位置（包含在内）。Long数据类型。可选的属性参数；如果没有设置，默认取值为Long.MIN_VALUE，意为使用输入的时间序列的第一个点的时间戳作为窗口滑动的起始时间戳位置。</li><li><code>displayWindowEnd</code>: 结束时间限制（不包含在内；本质上和<code>WHERE time &lt; displayWindowEnd</code>起的效果是一样的)。Long数据类型。可选的属性参数；如果没有设置，默认取值为Long.MAX_VALUE，意为除了输入的时间序列自身数据读取完毕之外没有增加额外的结束时间过滤条件限制。</li></ul><img src="https://alioss.timecho.com/docs/img/github/198183015-93b56644-3330-4acf-ae9e-d718a02b5f4c.png" alt="groupBy window" style="zoom:67%;"><h4 id="示例-4" tabindex="-1"><a class="header-anchor" href="#示例-4"><span>示例</span></a></h4><p>输入的时间序列：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#ABB2BF;">+</span><span style="color:#7F848E;font-style:italic;">-----------------------------+------------------+</span></span>
<span class="line"><span style="color:#ABB2BF;">|                         </span><span style="color:#C678DD;">Time</span><span style="color:#ABB2BF;">|</span><span style="color:#D19A66;">root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">vehicle</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">d1</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">s1</span><span style="color:#ABB2BF;">|</span></span>
<span class="line"><span style="color:#ABB2BF;">+</span><span style="color:#7F848E;font-style:italic;">-----------------------------+------------------+</span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#D19A66;">1970</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">01</span><span style="color:#ABB2BF;">-01T08:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">001</span><span style="color:#ABB2BF;">+</span><span style="color:#D19A66;">08</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">|               </span><span style="color:#D19A66;">5</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">|</span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#D19A66;">1970</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">01</span><span style="color:#ABB2BF;">-01T08:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">002</span><span style="color:#ABB2BF;">+</span><span style="color:#D19A66;">08</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">|              </span><span style="color:#D19A66;">15</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">|</span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#D19A66;">1970</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">01</span><span style="color:#ABB2BF;">-01T08:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">005</span><span style="color:#ABB2BF;">+</span><span style="color:#D19A66;">08</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">|              </span><span style="color:#D19A66;">10</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">|</span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#D19A66;">1970</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">01</span><span style="color:#ABB2BF;">-01T08:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">008</span><span style="color:#ABB2BF;">+</span><span style="color:#D19A66;">08</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">|               </span><span style="color:#D19A66;">8</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">|</span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#D19A66;">1970</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">01</span><span style="color:#ABB2BF;">-01T08:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">010</span><span style="color:#ABB2BF;">+</span><span style="color:#D19A66;">08</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">|              </span><span style="color:#D19A66;">30</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">|</span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#D19A66;">1970</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">01</span><span style="color:#ABB2BF;">-01T08:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">020</span><span style="color:#ABB2BF;">+</span><span style="color:#D19A66;">08</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">|              </span><span style="color:#D19A66;">20</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">|</span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#D19A66;">1970</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">01</span><span style="color:#ABB2BF;">-01T08:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">025</span><span style="color:#ABB2BF;">+</span><span style="color:#D19A66;">08</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">|               </span><span style="color:#D19A66;">8</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">|</span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#D19A66;">1970</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">01</span><span style="color:#ABB2BF;">-01T08:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">027</span><span style="color:#ABB2BF;">+</span><span style="color:#D19A66;">08</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">|              </span><span style="color:#D19A66;">20</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">|</span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#D19A66;">1970</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">01</span><span style="color:#ABB2BF;">-01T08:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">030</span><span style="color:#ABB2BF;">+</span><span style="color:#D19A66;">08</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">|              </span><span style="color:#D19A66;">40</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">|</span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#D19A66;">1970</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">01</span><span style="color:#ABB2BF;">-01T08:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">033</span><span style="color:#ABB2BF;">+</span><span style="color:#D19A66;">08</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">|               </span><span style="color:#D19A66;">9</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">|</span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#D19A66;">1970</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">01</span><span style="color:#ABB2BF;">-01T08:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">035</span><span style="color:#ABB2BF;">+</span><span style="color:#D19A66;">08</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">|              </span><span style="color:#D19A66;">10</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">|</span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#D19A66;">1970</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">01</span><span style="color:#ABB2BF;">-01T08:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">040</span><span style="color:#ABB2BF;">+</span><span style="color:#D19A66;">08</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">|              </span><span style="color:#D19A66;">20</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">|</span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#D19A66;">1970</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">01</span><span style="color:#ABB2BF;">-01T08:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">045</span><span style="color:#ABB2BF;">+</span><span style="color:#D19A66;">08</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">|              </span><span style="color:#D19A66;">30</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">|</span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#D19A66;">1970</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">01</span><span style="color:#ABB2BF;">-01T08:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">052</span><span style="color:#ABB2BF;">+</span><span style="color:#D19A66;">08</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">|               </span><span style="color:#D19A66;">8</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">|</span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#D19A66;">1970</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">01</span><span style="color:#ABB2BF;">-01T08:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">054</span><span style="color:#ABB2BF;">+</span><span style="color:#D19A66;">08</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">|              </span><span style="color:#D19A66;">18</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">|</span></span>
<span class="line"><span style="color:#ABB2BF;">+</span><span style="color:#7F848E;font-style:italic;">-----------------------------+------------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查询语句1：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">select</span><span style="color:#ABB2BF;"> M4(s1,</span><span style="color:#98C379;">&#39;timeInterval&#39;</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&#39;25&#39;</span><span style="color:#ABB2BF;">,</span><span style="color:#98C379;">&#39;displayWindowBegin&#39;</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&#39;0&#39;</span><span style="color:#ABB2BF;">,</span><span style="color:#98C379;">&#39;displayWindowEnd&#39;</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&#39;100&#39;</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">vehicle</span><span style="color:#ABB2BF;">.d1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>输出结果1：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#ABB2BF;">+</span><span style="color:#7F848E;font-style:italic;">-----------------------------+-----------------------------------------------------------------------------------------------+</span></span>
<span class="line"><span style="color:#ABB2BF;">|                         </span><span style="color:#C678DD;">Time</span><span style="color:#ABB2BF;">|M4(</span><span style="color:#D19A66;">root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">vehicle</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">d1</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">s1</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;timeInterval&quot;</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;25&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;displayWindowBegin&quot;</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;0&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;displayWindowEnd&quot;</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;100&quot;</span><span style="color:#ABB2BF;">)|</span></span>
<span class="line"><span style="color:#ABB2BF;">+</span><span style="color:#7F848E;font-style:italic;">-----------------------------+-----------------------------------------------------------------------------------------------+</span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#D19A66;">1970</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">01</span><span style="color:#ABB2BF;">-01T08:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">001</span><span style="color:#ABB2BF;">+</span><span style="color:#D19A66;">08</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">|                                                                                            </span><span style="color:#D19A66;">5</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">|</span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#D19A66;">1970</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">01</span><span style="color:#ABB2BF;">-01T08:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">010</span><span style="color:#ABB2BF;">+</span><span style="color:#D19A66;">08</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">|                                                                                           </span><span style="color:#D19A66;">30</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">|</span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#D19A66;">1970</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">01</span><span style="color:#ABB2BF;">-01T08:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">020</span><span style="color:#ABB2BF;">+</span><span style="color:#D19A66;">08</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">|                                                                                           </span><span style="color:#D19A66;">20</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">|</span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#D19A66;">1970</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">01</span><span style="color:#ABB2BF;">-01T08:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">025</span><span style="color:#ABB2BF;">+</span><span style="color:#D19A66;">08</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">|                                                                                            </span><span style="color:#D19A66;">8</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">|</span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#D19A66;">1970</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">01</span><span style="color:#ABB2BF;">-01T08:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">030</span><span style="color:#ABB2BF;">+</span><span style="color:#D19A66;">08</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">|                                                                                           </span><span style="color:#D19A66;">40</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">|</span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#D19A66;">1970</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">01</span><span style="color:#ABB2BF;">-01T08:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">045</span><span style="color:#ABB2BF;">+</span><span style="color:#D19A66;">08</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">|                                                                                           </span><span style="color:#D19A66;">30</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">|</span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#D19A66;">1970</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">01</span><span style="color:#ABB2BF;">-01T08:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">052</span><span style="color:#ABB2BF;">+</span><span style="color:#D19A66;">08</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">|                                                                                            </span><span style="color:#D19A66;">8</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">|</span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#D19A66;">1970</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">01</span><span style="color:#ABB2BF;">-01T08:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">054</span><span style="color:#ABB2BF;">+</span><span style="color:#D19A66;">08</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">|                                                                                           </span><span style="color:#D19A66;">18</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">|</span></span>
<span class="line"><span style="color:#ABB2BF;">+</span><span style="color:#7F848E;font-style:italic;">-----------------------------+-----------------------------------------------------------------------------------------------+</span></span>
<span class="line"><span style="color:#ABB2BF;">Total </span><span style="color:#C678DD;">line</span><span style="color:#C678DD;"> number</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 8</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查询语句2：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">select</span><span style="color:#ABB2BF;"> M4(s1,</span><span style="color:#98C379;">&#39;windowSize&#39;</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&#39;10&#39;</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">vehicle</span><span style="color:#ABB2BF;">.d1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>输出结果2：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#ABB2BF;">+</span><span style="color:#7F848E;font-style:italic;">-----------------------------+-----------------------------------------+</span></span>
<span class="line"><span style="color:#ABB2BF;">|                         </span><span style="color:#C678DD;">Time</span><span style="color:#ABB2BF;">|M4(</span><span style="color:#D19A66;">root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">vehicle</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">d1</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">s1</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;windowSize&quot;</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;10&quot;</span><span style="color:#ABB2BF;">)|</span></span>
<span class="line"><span style="color:#ABB2BF;">+</span><span style="color:#7F848E;font-style:italic;">-----------------------------+-----------------------------------------+</span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#D19A66;">1970</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">01</span><span style="color:#ABB2BF;">-01T08:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">001</span><span style="color:#ABB2BF;">+</span><span style="color:#D19A66;">08</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">|                                      </span><span style="color:#D19A66;">5</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">|</span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#D19A66;">1970</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">01</span><span style="color:#ABB2BF;">-01T08:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">030</span><span style="color:#ABB2BF;">+</span><span style="color:#D19A66;">08</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">|                                     </span><span style="color:#D19A66;">40</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">|</span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#D19A66;">1970</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">01</span><span style="color:#ABB2BF;">-01T08:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">033</span><span style="color:#ABB2BF;">+</span><span style="color:#D19A66;">08</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">|                                      </span><span style="color:#D19A66;">9</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">|</span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#D19A66;">1970</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">01</span><span style="color:#ABB2BF;">-01T08:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">035</span><span style="color:#ABB2BF;">+</span><span style="color:#D19A66;">08</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">|                                     </span><span style="color:#D19A66;">10</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">|</span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#D19A66;">1970</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">01</span><span style="color:#ABB2BF;">-01T08:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">045</span><span style="color:#ABB2BF;">+</span><span style="color:#D19A66;">08</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">|                                     </span><span style="color:#D19A66;">30</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">|</span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#D19A66;">1970</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">01</span><span style="color:#ABB2BF;">-01T08:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">052</span><span style="color:#ABB2BF;">+</span><span style="color:#D19A66;">08</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">|                                      </span><span style="color:#D19A66;">8</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">|</span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#D19A66;">1970</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">01</span><span style="color:#ABB2BF;">-01T08:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">054</span><span style="color:#ABB2BF;">+</span><span style="color:#D19A66;">08</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">|                                     </span><span style="color:#D19A66;">18</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">|</span></span>
<span class="line"><span style="color:#ABB2BF;">+</span><span style="color:#7F848E;font-style:italic;">-----------------------------+-----------------------------------------+</span></span>
<span class="line"><span style="color:#ABB2BF;">Total </span><span style="color:#C678DD;">line</span><span style="color:#C678DD;"> number</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 7</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="推荐的使用场景" tabindex="-1"><a class="header-anchor" href="#推荐的使用场景"><span>推荐的使用场景</span></a></h4><p><strong>(1) 使用场景：保留极端点的降采样</strong></p><p>由于M4为每个窗口聚合其第一个点（<code>first</code>）、最后一个点（<code>last</code>）、最小值点（<code>bottom</code>）、最大值点（<code>top</code>），因此M4通常保留了极值点，因此比其他下采样方法（如分段聚合近似 (PAA)）能更好地保留模式。如果你想对时间序列进行下采样并且希望保留极值点，你可以试试 M4。</p><p><strong>(2) 使用场景：基于M4降采样的大规模时间序列的零误差双色折线图可视化</strong></p><p>参考论文<a href="http://www.vldb.org/pvldb/vol7/p797-jugel.pdf" target="_blank" rel="noopener noreferrer">&quot;M4: A Visualization-Oriented Time Series Data Aggregation&quot;</a>，作为大规模时间序列可视化的降采样方法，M4可以做到双色折线图的零变形。</p><p>假设屏幕画布的像素宽乘高是<code>w*h</code>，假设时间序列要可视化的时间范围是<code>[tqs,tqe)</code>，并且(tqe-tqs)是w的整数倍，那么落在第i个时间跨度<code>Ii=[tqs+(tqe-tqs)/w*(i-1),tqs+(tqe-tqs)/w*i)</code> 内的点将会被画在第i个像素列中，i=1,2,...,w。于是从可视化驱动的角度出发，使用查询语句：<code>&quot;select M4(s1,&#39;timeInterval&#39;=&#39;(tqe-tqs)/w&#39;,&#39;displayWindowBegin&#39;=&#39;tqs&#39;,&#39;displayWindowEnd&#39;=&#39;tqe&#39;) from root.vehicle.d1&quot;</code>，来采集每个时间跨度内的第一个点（<code>first</code>）、最后一个点（<code>last</code>）、最小值点（<code>bottom</code>）、最大值点（<code>top</code>）。降采样时间序列的结果点数不会超过<code>4*w</code>个，与此同时，使用这些聚合点画出来的二色折线图与使用原始数据画出来的在像素级别上是完全一致的。</p><p>为了免除参数值硬编码的麻烦，当Grafana用于可视化时，我们推荐使用Grafana的<a href="https://grafana.com/docs/grafana/latest/dashboards/variables/add-template-variables/#global-variables" target="_blank" rel="noopener noreferrer">模板变量</a><code>$ __interval_ms</code>，如下所示：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">select</span><span style="color:#ABB2BF;"> M4(s1,</span><span style="color:#98C379;">&#39;timeInterval&#39;</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&#39;$__interval_ms&#39;</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">sg1</span><span style="color:#ABB2BF;">.d1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>其中<code>timeInterval</code>自动设置为<code>(tqe-tqs)/w</code>。请注意，这里的时间精度假定为毫秒。</p><h4 id="和其它函数的功能比较" tabindex="-1"><a class="header-anchor" href="#和其它函数的功能比较"><span>和其它函数的功能比较</span></a></h4><table><thead><tr><th>SQL</th><th>是否支持M4聚合</th><th>滑动窗口类型</th><th>示例</th><th>相关文档</th></tr></thead><tbody><tr><td>1. 带有Group By子句的内置聚合函数</td><td>不支持，缺少<code>BOTTOM_TIME</code>和<code>TOP_TIME</code>，即缺少最小值点和最大值点的时间戳。</td><td>Time Window</td><td><code>select count(status), max_value(temperature) from root.ln.wf01.wt01 group by ([2017-11-01 00:00:00, 2017-11-07 23:00:00), 3h, 1d)</code></td><td><a href="https://iotdb.apache.org/UserGuide/Master/Query-Data/Aggregate-Query.html#built-in-aggregate-functions" target="_blank" rel="noopener noreferrer">https://iotdb.apache.org/UserGuide/Master/Query-Data/Aggregate-Query.html#built-in-aggregate-functions</a> <br><a href="https://iotdb.apache.org/UserGuide/Master/Query-Data/Aggregate-Query.html#downsampling-aggregate-query" target="_blank" rel="noopener noreferrer">https://iotdb.apache.org/UserGuide/Master/Query-Data/Aggregate-Query.html#downsampling-aggregate-query</a></td></tr><tr><td>2. EQUAL_SIZE_BUCKET_M4_SAMPLE (内置UDF)</td><td>支持*</td><td>Size Window. <code>windowSize = 4*(int)(1/proportion)</code></td><td><code>select equal_size_bucket_m4_sample(temperature, &#39;proportion&#39;=&#39;0.1&#39;) as M4_sample from root.ln.wf01.wt01</code></td><td><a href="https://iotdb.apache.org/UserGuide/Master/Query-Data/Select-Expression.html#time-series-generating-functions" target="_blank" rel="noopener noreferrer">https://iotdb.apache.org/UserGuide/Master/Query-Data/Select-Expression.html#time-series-generating-functions</a></td></tr><tr><td><strong>3. M4 (内置UDF)</strong></td><td>支持*</td><td>Size Window, Time Window</td><td>(1) Size Window: <code>select M4(s1,&#39;windowSize&#39;=&#39;10&#39;) from root.vehicle.d1</code> <br>(2) Time Window: <code>select M4(s1,&#39;timeInterval&#39;=&#39;25&#39;,&#39;displayWindowBegin&#39;=&#39;0&#39;,&#39;displayWindowEnd&#39;=&#39;100&#39;) from root.vehicle.d1</code></td><td>本文档</td></tr><tr><td>4. 扩展带有Group By子句的内置聚合函数来支持M4聚合</td><td>未实施</td><td>未实施</td><td>未实施</td><td>未实施</td></tr></tbody></table><p>进一步比较<code>EQUAL_SIZE_BUCKET_M4_SAMPLE</code>和<code>M4</code>：</p><p><strong>(1) 不同的M4聚合函数定义：</strong></p><p>在每个窗口内，<code>EQUAL_SIZE_BUCKET_M4_SAMPLE</code>从排除了第一个点和最后一个点之后剩余的点中提取最小值点和最大值点。</p><p>而<code>M4</code>则是从窗口内所有点中（包括第一个点和最后一个点）提取最小值点和最大值点，这个定义与元数据中保存的<code>max_value</code>和<code>min_value</code>的语义更加一致。</p><p>值得注意的是，在一个窗口内的聚合点输出之前，<code>EQUAL_SIZE_BUCKET_M4_SAMPLE</code>和<code>M4</code>都会将它们按照时间戳递增排序并且去重。</p><p><strong>(2) 不同的滑动窗口：</strong></p><p><code>EQUAL_SIZE_BUCKET_M4_SAMPLE</code>使用SlidingSizeWindowAccessStrategy，并且通过采样比例（<code>proportion</code>）来间接控制窗口点数（<code>windowSize</code>)，转换公式是<code>windowSize = 4*(int)(1/proportion)</code>。</p><p><code>M4</code>支持两种滑动窗口：SlidingSizeWindowAccessStrategy和SlidingTimeWindowAccessStrategy，并且<code>M4</code>通过相应的参数直接控制窗口的点数或者时长。</p><h2 id="时间序列处理" tabindex="-1"><a class="header-anchor" href="#时间序列处理"><span>时间序列处理</span></a></h2><h3 id="change-points" tabindex="-1"><a class="header-anchor" href="#change-points"><span>CHANGE_POINTS</span></a></h3><h4 id="函数简介-19" tabindex="-1"><a class="header-anchor" href="#函数简介-19"><span>函数简介</span></a></h4><p>本函数用于去除输入序列中的连续相同值。如输入序列<code>1，1，2，2，3</code>输出序列为<code>1，2，3</code>。</p><p><strong>函数名：</strong> CHANGE_POINTS</p><p><strong>输入序列：</strong> 仅支持输入1个序列。</p><p><strong>参数：</strong> 无</p><h4 id="使用示例-25" tabindex="-1"><a class="header-anchor" href="#使用示例-25"><span>使用示例</span></a></h4><p>原始数据：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+---------------------------+---------------------------+---------------------------+---------------------------+---------------------------+---------------------------+</span></span>
<span class="line"><span>|                         Time|root.testChangePoints.d1.s1|root.testChangePoints.d1.s2|root.testChangePoints.d1.s3|root.testChangePoints.d1.s4|root.testChangePoints.d1.s5|root.testChangePoints.d1.s6|</span></span>
<span class="line"><span>+-----------------------------+---------------------------+---------------------------+---------------------------+---------------------------+---------------------------+---------------------------+</span></span>
<span class="line"><span>|1970-01-01T08:00:00.001+08:00|                       true|                          1|                          1|                        1.0|                        1.0|                     1test1|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.002+08:00|                       true|                          2|                          2|                        2.0|                        1.0|                     2test2|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.003+08:00|                      false|                          1|                          2|                        1.0|                        1.0|                     2test2|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.004+08:00|                       true|                          1|                          3|                        1.0|                        1.0|                     1test1|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.005+08:00|                       true|                          1|                          3|                        1.0|                        1.0|                     1test1|</span></span>
<span class="line"><span>+-----------------------------+---------------------------+---------------------------+---------------------------+---------------------------+---------------------------+---------------------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>用于查询的SQL语句：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">select</span><span style="color:#ABB2BF;"> change_points(s1), change_points(s2), change_points(s3), change_points(s4), change_points(s5), change_points(s6) </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">testChangePoints</span><span style="color:#ABB2BF;">.d1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>输出序列：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+------------------------------------------+------------------------------------------+------------------------------------------+------------------------------------------+------------------------------------------+------------------------------------------+</span></span>
<span class="line"><span>|                         Time|change_points(root.testChangePoints.d1.s1)|change_points(root.testChangePoints.d1.s2)|change_points(root.testChangePoints.d1.s3)|change_points(root.testChangePoints.d1.s4)|change_points(root.testChangePoints.d1.s5)|change_points(root.testChangePoints.d1.s6)|</span></span>
<span class="line"><span>+-----------------------------+------------------------------------------+------------------------------------------+------------------------------------------+------------------------------------------+------------------------------------------+------------------------------------------+</span></span>
<span class="line"><span>|1970-01-01T08:00:00.001+08:00|                                      true|                                         1|                                         1|                                       1.0|                                       1.0|                                    1test1|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.002+08:00|                                      null|                                         2|                                         2|                                       2.0|                                      null|                                    2test2|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.003+08:00|                                     false|                                         1|                                      null|                                       1.0|                                      null|                                      null|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.004+08:00|                                      true|                                      null|                                         3|                                      null|                                      null|                                    1test1|</span></span>
<span class="line"><span>+-----------------------------+------------------------------------------+------------------------------------------+------------------------------------------+------------------------------------------+------------------------------------------+------------------------------------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="lambda-表达式" tabindex="-1"><a class="header-anchor" href="#lambda-表达式"><span>Lambda 表达式</span></a></h2><h3 id="jexl-自定义函数" tabindex="-1"><a class="header-anchor" href="#jexl-自定义函数"><span>JEXL 自定义函数</span></a></h3><h4 id="函数简介-20" tabindex="-1"><a class="header-anchor" href="#函数简介-20"><span>函数简介</span></a></h4><p>Java Expression Language (JEXL) 是一个表达式语言引擎。我们使用 JEXL 来扩展 UDF，在命令行中，通过简易的 lambda 表达式来实现 UDF。</p><p>lambda 表达式中支持的运算符详见链接 <a href="https://commons.apache.org/proper/commons-jexl/apidocs/org/apache/commons/jexl3/package-summary.html#customization" target="_blank" rel="noopener noreferrer">JEXL 中 lambda 表达式支持的运算符</a> 。</p><table><thead><tr><th>函数名</th><th>可接收的输入序列类型</th><th>必要的属性参数</th><th>输出序列类型</th><th>功能类型</th></tr></thead><tbody><tr><td>JEXL</td><td>INT32 / INT64 / FLOAT / DOUBLE / TEXT / BOOLEAN</td><td><code>expr</code>是一个支持标准的一元或多元参数的lambda表达式，符合<code>x -&gt; {...}</code>或<code>(x, y, z) -&gt; {...}</code>的格式，例如<code>x -&gt; {x * 2}</code>, <code>(x, y, z) -&gt; {x + y * z}</code></td><td>INT32 / INT64 / FLOAT / DOUBLE / TEXT / BOOLEAN</td><td>返回将输入的时间序列通过lambda表达式变换的序列</td></tr></tbody></table><h4 id="使用示例-26" tabindex="-1"><a class="header-anchor" href="#使用示例-26"><span>使用示例</span></a></h4><p>输入序列：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>IoTDB&gt; select * from root.ln.wf01.wt01;</span></span>
<span class="line"><span>+-----------------------------+---------------------+--------------------+-----------------------------+</span></span>
<span class="line"><span>|                         Time|root.ln.wf01.wt01.str|root.ln.wf01.wt01.st|root.ln.wf01.wt01.temperature|</span></span>
<span class="line"><span>+-----------------------------+---------------------+--------------------+-----------------------------+</span></span>
<span class="line"><span>|1970-01-01T08:00:00.000+08:00|                  str|                10.0|                          0.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.001+08:00|                  str|                20.0|                          1.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.002+08:00|                  str|                30.0|                          2.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.003+08:00|                  str|                40.0|                          3.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.004+08:00|                  str|                50.0|                          4.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.005+08:00|                  str|                60.0|                          5.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.006+08:00|                  str|                70.0|                          6.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.007+08:00|                  str|                80.0|                          7.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.008+08:00|                  str|                90.0|                          8.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.009+08:00|                  str|               100.0|                          9.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.010+08:00|                  str|               110.0|                         10.0|</span></span>
<span class="line"><span>+-----------------------------+---------------------+--------------------+-----------------------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>用于查询的SQL语句：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">select</span><span style="color:#ABB2BF;"> jexl(temperature, </span><span style="color:#98C379;">&#39;expr&#39;</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&#39;x -&gt; {x + x}&#39;</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">as</span><span style="color:#ABB2BF;"> jexl1, jexl(temperature, </span><span style="color:#98C379;">&#39;expr&#39;</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&#39;x -&gt; {x * 3}&#39;</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">as</span><span style="color:#ABB2BF;"> jexl2, jexl(temperature, </span><span style="color:#98C379;">&#39;expr&#39;</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&#39;x -&gt; {x * x}&#39;</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">as</span><span style="color:#ABB2BF;"> jexl3, jexl(temperature, </span><span style="color:#98C379;">&#39;expr&#39;</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&#39;x -&gt; {multiply(x, 100)}&#39;</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">as</span><span style="color:#ABB2BF;"> jexl4, jexl(temperature, st, </span><span style="color:#98C379;">&#39;expr&#39;</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&#39;(x, y) -&gt; {x + y}&#39;</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">as</span><span style="color:#ABB2BF;"> jexl5, jexl(temperature, st, str, </span><span style="color:#98C379;">&#39;expr&#39;</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&#39;(x, y, z) -&gt; {x + y + z}&#39;</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">as</span><span style="color:#ABB2BF;"> jexl6 </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">ln</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">wf01</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">wt01</span><span style="color:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>输出序列：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+-----+-----+-----+------+-----+--------+</span></span>
<span class="line"><span>|                         Time|jexl1|jexl2|jexl3| jexl4|jexl5|   jexl6|</span></span>
<span class="line"><span>+-----------------------------+-----+-----+-----+------+-----+--------+</span></span>
<span class="line"><span>|1970-01-01T08:00:00.000+08:00|  0.0|  0.0|  0.0|   0.0| 10.0| 10.0str|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.001+08:00|  2.0|  3.0|  1.0| 100.0| 21.0| 21.0str|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.002+08:00|  4.0|  6.0|  4.0| 200.0| 32.0| 32.0str|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.003+08:00|  6.0|  9.0|  9.0| 300.0| 43.0| 43.0str|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.004+08:00|  8.0| 12.0| 16.0| 400.0| 54.0| 54.0str|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.005+08:00| 10.0| 15.0| 25.0| 500.0| 65.0| 65.0str|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.006+08:00| 12.0| 18.0| 36.0| 600.0| 76.0| 76.0str|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.007+08:00| 14.0| 21.0| 49.0| 700.0| 87.0| 87.0str|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.008+08:00| 16.0| 24.0| 64.0| 800.0| 98.0| 98.0str|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.009+08:00| 18.0| 27.0| 81.0| 900.0|109.0|109.0str|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.010+08:00| 20.0| 30.0|100.0|1000.0|120.0|120.0str|</span></span>
<span class="line"><span>+-----------------------------+-----+-----+-----+------+-----+--------+</span></span>
<span class="line"><span>Total line number = 11</span></span>
<span class="line"><span>It costs 0.118s</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="条件表达式" tabindex="-1"><a class="header-anchor" href="#条件表达式"><span>条件表达式</span></a></h2><h3 id="case" tabindex="-1"><a class="header-anchor" href="#case"><span>CASE</span></a></h3><p>CASE表达式是一种条件表达式，可用于根据特定条件返回不同的值，功能类似于其它语言中的if-else。<br> CASE表达式由以下部分组成：</p><ul><li>CASE关键字：表示开始CASE表达式。</li><li>WHEN-THEN子句：可能存在多个，用于定义条件与给出结果。此子句又分为WHEN和THEN两个部分，WHEN部分表示条件，THEN部分表示结果表达式。如果WHEN条件为真，则返回对应的THEN结果。</li><li>ELSE子句：如果没有任何WHEN-THEN子句的条件为真，则返回ELSE子句中的结果。可以不存在ELSE子句。</li><li>END关键字：表示结束CASE表达式。</li></ul><p>CASE表达式是一种标量运算，可以配合任何其它的标量运算或聚合函数使用。</p><p>下文把所有THEN部分和ELSE子句并称为结果子句。</p><h4 id="语法示例" tabindex="-1"><a class="header-anchor" href="#语法示例"><span>语法示例</span></a></h4><p>CASE表达式支持两种格式。</p><p>语法示例如下：</p><ul><li>格式1：</li></ul><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">  CASE</span></span>
<span class="line"><span style="color:#C678DD;">    WHEN</span><span style="color:#ABB2BF;"> condition1 </span><span style="color:#C678DD;">THEN</span><span style="color:#ABB2BF;"> expression1</span></span>
<span class="line"><span style="color:#E06C75;">    [WHEN condition2 THEN expression2]</span><span style="color:#ABB2BF;"> ...</span></span>
<span class="line"><span style="color:#E06C75;">    [ELSE expression_end]</span></span>
<span class="line"><span style="color:#C678DD;">  END</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>从上至下检查WHEN子句中的condition。</p><p>condition为真时返回对应THEN子句中的expression，condition为假时继续检查下一个WHEN子句中的condition。</p><ul><li>格式2：</li></ul><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">  CASE</span><span style="color:#ABB2BF;"> caseValue</span></span>
<span class="line"><span style="color:#C678DD;">    WHEN</span><span style="color:#ABB2BF;"> whenValue1 </span><span style="color:#C678DD;">THEN</span><span style="color:#ABB2BF;"> expression1</span></span>
<span class="line"><span style="color:#E06C75;">    [WHEN whenValue2 THEN expression2]</span><span style="color:#ABB2BF;"> ...</span></span>
<span class="line"><span style="color:#E06C75;">    [ELSE expression_end]</span></span>
<span class="line"><span style="color:#C678DD;">  END</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>从上至下检查WHEN子句中的whenValue是否与caseValue相等。</p><p>满足caseValue=whenValue时返回对应THEN子句中的expression，不满足时继续检查下一个WHEN子句中的whenValue。</p><p>格式2会被iotdb转换成等效的格式1，例如以上sql语句会转换成：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">  CASE</span></span>
<span class="line"><span style="color:#C678DD;">    WHEN</span><span style="color:#ABB2BF;"> caseValue</span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;">whenValue1 </span><span style="color:#C678DD;">THEN</span><span style="color:#ABB2BF;"> expression1</span></span>
<span class="line"><span style="color:#E06C75;">    [WHEN caseValue=whenValue1 THEN expression1]</span><span style="color:#ABB2BF;"> ...</span></span>
<span class="line"><span style="color:#E06C75;">    [ELSE expression_end]</span></span>
<span class="line"><span style="color:#C678DD;">  END</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果格式1中的condition均不为真，或格式2中均不满足caseVaule=whenValue，则返回ELSE子句中的expression_end；不存在ELSE子句则返回null。</p><h4 id="注意事项" tabindex="-1"><a class="header-anchor" href="#注意事项"><span>注意事项</span></a></h4><ul><li>格式1中，所有WHEN子句必须返回BOOLEAN类型。</li><li>格式2中，所有WHEN子句必须能够与CASE子句进行判等。</li><li>一个CASE表达式中所有结果子句的返回值类型需要满足一定的条件： <ul><li>BOOLEAN类型不能与其它类型共存，存在其它类型会报错。</li><li>TEXT类型不能与其它类型共存，存在其它类型会报错。</li><li>其它四种数值类型可以共存，最终结果会为DOUBLE类型，转换过程可能会存在精度损失。</li></ul></li><li>CASE表达式没有实现惰性计算，即所有子句都会被计算。</li><li>CASE表达式不支持与UDF混用。</li><li>CASE表达式内部不能存在聚合函数，但CASE表达式的结果可以提供给聚合函数。</li><li>使用CLI时，由于CASE表达式字符串较长，推荐用as为表达式提供别名。</li></ul><h4 id="使用示例-27" tabindex="-1"><a class="header-anchor" href="#使用示例-27"><span>使用示例</span></a></h4><h5 id="示例1" tabindex="-1"><a class="header-anchor" href="#示例1"><span>示例1</span></a></h5><p>CASE表达式可对数据进行直观地分析，例如：</p><ul><li>某种化学产品的制备需要温度和压力都处于特定范围之内</li><li>在制备过程中传感器会侦测温度和压力，在iotdb中形成T(temperature)和P(pressure)两个时间序列</li></ul><p>这种应用场景下，CASE表达式可以指出哪些时间的参数是合适的，哪些时间的参数不合适，以及为什么不合适。</p><p>数据：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#ABB2BF;">IoTDB</span><span style="color:#56B6C2;">&gt;</span><span style="color:#C678DD;"> select</span><span style="color:#ABB2BF;"> * </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">test1</span></span>
<span class="line"><span style="color:#ABB2BF;">+</span><span style="color:#7F848E;font-style:italic;">-----------------------------+------------+------------+</span></span>
<span class="line"><span style="color:#ABB2BF;">|                         </span><span style="color:#C678DD;">Time</span><span style="color:#ABB2BF;">|</span><span style="color:#D19A66;">root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">test1</span><span style="color:#ABB2BF;">.P|</span><span style="color:#D19A66;">root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">test1</span><span style="color:#ABB2BF;">.T|</span></span>
<span class="line"><span style="color:#ABB2BF;">+</span><span style="color:#7F848E;font-style:italic;">-----------------------------+------------+------------+</span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#D19A66;">2023</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">03</span><span style="color:#ABB2BF;">-29T11:</span><span style="color:#D19A66;">25</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">54</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">724</span><span style="color:#ABB2BF;">+</span><span style="color:#D19A66;">08</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">|   </span><span style="color:#D19A66;">1000000</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">|      </span><span style="color:#D19A66;">1025</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">|</span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#D19A66;">2023</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">03</span><span style="color:#ABB2BF;">-29T11:</span><span style="color:#D19A66;">26</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">13</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">445</span><span style="color:#ABB2BF;">+</span><span style="color:#D19A66;">08</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">|   </span><span style="color:#D19A66;">1000094</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">|      </span><span style="color:#D19A66;">1040</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">|</span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#D19A66;">2023</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">03</span><span style="color:#ABB2BF;">-29T11:</span><span style="color:#D19A66;">27</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">36</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">988</span><span style="color:#ABB2BF;">+</span><span style="color:#D19A66;">08</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">|   </span><span style="color:#D19A66;">1000095</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">|      </span><span style="color:#D19A66;">1041</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">|</span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#D19A66;">2023</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">03</span><span style="color:#ABB2BF;">-29T11:</span><span style="color:#D19A66;">27</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">56</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">446</span><span style="color:#ABB2BF;">+</span><span style="color:#D19A66;">08</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">|   </span><span style="color:#D19A66;">1000095</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">|      </span><span style="color:#D19A66;">1059</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">|</span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#D19A66;">2023</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">03</span><span style="color:#ABB2BF;">-29T11:</span><span style="color:#D19A66;">28</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">20</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">838</span><span style="color:#ABB2BF;">+</span><span style="color:#D19A66;">08</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">|   </span><span style="color:#D19A66;">1200000</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">|      </span><span style="color:#D19A66;">1040</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">|</span></span>
<span class="line"><span style="color:#ABB2BF;">+</span><span style="color:#7F848E;font-style:italic;">-----------------------------+------------+------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>SQL语句：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">select</span><span style="color:#ABB2BF;"> T, P, </span><span style="color:#C678DD;">case</span></span>
<span class="line"><span style="color:#C678DD;">when</span><span style="color:#D19A66;"> 1000</span><span style="color:#56B6C2;">&lt;</span><span style="color:#ABB2BF;">T </span><span style="color:#C678DD;">and</span><span style="color:#ABB2BF;"> T</span><span style="color:#56B6C2;">&lt;</span><span style="color:#D19A66;">1050</span><span style="color:#C678DD;"> and</span><span style="color:#D19A66;"> 1000000</span><span style="color:#56B6C2;">&lt;</span><span style="color:#ABB2BF;">P </span><span style="color:#C678DD;">and</span><span style="color:#ABB2BF;"> P</span><span style="color:#56B6C2;">&lt;</span><span style="color:#D19A66;">1100000</span><span style="color:#C678DD;"> then</span><span style="color:#98C379;"> &quot;good!&quot;</span></span>
<span class="line"><span style="color:#C678DD;">when</span><span style="color:#ABB2BF;"> T</span><span style="color:#56B6C2;">&lt;=</span><span style="color:#D19A66;">1000</span><span style="color:#C678DD;"> or</span><span style="color:#ABB2BF;"> T</span><span style="color:#56B6C2;">&gt;=</span><span style="color:#D19A66;">1050</span><span style="color:#C678DD;"> then</span><span style="color:#98C379;"> &quot;bad temperature&quot;</span></span>
<span class="line"><span style="color:#C678DD;">when</span><span style="color:#ABB2BF;"> P</span><span style="color:#56B6C2;">&lt;=</span><span style="color:#D19A66;">1000000</span><span style="color:#C678DD;"> or</span><span style="color:#ABB2BF;"> P</span><span style="color:#56B6C2;">&gt;=</span><span style="color:#D19A66;">1100000</span><span style="color:#C678DD;"> then</span><span style="color:#98C379;"> &quot;bad pressure&quot;</span></span>
<span class="line"><span style="color:#C678DD;">end</span><span style="color:#C678DD;"> as</span><span style="color:#98C379;"> \`result\`</span></span>
<span class="line"><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">test1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+------------+------------+---------------+</span></span>
<span class="line"><span>|                         Time|root.test1.T|root.test1.P|         result|</span></span>
<span class="line"><span>+-----------------------------+------------+------------+---------------+</span></span>
<span class="line"><span>|2023-03-29T11:25:54.724+08:00|      1025.0|   1000000.0|   bad pressure|</span></span>
<span class="line"><span>|2023-03-29T11:26:13.445+08:00|      1040.0|   1000094.0|          good!|</span></span>
<span class="line"><span>|2023-03-29T11:27:36.988+08:00|      1041.0|   1000095.0|          good!|</span></span>
<span class="line"><span>|2023-03-29T11:27:56.446+08:00|      1059.0|   1000095.0|bad temperature|</span></span>
<span class="line"><span>|2023-03-29T11:28:20.838+08:00|      1040.0|   1200000.0|   bad pressure|</span></span>
<span class="line"><span>+-----------------------------+------------+------------+---------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="示例2" tabindex="-1"><a class="header-anchor" href="#示例2"><span>示例2</span></a></h5><p>CASE表达式可实现结果的自由转换，例如将具有某种模式的字符串转换成另一种字符串。</p><p>数据：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#ABB2BF;">IoTDB</span><span style="color:#56B6C2;">&gt;</span><span style="color:#C678DD;"> select</span><span style="color:#ABB2BF;"> * </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">test2</span></span>
<span class="line"><span style="color:#ABB2BF;">+</span><span style="color:#7F848E;font-style:italic;">-----------------------------+--------------+</span></span>
<span class="line"><span style="color:#ABB2BF;">|                         </span><span style="color:#C678DD;">Time</span><span style="color:#ABB2BF;">|</span><span style="color:#D19A66;">root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">test2</span><span style="color:#ABB2BF;">.str|</span></span>
<span class="line"><span style="color:#ABB2BF;">+</span><span style="color:#7F848E;font-style:italic;">-----------------------------+--------------+</span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#D19A66;">2023</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">03</span><span style="color:#ABB2BF;">-27T18:</span><span style="color:#D19A66;">23</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">33</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">427</span><span style="color:#ABB2BF;">+</span><span style="color:#D19A66;">08</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">|         abccd|</span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#D19A66;">2023</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">03</span><span style="color:#ABB2BF;">-27T18:</span><span style="color:#D19A66;">23</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">39</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">389</span><span style="color:#ABB2BF;">+</span><span style="color:#D19A66;">08</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">|         abcdd|</span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#D19A66;">2023</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">03</span><span style="color:#ABB2BF;">-27T18:</span><span style="color:#D19A66;">23</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">43</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">463</span><span style="color:#ABB2BF;">+</span><span style="color:#D19A66;">08</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">|       abcdefg|</span></span>
<span class="line"><span style="color:#ABB2BF;">+</span><span style="color:#7F848E;font-style:italic;">-----------------------------+--------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>SQL语句：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">select</span><span style="color:#ABB2BF;"> str, </span><span style="color:#C678DD;">case</span></span>
<span class="line"><span style="color:#C678DD;">when</span><span style="color:#ABB2BF;"> str </span><span style="color:#C678DD;">like</span><span style="color:#98C379;"> &quot;%cc%&quot;</span><span style="color:#C678DD;"> then</span><span style="color:#98C379;"> &quot;has cc&quot;</span></span>
<span class="line"><span style="color:#C678DD;">when</span><span style="color:#ABB2BF;"> str </span><span style="color:#C678DD;">like</span><span style="color:#98C379;"> &quot;%dd%&quot;</span><span style="color:#C678DD;"> then</span><span style="color:#98C379;"> &quot;has dd&quot;</span></span>
<span class="line"><span style="color:#C678DD;">else</span><span style="color:#98C379;"> &quot;no cc and dd&quot;</span><span style="color:#C678DD;"> end</span><span style="color:#C678DD;"> as</span><span style="color:#98C379;"> \`result\`</span></span>
<span class="line"><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">test2</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+--------------+------------+</span></span>
<span class="line"><span>|                         Time|root.test2.str|      result|</span></span>
<span class="line"><span>+-----------------------------+--------------+------------+</span></span>
<span class="line"><span>|2023-03-27T18:23:33.427+08:00|         abccd|      has cc|</span></span>
<span class="line"><span>|2023-03-27T18:23:39.389+08:00|         abcdd|      has dd|</span></span>
<span class="line"><span>|2023-03-27T18:23:43.463+08:00|       abcdefg|no cc and dd|</span></span>
<span class="line"><span>+-----------------------------+--------------+------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="示例3-搭配聚合函数" tabindex="-1"><a class="header-anchor" href="#示例3-搭配聚合函数"><span>示例3：搭配聚合函数</span></a></h5><h6 id="合法-聚合函数←case表达式" tabindex="-1"><a class="header-anchor" href="#合法-聚合函数←case表达式"><span>合法：聚合函数←CASE表达式</span></a></h6><p>CASE表达式可作为聚合函数的参数。例如，与聚合函数COUNT搭配，可实现同时按多个条件进行数据统计。</p><p>数据：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#ABB2BF;">IoTDB</span><span style="color:#56B6C2;">&gt;</span><span style="color:#C678DD;"> select</span><span style="color:#ABB2BF;"> * </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">test3</span></span>
<span class="line"><span style="color:#ABB2BF;">+</span><span style="color:#7F848E;font-style:italic;">-----------------------------+------------+</span></span>
<span class="line"><span style="color:#ABB2BF;">|                         </span><span style="color:#C678DD;">Time</span><span style="color:#ABB2BF;">|</span><span style="color:#D19A66;">root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">test3</span><span style="color:#ABB2BF;">.x|</span></span>
<span class="line"><span style="color:#ABB2BF;">+</span><span style="color:#7F848E;font-style:italic;">-----------------------------+------------+</span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#D19A66;">2023</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">03</span><span style="color:#ABB2BF;">-27T18:</span><span style="color:#D19A66;">11</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">11</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">300</span><span style="color:#ABB2BF;">+</span><span style="color:#D19A66;">08</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">|         </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">|</span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#D19A66;">2023</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">03</span><span style="color:#ABB2BF;">-27T18:</span><span style="color:#D19A66;">11</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">14</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">658</span><span style="color:#ABB2BF;">+</span><span style="color:#D19A66;">08</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">|         </span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">|</span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#D19A66;">2023</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">03</span><span style="color:#ABB2BF;">-27T18:</span><span style="color:#D19A66;">11</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">15</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">981</span><span style="color:#ABB2BF;">+</span><span style="color:#D19A66;">08</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">|         </span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">|</span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#D19A66;">2023</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">03</span><span style="color:#ABB2BF;">-27T18:</span><span style="color:#D19A66;">11</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">17</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">668</span><span style="color:#ABB2BF;">+</span><span style="color:#D19A66;">08</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">|         </span><span style="color:#D19A66;">3</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">|</span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#D19A66;">2023</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">03</span><span style="color:#ABB2BF;">-27T18:</span><span style="color:#D19A66;">11</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">19</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">112</span><span style="color:#ABB2BF;">+</span><span style="color:#D19A66;">08</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">|         </span><span style="color:#D19A66;">4</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">|</span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#D19A66;">2023</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">03</span><span style="color:#ABB2BF;">-27T18:</span><span style="color:#D19A66;">11</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">20</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">822</span><span style="color:#ABB2BF;">+</span><span style="color:#D19A66;">08</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">|         </span><span style="color:#D19A66;">5</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">|</span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#D19A66;">2023</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">03</span><span style="color:#ABB2BF;">-27T18:</span><span style="color:#D19A66;">11</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">22</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">462</span><span style="color:#ABB2BF;">+</span><span style="color:#D19A66;">08</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">|         </span><span style="color:#D19A66;">6</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">|</span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#D19A66;">2023</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">03</span><span style="color:#ABB2BF;">-27T18:</span><span style="color:#D19A66;">11</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">24</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">174</span><span style="color:#ABB2BF;">+</span><span style="color:#D19A66;">08</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">|         </span><span style="color:#D19A66;">7</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">|</span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#D19A66;">2023</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">03</span><span style="color:#ABB2BF;">-27T18:</span><span style="color:#D19A66;">11</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">25</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">858</span><span style="color:#ABB2BF;">+</span><span style="color:#D19A66;">08</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">|         </span><span style="color:#D19A66;">8</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">|</span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#D19A66;">2023</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">03</span><span style="color:#ABB2BF;">-27T18:</span><span style="color:#D19A66;">11</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">27</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">979</span><span style="color:#ABB2BF;">+</span><span style="color:#D19A66;">08</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">|         </span><span style="color:#D19A66;">9</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">|</span></span>
<span class="line"><span style="color:#ABB2BF;">+</span><span style="color:#7F848E;font-style:italic;">-----------------------------+------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>SQL语句：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">select</span></span>
<span class="line"><span style="color:#56B6C2;">count</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">case</span><span style="color:#C678DD;"> when</span><span style="color:#ABB2BF;"> x</span><span style="color:#56B6C2;">&lt;=</span><span style="color:#D19A66;">1</span><span style="color:#C678DD;"> then</span><span style="color:#D19A66;"> 1</span><span style="color:#C678DD;"> end</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">as</span><span style="color:#98C379;"> \`(-∞,1]\`</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#56B6C2;">count</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">case</span><span style="color:#C678DD;"> when</span><span style="color:#D19A66;"> 1</span><span style="color:#56B6C2;">&lt;</span><span style="color:#ABB2BF;">x </span><span style="color:#C678DD;">and</span><span style="color:#ABB2BF;"> x</span><span style="color:#56B6C2;">&lt;=</span><span style="color:#D19A66;">3</span><span style="color:#C678DD;"> then</span><span style="color:#D19A66;"> 1</span><span style="color:#C678DD;"> end</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">as</span><span style="color:#98C379;"> \`(1,3]\`</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#56B6C2;">count</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">case</span><span style="color:#C678DD;"> when</span><span style="color:#D19A66;"> 3</span><span style="color:#56B6C2;">&lt;</span><span style="color:#ABB2BF;">x </span><span style="color:#C678DD;">and</span><span style="color:#ABB2BF;"> x</span><span style="color:#56B6C2;">&lt;=</span><span style="color:#D19A66;">7</span><span style="color:#C678DD;"> then</span><span style="color:#D19A66;"> 1</span><span style="color:#C678DD;"> end</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">as</span><span style="color:#98C379;"> \`(3,7]\`</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#56B6C2;">count</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">case</span><span style="color:#C678DD;"> when</span><span style="color:#D19A66;"> 7</span><span style="color:#56B6C2;">&lt;</span><span style="color:#ABB2BF;">x </span><span style="color:#C678DD;">then</span><span style="color:#D19A66;"> 1</span><span style="color:#C678DD;"> end</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">as</span><span style="color:#98C379;"> \`(7,+∞)\`</span></span>
<span class="line"><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">test3</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+------+-----+-----+------+</span></span>
<span class="line"><span>|(-∞,1]|(1,3]|(3,7]|(7,+∞)|</span></span>
<span class="line"><span>+------+-----+-----+------+</span></span>
<span class="line"><span>|     2|    2|    4|     2|</span></span>
<span class="line"><span>+------+-----+-----+------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h6 id="非法-case表达式←聚合函数" tabindex="-1"><a class="header-anchor" href="#非法-case表达式←聚合函数"><span>非法：CASE表达式←聚合函数</span></a></h6><p>不支持在CASE表达式内部使用聚合函数。</p><p>SQL语句：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">select</span><span style="color:#C678DD;"> case</span><span style="color:#C678DD;"> when</span><span style="color:#ABB2BF;"> x</span><span style="color:#56B6C2;">&lt;=</span><span style="color:#D19A66;">1</span><span style="color:#C678DD;"> then</span><span style="color:#56B6C2;"> avg</span><span style="color:#ABB2BF;">(x) </span><span style="color:#C678DD;">else</span><span style="color:#56B6C2;"> sum</span><span style="color:#ABB2BF;">(x) </span><span style="color:#C678DD;">end</span><span style="color:#C678DD;"> from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">test3</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>输出：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>Msg: 701: Raw data and aggregation result hybrid calculation is not supported.</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h5 id="示例4-格式2" tabindex="-1"><a class="header-anchor" href="#示例4-格式2"><span>示例4：格式2</span></a></h5><p>一个使用格式2的简单例子。如果所有条件都为判等，则推荐使用格式2，以简化SQL语句。</p><p>数据：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#ABB2BF;">IoTDB</span><span style="color:#56B6C2;">&gt;</span><span style="color:#C678DD;"> select</span><span style="color:#ABB2BF;"> * </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">test4</span></span>
<span class="line"><span style="color:#ABB2BF;">+</span><span style="color:#7F848E;font-style:italic;">-----------------------------+------------+</span></span>
<span class="line"><span style="color:#ABB2BF;">|                         </span><span style="color:#C678DD;">Time</span><span style="color:#ABB2BF;">|</span><span style="color:#D19A66;">root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">test4</span><span style="color:#ABB2BF;">.x|</span></span>
<span class="line"><span style="color:#ABB2BF;">+</span><span style="color:#7F848E;font-style:italic;">-----------------------------+------------+</span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#D19A66;">1970</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">01</span><span style="color:#ABB2BF;">-01T08:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">001</span><span style="color:#ABB2BF;">+</span><span style="color:#D19A66;">08</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">|         </span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">|</span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#D19A66;">1970</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">01</span><span style="color:#ABB2BF;">-01T08:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">002</span><span style="color:#ABB2BF;">+</span><span style="color:#D19A66;">08</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">|         </span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">|</span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#D19A66;">1970</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">01</span><span style="color:#ABB2BF;">-01T08:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">003</span><span style="color:#ABB2BF;">+</span><span style="color:#D19A66;">08</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">|         </span><span style="color:#D19A66;">3</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">|</span></span>
<span class="line"><span style="color:#ABB2BF;">|</span><span style="color:#D19A66;">1970</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">01</span><span style="color:#ABB2BF;">-01T08:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">004</span><span style="color:#ABB2BF;">+</span><span style="color:#D19A66;">08</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">|         </span><span style="color:#D19A66;">4</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">|</span></span>
<span class="line"><span style="color:#ABB2BF;">+</span><span style="color:#7F848E;font-style:italic;">-----------------------------+------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>SQL语句：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">select</span><span style="color:#ABB2BF;"> x, </span><span style="color:#C678DD;">case</span><span style="color:#ABB2BF;"> x </span><span style="color:#C678DD;">when</span><span style="color:#D19A66;"> 1</span><span style="color:#C678DD;"> then</span><span style="color:#98C379;"> &quot;one&quot;</span><span style="color:#C678DD;"> when</span><span style="color:#D19A66;"> 2</span><span style="color:#C678DD;"> then</span><span style="color:#98C379;"> &quot;two&quot;</span><span style="color:#C678DD;"> else</span><span style="color:#98C379;"> &quot;other&quot;</span><span style="color:#C678DD;"> end</span><span style="color:#C678DD;"> from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">test4</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>输出：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+------------+-----------------------------------------------------------------------------------+</span></span>
<span class="line"><span>|                         Time|root.test4.x|CASE WHEN root.test4.x = 1 THEN &quot;one&quot; WHEN root.test4.x = 2 THEN &quot;two&quot; ELSE &quot;other&quot;|</span></span>
<span class="line"><span>+-----------------------------+------------+-----------------------------------------------------------------------------------+</span></span>
<span class="line"><span>|1970-01-01T08:00:00.001+08:00|         1.0|                                                                                one|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.002+08:00|         2.0|                                                                                two|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.003+08:00|         3.0|                                                                              other|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.004+08:00|         4.0|                                                                              other|</span></span>
<span class="line"><span>+-----------------------------+------------+-----------------------------------------------------------------------------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="示例5-结果子句类型" tabindex="-1"><a class="header-anchor" href="#示例5-结果子句类型"><span>示例5：结果子句类型</span></a></h5><p>CASE表达式的结果子句的返回值需要满足一定的类型限制。</p><p>此示例中，继续使用示例4中的数据。</p><h6 id="非法-boolean与其它类型共存" tabindex="-1"><a class="header-anchor" href="#非法-boolean与其它类型共存"><span>非法：BOOLEAN与其它类型共存</span></a></h6><p>SQL语句：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">select</span><span style="color:#ABB2BF;"> x, </span><span style="color:#C678DD;">case</span><span style="color:#ABB2BF;"> x </span><span style="color:#C678DD;">when</span><span style="color:#D19A66;"> 1</span><span style="color:#C678DD;"> then</span><span style="color:#ABB2BF;"> true </span><span style="color:#C678DD;">when</span><span style="color:#D19A66;"> 2</span><span style="color:#C678DD;"> then</span><span style="color:#D19A66;"> 2</span><span style="color:#C678DD;"> end</span><span style="color:#C678DD;"> from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">test4</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>输出：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>Msg: 701: CASE expression: BOOLEAN and other types cannot exist at same time</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h6 id="合法-只存在boolean类型" tabindex="-1"><a class="header-anchor" href="#合法-只存在boolean类型"><span>合法：只存在BOOLEAN类型</span></a></h6><p>SQL语句：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">select</span><span style="color:#ABB2BF;"> x, </span><span style="color:#C678DD;">case</span><span style="color:#ABB2BF;"> x </span><span style="color:#C678DD;">when</span><span style="color:#D19A66;"> 1</span><span style="color:#C678DD;"> then</span><span style="color:#ABB2BF;"> true </span><span style="color:#C678DD;">when</span><span style="color:#D19A66;"> 2</span><span style="color:#C678DD;"> then</span><span style="color:#ABB2BF;"> false </span><span style="color:#C678DD;">end</span><span style="color:#C678DD;"> as</span><span style="color:#98C379;"> \`result\`</span><span style="color:#C678DD;"> from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">test4</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>输出：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+------------+------+</span></span>
<span class="line"><span>|                         Time|root.test4.x|result|</span></span>
<span class="line"><span>+-----------------------------+------------+------+</span></span>
<span class="line"><span>|1970-01-01T08:00:00.001+08:00|         1.0|  true|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.002+08:00|         2.0| false|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.003+08:00|         3.0|  null|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.004+08:00|         4.0|  null|</span></span>
<span class="line"><span>+-----------------------------+------------+------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h6 id="非法-text与其它类型共存" tabindex="-1"><a class="header-anchor" href="#非法-text与其它类型共存"><span>非法：TEXT与其它类型共存</span></a></h6><p>SQL语句：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">select</span><span style="color:#ABB2BF;"> x, </span><span style="color:#C678DD;">case</span><span style="color:#ABB2BF;"> x </span><span style="color:#C678DD;">when</span><span style="color:#D19A66;"> 1</span><span style="color:#C678DD;"> then</span><span style="color:#D19A66;"> 1</span><span style="color:#C678DD;"> when</span><span style="color:#D19A66;"> 2</span><span style="color:#C678DD;"> then</span><span style="color:#98C379;"> &quot;str&quot;</span><span style="color:#C678DD;"> end</span><span style="color:#C678DD;"> from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">test4</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>输出：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>Msg: 701: CASE expression: TEXT and other types cannot exist at same time</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h6 id="合法-只存在text类型" tabindex="-1"><a class="header-anchor" href="#合法-只存在text类型"><span>合法：只存在TEXT类型</span></a></h6><p>见示例1。</p><h6 id="合法-数值类型共存" tabindex="-1"><a class="header-anchor" href="#合法-数值类型共存"><span>合法：数值类型共存</span></a></h6><p>SQL语句：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">select</span><span style="color:#ABB2BF;"> x, </span><span style="color:#C678DD;">case</span><span style="color:#ABB2BF;"> x</span></span>
<span class="line"><span style="color:#C678DD;">when</span><span style="color:#D19A66;"> 1</span><span style="color:#C678DD;"> then</span><span style="color:#D19A66;"> 1</span></span>
<span class="line"><span style="color:#C678DD;">when</span><span style="color:#D19A66;"> 2</span><span style="color:#C678DD;"> then</span><span style="color:#D19A66;"> 222222222222222</span></span>
<span class="line"><span style="color:#C678DD;">when</span><span style="color:#D19A66;"> 3</span><span style="color:#C678DD;"> then</span><span style="color:#D19A66;"> 3</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">3</span></span>
<span class="line"><span style="color:#C678DD;">when</span><span style="color:#D19A66;"> 4</span><span style="color:#C678DD;"> then</span><span style="color:#D19A66;"> 4</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">4444444444444</span></span>
<span class="line"><span style="color:#C678DD;">end</span><span style="color:#C678DD;"> as</span><span style="color:#98C379;"> \`result\`</span></span>
<span class="line"><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">test4</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+------------+-------------------+</span></span>
<span class="line"><span>|                         Time|root.test4.x|             result|</span></span>
<span class="line"><span>+-----------------------------+------------+-------------------+</span></span>
<span class="line"><span>|1970-01-01T08:00:00.001+08:00|         1.0|                1.0|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.002+08:00|         2.0|2.22222222222222E14|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.003+08:00|         3.0|  3.299999952316284|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.004+08:00|         4.0|   4.44444465637207|</span></span>
<span class="line"><span>+-----------------------------+------------+-------------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,746)]))}const c=n(p,[["render",o],["__file","Function-and-Expression.html.vue"]]),i=JSON.parse('{"path":"/zh/UserGuide/V1.3.0-2/Reference/Function-and-Expression.html","title":"内置函数与表达式","lang":"zh-CN","frontmatter":{"description":"内置函数与表达式 聚合函数 聚合函数是多对一函数。它们对一组值进行聚合计算，得到单个聚合结果。 除了 COUNT(), COUNT_IF()之外，其他所有聚合函数都忽略空值，并在没有输入行或所有值为空时返回空值。 例如，SUM() 返回 null 而不是零，而 AVG() 在计数中不包括 null 值。 IoTDB 支持的聚合函数如下： COUNT_I...","head":[["link",{"rel":"alternate","hreflang":"en-us","href":"https://iotdb.apache.org/UserGuide/V1.3.0-2/Reference/Function-and-Expression.html"}],["meta",{"property":"og:url","content":"https://iotdb.apache.org/zh/UserGuide/V1.3.0-2/Reference/Function-and-Expression.html"}],["meta",{"property":"og:site_name","content":"IoTDB Website"}],["meta",{"property":"og:title","content":"内置函数与表达式"}],["meta",{"property":"og:description","content":"内置函数与表达式 聚合函数 聚合函数是多对一函数。它们对一组值进行聚合计算，得到单个聚合结果。 除了 COUNT(), COUNT_IF()之外，其他所有聚合函数都忽略空值，并在没有输入行或所有值为空时返回空值。 例如，SUM() 返回 null 而不是零，而 AVG() 在计数中不包括 null 值。 IoTDB 支持的聚合函数如下： COUNT_I..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-11-11T11:01:16.000Z"}],["meta",{"property":"article:modified_time","content":"2024-11-11T11:01:16.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"内置函数与表达式\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-11-11T11:01:16.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"聚合函数","slug":"聚合函数","link":"#聚合函数","children":[{"level":3,"title":"COUNT_IF","slug":"count-if","link":"#count-if","children":[]},{"level":3,"title":"TIME_DURATION","slug":"time-duration","link":"#time-duration","children":[]},{"level":3,"title":"COUNT_TIME","slug":"count-time","link":"#count-time","children":[]},{"level":3,"title":"MAX_BY","slug":"max-by","link":"#max-by","children":[]}]},{"level":2,"title":"算数运算符和函数","slug":"算数运算符和函数","link":"#算数运算符和函数","children":[{"level":3,"title":"算数运算符","slug":"算数运算符","link":"#算数运算符","children":[]},{"level":3,"title":"数学函数","slug":"数学函数","link":"#数学函数","children":[]}]},{"level":2,"title":"比较运算符和函数","slug":"比较运算符和函数","link":"#比较运算符和函数","children":[{"level":3,"title":"基本比较运算符","slug":"基本比较运算符","link":"#基本比较运算符","children":[]},{"level":3,"title":"BETWEEN ... AND ... 运算符","slug":"between-and-运算符","link":"#between-and-运算符","children":[]},{"level":3,"title":"模糊匹配运算符","slug":"模糊匹配运算符","link":"#模糊匹配运算符","children":[]},{"level":3,"title":"IS NULL 运算符","slug":"is-null-运算符","link":"#is-null-运算符","children":[]},{"level":3,"title":"IN 运算符","slug":"in-运算符","link":"#in-运算符","children":[]},{"level":3,"title":"条件函数","slug":"条件函数","link":"#条件函数","children":[]}]},{"level":2,"title":"逻辑运算符","slug":"逻辑运算符","link":"#逻辑运算符","children":[{"level":3,"title":"一元逻辑运算符","slug":"一元逻辑运算符","link":"#一元逻辑运算符","children":[]},{"level":3,"title":"二元逻辑运算符","slug":"二元逻辑运算符","link":"#二元逻辑运算符","children":[]}]},{"level":2,"title":"字符串处理","slug":"字符串处理","link":"#字符串处理","children":[{"level":3,"title":"STRING_CONTAINS","slug":"string-contains","link":"#string-contains","children":[]},{"level":3,"title":"STRING_MATCHES","slug":"string-matches","link":"#string-matches","children":[]},{"level":3,"title":"Length","slug":"length","link":"#length","children":[]},{"level":3,"title":"Locate","slug":"locate","link":"#locate","children":[]},{"level":3,"title":"StartsWith","slug":"startswith","link":"#startswith","children":[]},{"level":3,"title":"EndsWith","slug":"endswith","link":"#endswith","children":[]},{"level":3,"title":"Concat","slug":"concat","link":"#concat","children":[]},{"level":3,"title":"Substring","slug":"substring","link":"#substring","children":[]},{"level":3,"title":"Replace","slug":"replace","link":"#replace","children":[]},{"level":3,"title":"Upper","slug":"upper","link":"#upper","children":[]},{"level":3,"title":"Lower","slug":"lower","link":"#lower","children":[]},{"level":3,"title":"Trim","slug":"trim","link":"#trim","children":[]},{"level":3,"title":"StrCmp","slug":"strcmp","link":"#strcmp","children":[]},{"level":3,"title":"StrReplace","slug":"strreplace","link":"#strreplace","children":[]},{"level":3,"title":"RegexMatch","slug":"regexmatch","link":"#regexmatch","children":[]},{"level":3,"title":"RegexReplace","slug":"regexreplace","link":"#regexreplace","children":[]}]},{"level":2,"title":"数据类型转换","slug":"数据类型转换","link":"#数据类型转换","children":[{"level":3,"title":"CAST","slug":"cast","link":"#cast","children":[]}]},{"level":2,"title":"常序列生成函数","slug":"常序列生成函数","link":"#常序列生成函数","children":[]},{"level":2,"title":"选择函数","slug":"选择函数","link":"#选择函数","children":[]},{"level":2,"title":"区间查询函数","slug":"区间查询函数","link":"#区间查询函数","children":[{"level":3,"title":"连续满足区间函数","slug":"连续满足区间函数","link":"#连续满足区间函数","children":[]}]},{"level":2,"title":"趋势计算函数","slug":"趋势计算函数","link":"#趋势计算函数","children":[{"level":3,"title":"使用示例","slug":"使用示例-24","link":"#使用示例-24","children":[]}]},{"level":2,"title":"采样函数","slug":"采样函数","link":"#采样函数","children":[{"level":3,"title":"等数量分桶降采样函数","slug":"等数量分桶降采样函数","link":"#等数量分桶降采样函数","children":[]},{"level":3,"title":"M4函数","slug":"m4函数","link":"#m4函数","children":[]}]},{"level":2,"title":"时间序列处理","slug":"时间序列处理","link":"#时间序列处理","children":[{"level":3,"title":"CHANGE_POINTS","slug":"change-points","link":"#change-points","children":[]}]},{"level":2,"title":"Lambda 表达式","slug":"lambda-表达式","link":"#lambda-表达式","children":[{"level":3,"title":"JEXL 自定义函数","slug":"jexl-自定义函数","link":"#jexl-自定义函数","children":[]}]},{"level":2,"title":"条件表达式","slug":"条件表达式","link":"#条件表达式","children":[{"level":3,"title":"CASE","slug":"case","link":"#case","children":[]}]}],"git":{"createdTime":1706068337000,"updatedTime":1731322876000,"contributors":[{"name":"W1y1r","username":"W1y1r","email":"150988475+W1y1r@users.noreply.github.com","commits":3,"url":"https://github.com/W1y1r"},{"name":"Liao Lanyu","username":"Liao Lanyu","email":"1435078631@qq.com","commits":1,"url":"https://github.com/Liao Lanyu"},{"name":"lancelly","username":"lancelly","email":"1435078631@qq.com","commits":2,"url":"https://github.com/lancelly"},{"name":"wanghui42","username":"wanghui42","email":"105700158+wanghui42@users.noreply.github.com","commits":3,"url":"https://github.com/wanghui42"}]},"readingTime":{"minutes":66.84,"words":20053},"filePathRelative":"zh/UserGuide/V1.3.0-2/Reference/Function-and-Expression.md","localizedDate":"2024年1月24日","autoDesc":true}');export{c as comp,i as data};
