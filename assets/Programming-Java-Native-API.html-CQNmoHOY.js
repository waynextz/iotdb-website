import{_ as l,c as o,b as n,d as a,e,a as p,f as i,r,o as c}from"./app-DE_BslX7.js";const d={};function B(y,s){const t=r("RouteLink");return c(),o("div",null,[s[4]||(s[4]=n('<h1 id="session-native-api" tabindex="-1"><a class="header-anchor" href="#session-native-api"><span>Session Native API</span></a></h1><p>In the native API of IoTDB, the <code>Session</code> is the core interface for interacting with the database. It integrates a rich set of methods that support data writing, querying, and metadata operations. By instantiating a <code>Session</code>, you can establish a connection to the IoTDB server and perform various database operations within the environment constructed by this connection. The <code>Session</code> is not thread-safe and should not be called simultaneously by multiple threads.</p><p><code>SessionPool</code> is a connection pool for <code>Session</code>, and it is recommended to use <code>SessionPool</code> for programming. In scenarios with multi-threaded concurrency, <code>SessionPool</code> can manage and allocate connection resources effectively, thereby improving system performance and resource utilization efficiency.</p><h2 id="_1-overview-of-steps" tabindex="-1"><a class="header-anchor" href="#_1-overview-of-steps"><span>1 Overview of Steps</span></a></h2><ol><li>Create a Connection Pool Instance: Initialize a SessionPool object to manage multiple Session instances.</li><li>Perform Operations: Directly obtain a Session instance from the SessionPool and execute database operations, without the need to open and close connections each time.</li><li>Close Connection Pool Resources: When database operations are no longer needed, close the SessionPool to release all related resources.</li></ol><h2 id="_2-detailed-steps" tabindex="-1"><a class="header-anchor" href="#_2-detailed-steps"><span>2 Detailed Steps</span></a></h2>',6)),a("p",null,[s[1]||(s[1]=e("This section provides an overview of the core development process and does not demonstrate all parameters and interfaces. For a complete list of functionalities and parameters, please refer to:")),p(t,{to:"/UserGuide/V2.0.1/Tree/API/Programming-Java-Native-API.html#3-native-interface-description"},{default:i(()=>s[0]||(s[0]=[e("Java Native API")])),_:1}),s[2]||(s[2]=e(" or check the: ")),s[3]||(s[3]=a("a",{href:"https://github.com/apache/iotdb/tree/master/example/session/src/main/java/org/apache/iotdb",target:"_blank",rel:"noopener noreferrer"},"Source Code",-1))]),s[5]||(s[5]=n(`<h3 id="_2-1-create-a-maven-project" tabindex="-1"><a class="header-anchor" href="#_2-1-create-a-maven-project"><span>2.1 Create a Maven Project</span></a></h3><p>Create a Maven project and add the following dependencies to the pom.xml file (JDK &gt;= 1.8, Maven &gt;= 3.6):</p><div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" data-title="xml" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">dependencies</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">    &lt;</span><span style="color:#E06C75;">dependency</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">      &lt;</span><span style="color:#E06C75;">groupId</span><span style="color:#ABB2BF;">&gt;org.apache.iotdb&lt;/</span><span style="color:#E06C75;">groupId</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">      &lt;</span><span style="color:#E06C75;">artifactId</span><span style="color:#ABB2BF;">&gt;iotdb-session&lt;/</span><span style="color:#E06C75;">artifactId</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">      &lt;!-- The version number is the same as the database version number --&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">      &lt;</span><span style="color:#E06C75;">version</span><span style="color:#ABB2BF;">&gt;\${project.version}&lt;/</span><span style="color:#E06C75;">version</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">    &lt;/</span><span style="color:#E06C75;">dependency</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;/</span><span style="color:#E06C75;">dependencies</span><span style="color:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-2-creating-a-connection-pool-instance" tabindex="-1"><a class="header-anchor" href="#_2-2-creating-a-connection-pool-instance"><span>2.2 Creating a Connection Pool Instance</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">import</span><span style="color:#E5C07B;"> java.util.ArrayList</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E5C07B;"> java.util.List</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E5C07B;"> org.apache.iotdb.session.pool.SessionPool</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">public</span><span style="color:#C678DD;"> class</span><span style="color:#E5C07B;"> IoTDBSessionPoolExample</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">    private</span><span style="color:#C678DD;"> static</span><span style="color:#E5C07B;"> SessionPool</span><span style="color:#E06C75;"> sessionPool</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">    public</span><span style="color:#C678DD;"> static</span><span style="color:#C678DD;"> void</span><span style="color:#61AFEF;"> main</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">String</span><span style="color:#ABB2BF;">[] </span><span style="color:#E06C75;font-style:italic;">args</span><span style="color:#ABB2BF;">)</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        // Using nodeUrls ensures that when one node goes down, other nodes are automatically connected to retry</span></span>
<span class="line"><span style="color:#E5C07B;">        List</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">String</span><span style="color:#ABB2BF;">&gt; </span><span style="color:#E06C75;">nodeUrls</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#E5C07B;"> ArrayList</span><span style="color:#ABB2BF;">&lt;&gt;();</span></span>
<span class="line"><span style="color:#E5C07B;">        nodeUrls</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">add</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;127.0.0.1:6667&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">        nodeUrls</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">add</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;127.0.0.1:6668&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">        sessionPool </span><span style="color:#56B6C2;">=</span></span>
<span class="line"><span style="color:#C678DD;">                new</span><span style="color:#ABB2BF;"> SessionPool.</span><span style="color:#61AFEF;">Builder</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#ABB2BF;">                        .</span><span style="color:#61AFEF;">nodeUrls</span><span style="color:#ABB2BF;">(nodeUrls)</span></span>
<span class="line"><span style="color:#ABB2BF;">                        .</span><span style="color:#61AFEF;">user</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;root&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">                        .</span><span style="color:#61AFEF;">password</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;root&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">                        .</span><span style="color:#61AFEF;">maxSize</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">3</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">                        .</span><span style="color:#61AFEF;">build</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-3-performing-database-operations" tabindex="-1"><a class="header-anchor" href="#_2-3-performing-database-operations"><span>2.3 Performing Database Operations</span></a></h3><h4 id="_2-3-1-data-insertion" tabindex="-1"><a class="header-anchor" href="#_2-3-1-data-insertion"><span>2.3.1 Data Insertion</span></a></h4><p>In industrial scenarios, data insertion can be categorized into the following types: inserting multiple rows of data, and inserting multiple rows of data for a single device. Below, we introduce the insertion interfaces for different scenarios.</p><h5 id="multi-row-data-insertion-interface" tabindex="-1"><a class="header-anchor" href="#multi-row-data-insertion-interface"><span>Multi-Row Data Insertion Interface</span></a></h5><p>Interface Description: Supports inserting multiple rows of data at once, where each row corresponds to multiple measurement values for a device at a specific timestamp.</p><p>Interface List:</p><table><thead><tr><th><strong>Interface Name</strong></th><th><strong>Function Description</strong></th></tr></thead><tbody><tr><td><code>insertRecords(List&lt;String&gt; deviceIds, List&lt;Long&gt; times, List&lt;List&lt;String&gt;&gt; measurementsList, List&lt;List&lt;TSDataType&gt;&gt; typesList, List&lt;List&lt;Object&gt;&gt; valuesList)</code></td><td>Inserts multiple rows of data, suitable for scenarios where measurements are independently collected.</td></tr></tbody></table><p>Code Example:</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">import</span><span style="color:#E5C07B;"> java.util.ArrayList</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E5C07B;"> java.util.List</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E5C07B;"> org.apache.iotdb.rpc.IoTDBConnectionException</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E5C07B;"> org.apache.iotdb.rpc.StatementExecutionException</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E5C07B;"> org.apache.iotdb.session.pool.SessionPool</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E5C07B;"> org.apache.tsfile.enums.TSDataType</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">public</span><span style="color:#C678DD;"> class</span><span style="color:#E5C07B;"> SessionPoolExample</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;"> private</span><span style="color:#C678DD;"> static</span><span style="color:#E5C07B;"> SessionPool</span><span style="color:#E06C75;"> sessionPool</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">     public</span><span style="color:#C678DD;"> static</span><span style="color:#C678DD;"> void</span><span style="color:#61AFEF;"> main</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">String</span><span style="color:#ABB2BF;">[] </span><span style="color:#E06C75;font-style:italic;">args</span><span style="color:#ABB2BF;">)</span><span style="color:#C678DD;"> throws</span><span style="color:#E5C07B;"> IoTDBConnectionException</span><span style="color:#ABB2BF;">,</span><span style="color:#E5C07B;"> StatementExecutionException</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">          // 1. init SessionPool</span></span>
<span class="line"><span style="color:#61AFEF;">        constructSessionPool</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">          // 2. execute insert data</span></span>
<span class="line"><span style="color:#61AFEF;">        insertRecordsExample</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">          // 3. close SessionPool</span></span>
<span class="line"><span style="color:#61AFEF;">        closeSessionPool</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">  private</span><span style="color:#C678DD;"> static</span><span style="color:#C678DD;"> void</span><span style="color:#61AFEF;"> constructSessionPool</span><span style="color:#ABB2BF;">()</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        // Using nodeUrls ensures that when one node goes down, other nodes are automatically connected to retry</span></span>
<span class="line"><span style="color:#E5C07B;">        List</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">String</span><span style="color:#ABB2BF;">&gt; </span><span style="color:#E06C75;">nodeUrls</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#E5C07B;"> ArrayList</span><span style="color:#ABB2BF;">&lt;&gt;();</span></span>
<span class="line"><span style="color:#E5C07B;">        nodeUrls</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">add</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;127.0.0.1:6667&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">        nodeUrls</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">add</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;127.0.0.1:6668&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">        sessionPool </span><span style="color:#56B6C2;">=</span></span>
<span class="line"><span style="color:#C678DD;">                new</span><span style="color:#ABB2BF;"> SessionPool.</span><span style="color:#61AFEF;">Builder</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#ABB2BF;">                        .</span><span style="color:#61AFEF;">nodeUrls</span><span style="color:#ABB2BF;">(nodeUrls)</span></span>
<span class="line"><span style="color:#ABB2BF;">                        .</span><span style="color:#61AFEF;">user</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;root&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">                        .</span><span style="color:#61AFEF;">password</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;root&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">                        .</span><span style="color:#61AFEF;">maxSize</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">3</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">                        .</span><span style="color:#61AFEF;">build</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">    public</span><span style="color:#C678DD;"> static</span><span style="color:#C678DD;"> void</span><span style="color:#61AFEF;"> insertRecordsExample</span><span style="color:#ABB2BF;">()</span><span style="color:#C678DD;"> throws</span><span style="color:#E5C07B;"> IoTDBConnectionException</span><span style="color:#ABB2BF;">,</span><span style="color:#E5C07B;"> StatementExecutionException</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">        String</span><span style="color:#E06C75;"> deviceId</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &quot;root.sg1.d1&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">        List</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">String</span><span style="color:#ABB2BF;">&gt; </span><span style="color:#E06C75;">measurements</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#E5C07B;"> ArrayList</span><span style="color:#ABB2BF;">&lt;&gt;();</span></span>
<span class="line"><span style="color:#E5C07B;">        measurements</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">add</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;s1&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">        measurements</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">add</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;s2&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">        measurements</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">add</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;s3&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">        List</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">String</span><span style="color:#ABB2BF;">&gt; </span><span style="color:#E06C75;">deviceIds</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#E5C07B;"> ArrayList</span><span style="color:#ABB2BF;">&lt;&gt;();</span></span>
<span class="line"><span style="color:#E5C07B;">        List</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">List</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">String</span><span style="color:#ABB2BF;">&gt;&gt; </span><span style="color:#E06C75;">measurementsList</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#E5C07B;"> ArrayList</span><span style="color:#ABB2BF;">&lt;&gt;();</span></span>
<span class="line"><span style="color:#E5C07B;">        List</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">List</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">Object</span><span style="color:#ABB2BF;">&gt;&gt; </span><span style="color:#E06C75;">valuesList</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#E5C07B;"> ArrayList</span><span style="color:#ABB2BF;">&lt;&gt;();</span></span>
<span class="line"><span style="color:#E5C07B;">        List</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">Long</span><span style="color:#ABB2BF;">&gt; </span><span style="color:#E06C75;">timestamps</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#E5C07B;"> ArrayList</span><span style="color:#ABB2BF;">&lt;&gt;();</span></span>
<span class="line"><span style="color:#E5C07B;">        List</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">List</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">TSDataType</span><span style="color:#ABB2BF;">&gt;&gt; </span><span style="color:#E06C75;">typesList</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#E5C07B;"> ArrayList</span><span style="color:#ABB2BF;">&lt;&gt;();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">        for</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">long</span><span style="color:#E06C75;"> time</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">; time </span><span style="color:#56B6C2;">&lt;</span><span style="color:#D19A66;"> 500</span><span style="color:#ABB2BF;">; time++) {</span></span>
<span class="line"><span style="color:#E5C07B;">            List</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">Object</span><span style="color:#ABB2BF;">&gt; </span><span style="color:#E06C75;">values</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#E5C07B;"> ArrayList</span><span style="color:#ABB2BF;">&lt;&gt;();</span></span>
<span class="line"><span style="color:#E5C07B;">            List</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">TSDataType</span><span style="color:#ABB2BF;">&gt; </span><span style="color:#E06C75;">types</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#E5C07B;"> ArrayList</span><span style="color:#ABB2BF;">&lt;&gt;();</span></span>
<span class="line"><span style="color:#E5C07B;">            values</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">add</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">1L</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">            values</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">add</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">2L</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">            values</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">add</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">3L</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">            types</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">add</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">TSDataType</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">INT64</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">            types</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">add</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">TSDataType</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">INT64</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">            types</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">add</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">TSDataType</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">INT64</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">            deviceIds</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">add</span><span style="color:#ABB2BF;">(deviceId);</span></span>
<span class="line"><span style="color:#E5C07B;">            measurementsList</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">add</span><span style="color:#ABB2BF;">(measurements);</span></span>
<span class="line"><span style="color:#E5C07B;">            valuesList</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">add</span><span style="color:#ABB2BF;">(values);</span></span>
<span class="line"><span style="color:#E5C07B;">            typesList</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">add</span><span style="color:#ABB2BF;">(types);</span></span>
<span class="line"><span style="color:#E5C07B;">            timestamps</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">add</span><span style="color:#ABB2BF;">(time);</span></span>
<span class="line"><span style="color:#C678DD;">            if</span><span style="color:#ABB2BF;"> (time </span><span style="color:#56B6C2;">!=</span><span style="color:#D19A66;"> 0</span><span style="color:#56B6C2;"> &amp;&amp;</span><span style="color:#ABB2BF;"> time </span><span style="color:#56B6C2;">%</span><span style="color:#D19A66;"> 100</span><span style="color:#56B6C2;"> ==</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">                try</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">                    sessionPool</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">insertRecords</span><span style="color:#ABB2BF;">(deviceIds, timestamps, measurementsList, typesList, valuesList);</span></span>
<span class="line"><span style="color:#ABB2BF;">                } </span><span style="color:#C678DD;">catch</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">IoTDBConnectionException</span><span style="color:#ABB2BF;"> | </span><span style="color:#E5C07B;">StatementExecutionException</span><span style="color:#E06C75;font-style:italic;"> e</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">                    // solve exception</span></span>
<span class="line"><span style="color:#ABB2BF;">                }</span></span>
<span class="line"><span style="color:#E5C07B;">                deviceIds</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">clear</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E5C07B;">                measurementsList</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">clear</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E5C07B;">                valuesList</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">clear</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E5C07B;">                typesList</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">clear</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E5C07B;">                timestamps</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">clear</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">            }</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#C678DD;">        try</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">            sessionPool</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">insertRecords</span><span style="color:#ABB2BF;">(deviceIds, timestamps, measurementsList, typesList, valuesList);</span></span>
<span class="line"><span style="color:#ABB2BF;">        } </span><span style="color:#C678DD;">catch</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">IoTDBConnectionException</span><span style="color:#ABB2BF;"> | </span><span style="color:#E5C07B;">StatementExecutionException</span><span style="color:#E06C75;font-style:italic;"> e</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">            // solve exception</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#E06C75;">    </span></span>
<span class="line"><span style="color:#C678DD;">      public</span><span style="color:#C678DD;"> static</span><span style="color:#C678DD;"> void</span><span style="color:#61AFEF;"> closeSessionPool</span><span style="color:#ABB2BF;">(){</span></span>
<span class="line"><span style="color:#E5C07B;">        sessionPool</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">close</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="single-device-multi-row-data-insertion-interface" tabindex="-1"><a class="header-anchor" href="#single-device-multi-row-data-insertion-interface"><span>Single-Device Multi-Row Data Insertion Interface</span></a></h5><p>Interface Description: Supports inserting multiple rows of data for a single device at once, where each row corresponds to multiple measurement values for a specific timestamp.</p><p>Interface List：</p><table><thead><tr><th><strong>Interface Name</strong></th><th><strong>Function Description</strong></th></tr></thead><tbody><tr><td><code>insertTablet(Tablet tablet)</code></td><td>Inserts multiple rows of data for a single device, suitable for scenarios where measurements are independently collected.</td></tr></tbody></table><p>Code Example:</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">import</span><span style="color:#E5C07B;"> java.util.ArrayList</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E5C07B;"> java.util.List</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E5C07B;"> java.util.Random</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E5C07B;"> org.apache.iotdb.rpc.IoTDBConnectionException</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E5C07B;"> org.apache.iotdb.rpc.StatementExecutionException</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E5C07B;"> org.apache.iotdb.session.pool.SessionPool</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E5C07B;"> org.apache.tsfile.enums.TSDataType</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E5C07B;"> org.apache.tsfile.write.record.Tablet</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E5C07B;"> org.apache.tsfile.write.schema.MeasurementSchema</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">public</span><span style="color:#C678DD;"> class</span><span style="color:#E5C07B;"> SessionPoolExample</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">      private</span><span style="color:#C678DD;"> static</span><span style="color:#E5C07B;"> SessionPool</span><span style="color:#E06C75;"> sessionPool</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">      public</span><span style="color:#C678DD;"> static</span><span style="color:#C678DD;"> void</span><span style="color:#61AFEF;"> main</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">String</span><span style="color:#ABB2BF;">[] </span><span style="color:#E06C75;font-style:italic;">args</span><span style="color:#ABB2BF;">)</span><span style="color:#C678DD;"> throws</span><span style="color:#E5C07B;"> IoTDBConnectionException</span><span style="color:#ABB2BF;">,</span><span style="color:#E5C07B;"> StatementExecutionException</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        // 1. init SessionPool</span></span>
<span class="line"><span style="color:#61AFEF;">        constructSessionPool</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        // 2. execute insert data</span></span>
<span class="line"><span style="color:#61AFEF;">        insertTabletExample</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        // 3. close SessionPool</span></span>
<span class="line"><span style="color:#61AFEF;">        closeSessionPool</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">          }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">        private</span><span style="color:#C678DD;"> static</span><span style="color:#C678DD;"> void</span><span style="color:#61AFEF;"> constructSessionPool</span><span style="color:#ABB2BF;">()</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        // Using nodeUrls ensures that when one node goes down, other nodes are automatically connected to retry</span></span>
<span class="line"><span style="color:#E5C07B;">        List</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">String</span><span style="color:#ABB2BF;">&gt; </span><span style="color:#E06C75;">nodeUrls</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#E5C07B;"> ArrayList</span><span style="color:#ABB2BF;">&lt;&gt;();</span></span>
<span class="line"><span style="color:#E5C07B;">        nodeUrls</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">add</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;127.0.0.1:6667&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">        nodeUrls</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">add</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;127.0.0.1:6668&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">        sessionPool </span><span style="color:#56B6C2;">=</span></span>
<span class="line"><span style="color:#C678DD;">                new</span><span style="color:#ABB2BF;"> SessionPool.</span><span style="color:#61AFEF;">Builder</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#ABB2BF;">                        .</span><span style="color:#61AFEF;">nodeUrls</span><span style="color:#ABB2BF;">(nodeUrls)</span></span>
<span class="line"><span style="color:#ABB2BF;">                        .</span><span style="color:#61AFEF;">user</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;root&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">                        .</span><span style="color:#61AFEF;">password</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;root&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">                        .</span><span style="color:#61AFEF;">maxSize</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">3</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">                        .</span><span style="color:#61AFEF;">build</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">    private</span><span style="color:#C678DD;"> static</span><span style="color:#C678DD;"> void</span><span style="color:#61AFEF;"> insertTabletExample</span><span style="color:#ABB2BF;">()</span><span style="color:#C678DD;"> throws</span><span style="color:#E5C07B;"> IoTDBConnectionException</span><span style="color:#ABB2BF;">,</span><span style="color:#E5C07B;"> StatementExecutionException</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        /*</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">         * A Tablet example:</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">         *      device1</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">         * time s1, s2, s3</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">         * 1,   1,  1,  1</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">         * 2,   2,  2,  2</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">         * 3,   3,  3,  3</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">         */</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        // The schema of measurements of one device</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        // only measurementId and data type in MeasurementSchema take effects in Tablet</span></span>
<span class="line"><span style="color:#E5C07B;">        List</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">MeasurementSchema</span><span style="color:#ABB2BF;">&gt; </span><span style="color:#E06C75;">schemaList</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#E5C07B;"> ArrayList</span><span style="color:#ABB2BF;">&lt;&gt;();</span></span>
<span class="line"><span style="color:#E5C07B;">        schemaList</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">add</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">new</span><span style="color:#61AFEF;"> MeasurementSchema</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;s1&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">TSDataType</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">INT64</span><span style="color:#ABB2BF;">));</span></span>
<span class="line"><span style="color:#E5C07B;">        schemaList</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">add</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">new</span><span style="color:#61AFEF;"> MeasurementSchema</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;s2&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">TSDataType</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">INT64</span><span style="color:#ABB2BF;">));</span></span>
<span class="line"><span style="color:#E5C07B;">        schemaList</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">add</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">new</span><span style="color:#61AFEF;"> MeasurementSchema</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;s3&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">TSDataType</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">INT64</span><span style="color:#ABB2BF;">));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">        Tablet</span><span style="color:#E06C75;"> tablet</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> Tablet</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;root.sg.d1&quot;</span><span style="color:#ABB2BF;">, schemaList, </span><span style="color:#D19A66;">100</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        // Method 1 to add tablet data</span></span>
<span class="line"><span style="color:#C678DD;">        long</span><span style="color:#E06C75;"> timestamp</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> System</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">currentTimeMillis</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">        Random</span><span style="color:#E06C75;"> random</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> Random</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#C678DD;">        for</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">long</span><span style="color:#E06C75;"> row</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">; row </span><span style="color:#56B6C2;">&lt;</span><span style="color:#D19A66;"> 100</span><span style="color:#ABB2BF;">; row++) {</span></span>
<span class="line"><span style="color:#C678DD;">            int</span><span style="color:#E06C75;"> rowIndex</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> tablet</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">rowSize</span><span style="color:#ABB2BF;">++;</span></span>
<span class="line"><span style="color:#E5C07B;">            tablet</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">addTimestamp</span><span style="color:#ABB2BF;">(rowIndex, timestamp);</span></span>
<span class="line"><span style="color:#C678DD;">            for</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">int</span><span style="color:#E06C75;"> s</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">; s </span><span style="color:#56B6C2;">&lt;</span><span style="color:#D19A66;"> 3</span><span style="color:#ABB2BF;">; s++) {</span></span>
<span class="line"><span style="color:#C678DD;">                long</span><span style="color:#E06C75;"> value</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> random</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">nextLong</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E5C07B;">                tablet</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">addValue</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">schemaList</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">get</span><span style="color:#ABB2BF;">(s).</span><span style="color:#61AFEF;">getMeasurementId</span><span style="color:#ABB2BF;">(), rowIndex, value);</span></span>
<span class="line"><span style="color:#ABB2BF;">            }</span></span>
<span class="line"><span style="color:#C678DD;">            if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">tablet</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">rowSize</span><span style="color:#56B6C2;"> ==</span><span style="color:#E5C07B;"> tablet</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getMaxRowNumber</span><span style="color:#ABB2BF;">()) {</span></span>
<span class="line"><span style="color:#E5C07B;">                sessionPool</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">insertTablet</span><span style="color:#ABB2BF;">(tablet);</span></span>
<span class="line"><span style="color:#E5C07B;">                tablet</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">reset</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">            }</span></span>
<span class="line"><span style="color:#ABB2BF;">            timestamp++;</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#C678DD;">        if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">tablet</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">rowSize</span><span style="color:#56B6C2;"> !=</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">            sessionPool</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">insertTablet</span><span style="color:#ABB2BF;">(tablet);</span></span>
<span class="line"><span style="color:#E5C07B;">            tablet</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">reset</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">    public</span><span style="color:#C678DD;"> static</span><span style="color:#C678DD;"> void</span><span style="color:#61AFEF;"> closeSessionPool</span><span style="color:#ABB2BF;">(){</span></span>
<span class="line"><span style="color:#E5C07B;">        sessionPool</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">close</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-3-2-sql-operations" tabindex="-1"><a class="header-anchor" href="#_2-3-2-sql-operations"><span>2.3.2 SQL Operations</span></a></h4><p>SQL operations are divided into two categories: queries and non-queries. The corresponding interfaces are executeQuery and executeNonQuery. The difference between them is that the former executes specific query statements and returns a result set, while the latter performs insert, delete, and update operations and does not return a result set.</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">import</span><span style="color:#E5C07B;"> java.util.ArrayList</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E5C07B;"> java.util.List</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E5C07B;"> org.apache.iotdb.isession.pool.SessionDataSetWrapper</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E5C07B;"> org.apache.iotdb.rpc.IoTDBConnectionException</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E5C07B;"> org.apache.iotdb.rpc.StatementExecutionException</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E5C07B;"> org.apache.iotdb.session.pool.SessionPool</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">public</span><span style="color:#C678DD;"> class</span><span style="color:#E5C07B;"> SessionPoolExample</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">  private</span><span style="color:#C678DD;"> static</span><span style="color:#E5C07B;"> SessionPool</span><span style="color:#E06C75;"> sessionPool</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">  public</span><span style="color:#C678DD;"> static</span><span style="color:#C678DD;"> void</span><span style="color:#61AFEF;"> main</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">String</span><span style="color:#ABB2BF;">[] </span><span style="color:#E06C75;font-style:italic;">args</span><span style="color:#ABB2BF;">)</span><span style="color:#C678DD;"> throws</span><span style="color:#E5C07B;"> IoTDBConnectionException</span><span style="color:#ABB2BF;">,</span><span style="color:#E5C07B;"> StatementExecutionException</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        // 1. init SessionPool</span></span>
<span class="line"><span style="color:#61AFEF;">        constructSessionPool</span><span style="color:#ABB2BF;">(); </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        // 2. executes a non-query SQL statement, such as a DDL or DML command.</span></span>
<span class="line"><span style="color:#61AFEF;">        executeQueryExample</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        // 3. executes a query SQL statement and returns the result set.</span></span>
<span class="line"><span style="color:#61AFEF;">        executeNonQueryExample</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        // 4. close SessionPool</span></span>
<span class="line"><span style="color:#61AFEF;">        closeSessionPool</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">    private</span><span style="color:#C678DD;"> static</span><span style="color:#C678DD;"> void</span><span style="color:#61AFEF;"> executeNonQueryExample</span><span style="color:#ABB2BF;">()</span><span style="color:#C678DD;"> throws</span><span style="color:#E5C07B;"> IoTDBConnectionException</span><span style="color:#ABB2BF;">,</span><span style="color:#E5C07B;"> StatementExecutionException</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        // 1. create a nonAligned time series</span></span>
<span class="line"><span style="color:#E5C07B;">        sessionPool</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">executeNonQueryStatement</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;create timeseries root.test.d1.s1 with dataType = int32&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        // 2. set ttl</span></span>
<span class="line"><span style="color:#E5C07B;">        sessionPool</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">executeNonQueryStatement</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;set TTL to root.test.** 10000&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        // 3. delete time series</span></span>
<span class="line"><span style="color:#E5C07B;">        sessionPool</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">executeNonQueryStatement</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;delete timeseries root.test.d1.s1&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">        private</span><span style="color:#C678DD;"> static</span><span style="color:#C678DD;"> void</span><span style="color:#61AFEF;"> executeQueryExample</span><span style="color:#ABB2BF;">() throws IoTDBConnectionException, StatementExecutionException {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        // 1. execute normal query</span></span>
<span class="line"><span style="color:#C678DD;">        try</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">SessionDataSetWrapper</span><span style="color:#E06C75;"> wrapper</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> sessionPool</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">executeQueryStatement</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;select s1 from root.sg1.d1 limit 10&quot;</span><span style="color:#ABB2BF;">)) {</span></span>
<span class="line"><span style="color:#C678DD;">            while</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">wrapper</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">hasNext</span><span style="color:#ABB2BF;">()) {</span></span>
<span class="line"><span style="color:#E5C07B;">                System</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">out</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">println</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">wrapper</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">next</span><span style="color:#ABB2BF;">());</span></span>
<span class="line"><span style="color:#ABB2BF;">            }</span></span>
<span class="line"><span style="color:#ABB2BF;">                }</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        // 2. execute aggregate query</span></span>
<span class="line"><span style="color:#C678DD;">        try</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">SessionDataSetWrapper</span><span style="color:#E06C75;"> wrapper</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> sessionPool</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">executeQueryStatement</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;select count(s1) from root.sg1.d1 group by ([0, 40), 5ms) &quot;</span><span style="color:#ABB2BF;">)) {</span></span>
<span class="line"><span style="color:#C678DD;">            while</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">wrapper</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">hasNext</span><span style="color:#ABB2BF;">()) {</span></span>
<span class="line"><span style="color:#E5C07B;">                System</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">out</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">println</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">wrapper</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">next</span><span style="color:#ABB2BF;">());</span></span>
<span class="line"><span style="color:#ABB2BF;">            }</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#ABB2BF;">          }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">        private</span><span style="color:#C678DD;"> static</span><span style="color:#C678DD;"> void</span><span style="color:#61AFEF;"> constructSessionPool</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        // Using nodeUrls ensures that when one node goes down, other nodes are automatically connected to retry</span></span>
<span class="line"><span style="color:#E5C07B;">        List</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">String</span><span style="color:#ABB2BF;">&gt; </span><span style="color:#E06C75;">nodeUrls</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#E5C07B;"> ArrayList</span><span style="color:#ABB2BF;">&lt;&gt;();</span></span>
<span class="line"><span style="color:#E5C07B;">        nodeUrls</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">add</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;127.0.0.1:6667&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">        nodeUrls</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">add</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;127.0.0.1:6668&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">        sessionPool </span><span style="color:#56B6C2;">=</span></span>
<span class="line"><span style="color:#C678DD;">                new</span><span style="color:#ABB2BF;"> SessionPool.</span><span style="color:#61AFEF;">Builder</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#ABB2BF;">                        .</span><span style="color:#61AFEF;">nodeUrls</span><span style="color:#ABB2BF;">(nodeUrls)</span></span>
<span class="line"><span style="color:#ABB2BF;">                        .</span><span style="color:#61AFEF;">user</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;root&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">                        .</span><span style="color:#61AFEF;">password</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;root&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">                        .</span><span style="color:#61AFEF;">maxSize</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">3</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">                        .</span><span style="color:#61AFEF;">build</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">    public</span><span style="color:#C678DD;"> static</span><span style="color:#C678DD;"> void</span><span style="color:#61AFEF;"> closeSessionPool</span><span style="color:#ABB2BF;">(){</span></span>
<span class="line"><span style="color:#E5C07B;">        sessionPool</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">close</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-native-interface-description" tabindex="-1"><a class="header-anchor" href="#_3-native-interface-description"><span>3 Native Interface Description</span></a></h3><h4 id="_3-1-parameter-list" tabindex="-1"><a class="header-anchor" href="#_3-1-parameter-list"><span>3.1 Parameter List</span></a></h4><p>The Session class has the following fields, which can be set through the constructor or the Session.Builder method:</p><table><thead><tr><th><strong>Field Name</strong></th><th><strong>Type</strong></th><th><strong>Description</strong></th></tr></thead><tbody><tr><td><code>nodeUrls</code></td><td><code>List&lt;String&gt;</code></td><td>List of URLs for database nodes, supporting multiple node connections</td></tr><tr><td><code>username</code></td><td><code>String</code></td><td>Username</td></tr><tr><td><code>password</code></td><td><code>String</code></td><td>Password</td></tr><tr><td><code>fetchSize</code></td><td><code>int</code></td><td>Default batch size for query results</td></tr><tr><td><code>useSSL</code></td><td><code>boolean</code></td><td>Whether to enable SSL</td></tr><tr><td><code>trustStore</code></td><td><code>String</code></td><td>Path to the trust store</td></tr><tr><td><code>trustStorePwd</code></td><td><code>String</code></td><td>Password for the trust store</td></tr><tr><td><code>queryTimeoutInMs</code></td><td><code>long</code></td><td>Query timeout in milliseconds</td></tr><tr><td><code>enableRPCCompression</code></td><td><code>boolean</code></td><td>Whether to enable RPC compression</td></tr><tr><td><code>connectionTimeoutInMs</code></td><td><code>int</code></td><td>Connection timeout in milliseconds</td></tr><tr><td><code>zoneId</code></td><td><code>ZoneId</code></td><td>Time zone setting for the session</td></tr><tr><td><code>thriftDefaultBufferSize</code></td><td><code>int</code></td><td>Default buffer size for Thrift Thrift</td></tr><tr><td><code>thriftMaxFrameSize</code></td><td><code>int</code></td><td>Maximum frame size for Thrift Thrift</td></tr><tr><td><code>defaultEndPoint</code></td><td><code>TEndPoint</code></td><td>Default database endpoint information</td></tr><tr><td><code>defaultSessionConnection</code></td><td><code>SessionConnection</code></td><td>Default session connection object</td></tr><tr><td><code>isClosed</code></td><td><code>boolean</code></td><td>Whether the current session is closed</td></tr><tr><td><code>enableRedirection</code></td><td><code>boolean</code></td><td>Whether to enable redirection</td></tr><tr><td><code>enableRecordsAutoConvertTablet</code></td><td><code>boolean</code></td><td>Whether to enable the function of recording the automatic transfer to Tablet</td></tr><tr><td><code>deviceIdToEndpoint</code></td><td><code>Map&lt;String, TEndPoint&gt;</code></td><td>Mapping of device IDs to database endpoints</td></tr><tr><td><code>endPointToSessionConnection</code></td><td><code>Map&lt;TEndPoint, SessionConnection&gt;</code></td><td>Mapping of database endpoints to session connections</td></tr><tr><td><code>executorService</code></td><td><code>ScheduledExecutorService</code></td><td>Thread pool for periodically updating the node list</td></tr><tr><td><code>availableNodes</code></td><td><code>INodeSupplier</code></td><td>Supplier of available nodes</td></tr><tr><td><code>enableQueryRedirection</code></td><td><code>boolean</code></td><td>Whether to enable query redirection</td></tr><tr><td><code>version</code></td><td><code>Version</code></td><td>Client version number, used for compatibility judgment with the server</td></tr><tr><td><code>enableAutoFetch</code></td><td><code>boolean</code></td><td>Whether to enable automatic fetching</td></tr><tr><td><code>maxRetryCount</code></td><td><code>int</code></td><td>Maximum number of retries</td></tr><tr><td><code>retryIntervalInMs</code></td><td><code>long</code></td><td>Retry interval in milliseconds</td></tr></tbody></table><h4 id="_3-2-interface-list" tabindex="-1"><a class="header-anchor" href="#_3-2-interface-list"><span>3.2 Interface list</span></a></h4><h5 id="_3-2-1-metadata-management" tabindex="-1"><a class="header-anchor" href="#_3-2-1-metadata-management"><span>3.2.1 Metadata Management</span></a></h5><table><thead><tr><th><strong>Method Name</strong></th><th><strong>Function Description</strong></th><th><strong>Parameter Explanation</strong></th></tr></thead><tbody><tr><td><code>createDatabase(String database)</code></td><td>Create a database</td><td><code>database</code>: The name of the database to be created</td></tr><tr><td><code>deleteDatabase(String database)</code></td><td>Delete a specified database</td><td><code>database</code>: The name of the database to be deleted</td></tr><tr><td><code>deleteDatabases(List&lt;String&gt; databases)</code></td><td>Batch delete databases</td><td><code>databases</code>: A list of database names to be deleted</td></tr><tr><td><code>createTimeseries(String path, TSDataType dataType, TSEncoding encoding, CompressionType compressor)</code></td><td>Create a single time series</td><td><code>path</code>: The path of the time series，<code>dataType</code>: The data type，<code>encoding</code>: The encoding type，<code>compressor</code>: The compression type</td></tr><tr><td><code>createAlignedTimeseries(...)</code></td><td>Create aligned time series</td><td>Device ID, list of measurement points, list of data types, list of encodings, list of compression types</td></tr><tr><td><code>createMultiTimeseries(...)</code></td><td>Batch create time series</td><td>Multiple paths, data types, encodings, compression types, properties, tags, aliases, etc.</td></tr><tr><td><code>deleteTimeseries(String path)</code></td><td>Delete a time series</td><td><code>path</code>: The path of the time series to be deleted</td></tr><tr><td><code>deleteTimeseries(List&lt;String&gt; paths)</code></td><td>Batch delete time series</td><td><code>paths</code>: A list of time series paths to be deleted</td></tr><tr><td><code>setSchemaTemplate(String templateName, String prefixPath)</code></td><td>Set a schema template</td><td><code>templateName</code>: The name of template，<code>prefixPath</code>: The path where the template is applied</td></tr><tr><td><code>createSchemaTemplate(Template template)</code></td><td>Create a schema template</td><td><code>template</code>: The template object</td></tr><tr><td><code>dropSchemaTemplate(String templateName)</code></td><td>Delete a schema template</td><td><code>templateName</code>: The name of template to be deleted</td></tr><tr><td><code>addAlignedMeasurementsInTemplate(...)</code></td><td>Add aligned measurements to a template</td><td>Template name, list of measurement paths, data type, encoding type, compression type</td></tr><tr><td><code>addUnalignedMeasurementsInTemplate(...)</code></td><td>Add unaligned measurements to a template</td><td>Same as above</td></tr><tr><td><code>deleteNodeInTemplate(String templateName, String path)</code></td><td>Delete a node in a template</td><td><code>templateName</code>: The name of template，<code>path</code>: The path to be deleted</td></tr><tr><td><code>countMeasurementsInTemplate(String name)</code></td><td>Count the number of measurements in a template</td><td><code>name</code>: The name of template</td></tr><tr><td><code>isMeasurementInTemplate(String templateName, String path)</code></td><td>Check if a measurement exists in a template</td><td><code>templateName</code>: The name of template，<code>path</code>: The path of the measurement</td></tr><tr><td><code>isPathExistInTemplate(String templateName, String path)</code></td><td>Check if a path exists in a template</td><td>same as above</td></tr><tr><td><code>showMeasurementsInTemplate(String templateName)</code></td><td>Show measurements in a template</td><td><code>templateName</code>: The name of template</td></tr><tr><td><code>showMeasurementsInTemplate(String templateName, String pattern)</code></td><td>Show measurements in a template by pattern</td><td><code>templateName</code>: The name of template，<code>pattern</code>: The matching pattern</td></tr><tr><td><code>showAllTemplates()</code></td><td>Show all templates</td><td>No parameters</td></tr><tr><td><code>showPathsTemplateSetOn(String templateName)</code></td><td>Show paths where a template is set</td><td><code>templateName</code>: The name of the template</td></tr><tr><td><code>showPathsTemplateUsingOn(String templateName)</code></td><td>Show actual paths using a template</td><td>Same as above上</td></tr><tr><td><code>unsetSchemaTemplate(String prefixPath, String templateName)</code></td><td>Unset the template setting for a path</td><td><code>prefixPath</code>: The path，<code>templateName</code>: The name of template</td></tr></tbody></table><h5 id="_3-2-2-data-insertion" tabindex="-1"><a class="header-anchor" href="#_3-2-2-data-insertion"><span>3.2.2 Data Insertion</span></a></h5><table><thead><tr><th><strong>Method Name</strong></th><th><strong>Function Description</strong></th><th><strong>Parameter Explanation</strong></th></tr></thead><tbody><tr><td><code>insertRecord(String deviceId, long time, List&lt;String&gt; measurements, List&lt;TSDataType&gt; types, Object... values)</code></td><td>Insert a single record</td><td><code>deviceId</code>: Device ID，<code>time</code>: Timestamp，<code>measurements</code>: List of measurement points，<code>types</code>: List of data types，<code>values</code>: List of values</td></tr><tr><td><code>insertRecord(String deviceId, long time, List&lt;String&gt; measurements, List&lt;String&gt; values)</code></td><td>Insert a single record</td><td><code>deviceId</code>: Device ID，<code>time</code>: Timestamp，<code>measurements</code>: List of measurement points，<code>values</code>: List of values</td></tr><tr><td><code>insertRecords(List&lt;String&gt; deviceIds, List&lt;Long&gt; times, List&lt;List&lt;String&gt;&gt; measurementsList, List&lt;List&lt;Object&gt;&gt; valuesList)</code></td><td>Insert multiple records</td><td><code>deviceIds</code>: List of device IDs，<code>times</code>: List of timestamps，<code>measurementsList</code>: List of timestamps，<code>valuesList</code>: List of lists of values</td></tr><tr><td><code>insertRecords(List&lt;String&gt; deviceIds, List&lt;Long&gt; times, List&lt;List&lt;String&gt;&gt; measurementsList, List&lt;List&lt;TSDataType&gt;&gt; typesList, List&lt;List&lt;Object&gt;&gt; valuesList)</code></td><td>Insert multiple records</td><td>Same as above，plus <code>typesList</code>: List of lists of data types</td></tr><tr><td><code>insertRecordsOfOneDevice(String deviceId, List&lt;Long&gt; times, List&lt;List&lt;String&gt;&gt; measurementsList, List&lt;List&lt;TSDataType&gt;&gt; typesList, List&lt;List&lt;Object&gt;&gt; valuesList)</code></td><td>Insert multiple records for a single device</td><td><code>deviceId</code>: Device ID，<code>times</code>: List of timestamps，<code>measurementsList</code>: List of lists of measurement points，<code>typesList</code>: List of lists of types，<code>valuesList</code>: List of lists of values</td></tr><tr><td><code>insertRecordsOfOneDevice(String deviceId, List&lt;Long&gt; times, List&lt;List&lt;String&gt;&gt; measurementsList, List&lt;List&lt;TSDataType&gt;&gt; typesList, List&lt;List&lt;Object&gt;&gt; valuesList, boolean haveSorted)</code></td><td>Insert sorted multiple records for a single device</td><td>Same as above, plus <code>haveSorted</code>: Whether the data is already sorted</td></tr><tr><td><code>insertStringRecordsOfOneDevice(String deviceId, List&lt;Long&gt; times, List&lt;List&lt;String&gt;&gt; measurementsList, List&lt;List&lt;String&gt;&gt; valuesList)</code></td><td>Insert string-formatted records for a single device</td><td><code>deviceId</code>: Device ID，<code>times</code>: List of timestamps，<code>measurementsList</code>: List of lists of measurement points，<code>valuesList</code>: List of lists of values</td></tr><tr><td><code>insertStringRecordsOfOneDevice(String deviceId, List&lt;Long&gt; times, List&lt;List&lt;String&gt;&gt; measurementsList, List&lt;List&lt;String&gt;&gt; valuesList, boolean haveSorted)</code></td><td>Insert sorted string-formatted records for a single device</td><td>Same as above, plus <code>haveSorted</code>: Whether the data is already sorted序</td></tr><tr><td><code>insertAlignedRecord(String deviceId, long time, List&lt;String&gt; measurements, List&lt;TSDataType&gt; types, List&lt;Object&gt; values)</code></td><td>Insert a single aligned record</td><td><code>deviceId</code>: Device ID，<code>time</code>: Timestamp，<code>measurements</code>: List of measurement points，<code>types</code>: List of types，<code>values</code>: List of values</td></tr><tr><td><code>insertAlignedRecord(String deviceId, long time, List&lt;String&gt; measurements, List&lt;String&gt; values)</code></td><td>Insert a single string-formatted aligned record</td><td><code>deviceId</code>: Device ID<code>time</code>: Timestamp,<code>measurements</code>: List of measurement points，<code>values</code>: List of values</td></tr><tr><td><code>insertAlignedRecords(List&lt;String&gt; deviceIds, List&lt;Long&gt; times, List&lt;List&lt;String&gt;&gt; measurementsList, List&lt;List&lt;Object&gt;&gt; valuesList)</code></td><td>Insert multiple aligned records</td><td><code>deviceIds</code>: List of device IDs，<code>times</code>: List of timestamps，<code>measurementsList</code>: List of lists of measurement points，<code>valuesList</code>: List of lists of values</td></tr><tr><td><code>insertAlignedRecords(List&lt;String&gt; deviceIds, List&lt;Long&gt; times, List&lt;List&lt;String&gt;&gt; measurementsList, List&lt;List&lt;TSDataType&gt;&gt; typesList, List&lt;List&lt;Object&gt;&gt; valuesList)</code></td><td>Insert multiple aligned records</td><td>Same as above, plus <code>typesList</code>: List of lists of data types</td></tr><tr><td><code>insertAlignedRecordsOfOneDevice(String deviceId, List&lt;Long&gt; times, List&lt;List&lt;String&gt;&gt; measurementsList, List&lt;List&lt;TSDataType&gt;&gt; typesList, List&lt;List&lt;Object&gt;&gt; valuesList)</code></td><td>Insert multiple aligned records for a single device</td><td>Same as above</td></tr><tr><td><code>insertAlignedRecordsOfOneDevice(String deviceId, List&lt;Long&gt; times, List&lt;List&lt;String&gt;&gt; measurementsList, List&lt;List&lt;TSDataType&gt;&gt; typesList, List&lt;List&lt;Object&gt;&gt; valuesList, boolean haveSorted)</code></td><td>Insert sorted multiple aligned records for a single device</td><td>Same as above, plus <code>haveSorted</code>: Whether the data is already sorted</td></tr><tr><td><code>insertAlignedStringRecordsOfOneDevice(String deviceId, List&lt;Long&gt; times, List&lt;List&lt;String&gt;&gt; measurementsList, List&lt;List&lt;String&gt;&gt; valuesList)</code></td><td>Insert string-formatted aligned records for a single device</td><td><code>deviceId</code>: Device ID，<code>times</code>: List of timestamps，<code>measurementsList</code>: List of lists of measurement points，<code>valuesList</code>: List of lists of values</td></tr><tr><td><code>insertAlignedStringRecordsOfOneDevice(String deviceId, List&lt;Long&gt; times, List&lt;List&lt;String&gt;&gt; measurementsList, List&lt;List&lt;String&gt;&gt; valuesList, boolean haveSorted)</code></td><td>Insert sorted string-formatted aligned records for a single device</td><td>Same as above, plus w <code>haveSorted</code>: whether the data is already sorted</td></tr><tr><td><code>insertTablet(Tablet tablet)</code></td><td>Insert a single Tablet data</td><td><code>tablet</code>: The Tablet data to be inserted</td></tr><tr><td><code>insertTablet(Tablet tablet, boolean sorted)</code></td><td>Insert a sorted Tablet data</td><td>Same as above, plus <code>sorted</code>: whether the data is already sorted</td></tr><tr><td><code>insertAlignedTablet(Tablet tablet)</code></td><td>Insert an aligned Tablet data</td><td><code>tablet</code>: The Tablet data to be inserted</td></tr><tr><td><code>insertAlignedTablet(Tablet tablet, boolean sorted)</code></td><td>Insert a sorted aligned Tablet data</td><td>Same as above, plus <code>sorted</code>: whether the data is already sorted</td></tr><tr><td><code>insertTablets(Map&lt;String, Tablet&gt; tablets)</code></td><td>Insert multiple Tablet data in batch</td><td><code>tablets</code>: Mapping from device IDs to Tablet data</td></tr><tr><td><code>insertTablets(Map&lt;String, Tablet&gt; tablets, boolean sorted)</code></td><td>Insert sorted multiple Tablet data in batch</td><td>Same as above, plus <code>sorted</code>: whether the data is already sorted</td></tr><tr><td><code>insertAlignedTablets(Map&lt;String, Tablet&gt; tablets)</code></td><td>Insert multiple aligned Tablet data in batch</td><td><code>tablets</code>: Mapping from device IDs to Tablet data</td></tr><tr><td><code>insertAlignedTablets(Map&lt;String, Tablet&gt; tablets, boolean sorted)</code></td><td>Insert sorted multiple aligned Tablet data in batch</td><td>Same as above, plus <code>sorted</code>: whether the data is already sorted</td></tr></tbody></table><h5 id="_3-2-3-data-deletion" tabindex="-1"><a class="header-anchor" href="#_3-2-3-data-deletion"><span>3.2.3 Data Deletion</span></a></h5><table><thead><tr><th><strong>Method Name</strong></th><th><strong>Function Description</strong></th><th><strong>Parameter Explanation</strong></th></tr></thead><tbody><tr><td><code>deleteTimeseries(String path)</code></td><td>Delete a single time series</td><td><code>path</code>: The path of the time series</td></tr><tr><td><code>deleteTimeseries(List&lt;String&gt; paths)</code></td><td>Batch delete time series</td><td><code>paths</code>: A list of time series paths</td></tr><tr><td><code>deleteData(String path, long endTime)</code></td><td>Delete historical data for a specified path</td><td><code>path</code>: The path，<code>endTime</code>: The end timestamp</td></tr><tr><td><code>deleteData(List&lt;String&gt; paths, long endTime)</code></td><td>Batch delete historical data for specified paths</td><td><code>paths</code>: A list of paths，<code>endTime</code>: The end timestamp</td></tr><tr><td><code>deleteData(List&lt;String&gt; paths, long startTime, long endTime)</code></td><td>Delete historical data within a time range for specified paths</td><td>Same as above, plus <code>startTime</code>: The start timestamp</td></tr></tbody></table><h5 id="_3-2-4-data-query" tabindex="-1"><a class="header-anchor" href="#_3-2-4-data-query"><span>3.2.4 Data Query</span></a></h5><table><thead><tr><th><strong>Method Name</strong></th><th><strong>Function Description</strong></th><th><strong>Parameter Explanation</strong></th></tr></thead><tbody><tr><td><code>executeQueryStatement(String sql)</code></td><td>Execute a query statement</td><td><code>sql</code>: The query SQL statement</td></tr><tr><td><code>executeQueryStatement(String sql, long timeoutInMs)</code></td><td>Execute a query statement with timeout</td><td><code>sql</code>: The query SQL statement, <code>timeoutInMs</code>: The query timeout (in milliseconds)</td></tr><tr><td><code>executeRawDataQuery(List&lt;String&gt; paths, long startTime, long endTime)</code></td><td>Query raw data for specified paths</td><td>paths: A list of query paths, <code>startTime</code>: The start timestamp, <code>endTime</code>: The end timestamp</td></tr><tr><td><code>executeRawDataQuery(List&lt;String&gt; paths, long startTime, long endTime, long timeOut)</code></td><td>Query raw data for specified paths (with timeout)</td><td>Same as above, plus <code>timeOut</code>: The timeout time</td></tr><tr><td><code>executeLastDataQuery(List&lt;String&gt; paths)</code></td><td>Query the latest data</td><td><code>paths</code>: A list of query paths</td></tr><tr><td><code>executeLastDataQuery(List&lt;String&gt; paths, long lastTime)</code></td><td>Query the latest data at a specified time</td><td><code>paths</code>: A list of query paths, <code>lastTime</code>: The specified timestamp</td></tr><tr><td><code>executeLastDataQuery(List&lt;String&gt; paths, long lastTime, long timeOut)</code></td><td>Query the latest data at a specified time (with timeout)</td><td>Same as above, plus <code>timeOut</code>: The timeout time</td></tr><tr><td><code>executeLastDataQueryForOneDevice(String db, String device, List&lt;String&gt; sensors, boolean isLegalPathNodes)</code></td><td>Query the latest data for a single device</td><td><code>db</code>: The database name, <code>device</code>: The device name, <code>sensors</code>: A list of sensors, <code>isLegalPathNodes</code>: Whether the path nodes are legal</td></tr><tr><td><code>executeAggregationQuery(List&lt;String&gt; paths, List&lt;TAggregationType&gt; aggregations)</code></td><td>Execute an aggregation query</td><td><code>paths</code>: A list of query paths, <code>aggregations</code>: A list of aggregation types</td></tr><tr><td><code>executeAggregationQuery(List&lt;String&gt; paths, List&lt;TAggregationType&gt; aggregations, long startTime, long endTime)</code></td><td>Execute an aggregation query with a time range</td><td>Same as above, plus <code>startTime</code>: The start timestamp, <code>endTime</code>:\` The end timestamp</td></tr><tr><td><code>executeAggregationQuery(List&lt;String&gt; paths, List&lt;TAggregationType&gt; aggregations, long startTime, long endTime, long interval)</code></td><td>Execute an aggregation query with a time interval</td><td>Same as above, plus <code>interval</code>: The time interval</td></tr><tr><td><code>executeAggregationQuery(List&lt;String&gt; paths, List&lt;TAggregationType&gt; aggregations, long startTime, long endTime, long interval, long slidingStep)</code></td><td>Execute a sliding window aggregation query</td><td>Same as above, plus <code>slidingStep</code>: The sliding step</td></tr><tr><td><code>fetchAllConnections()</code></td><td>Get information of all active connections</td><td>No parameters</td></tr></tbody></table><h5 id="_3-2-5-system-status-and-backup" tabindex="-1"><a class="header-anchor" href="#_3-2-5-system-status-and-backup"><span>3.2.5 System Status and Backup</span></a></h5><table><thead><tr><th><strong>Method Name</strong></th><th><strong>Function Description</strong></th><th><strong>Parameter Explanation</strong></th></tr></thead><tbody><tr><td><code>getBackupConfiguration()</code></td><td>Get backup configuration information</td><td>No parameters</td></tr><tr><td><code>fetchAllConnections()</code></td><td>Get information of all active connections</td><td>No parameters</td></tr><tr><td><code>getSystemStatus()</code></td><td>Get the system status</td><td>Deprecated, returns <code>SystemStatus.NORMAL</code></td></tr></tbody></table>`,38))])}const u=l(d,[["render",B],["__file","Programming-Java-Native-API.html.vue"]]),v=JSON.parse('{"path":"/UserGuide/V2.0.1/Tree/API/Programming-Java-Native-API.html","title":"Session Native API","lang":"en-US","frontmatter":{"description":"Session Native API In the native API of IoTDB, the Session is the core interface for interacting with the database. It integrates a rich set of methods that support data writing...","head":[["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://iotdb.apache.org/zh/UserGuide/V2.0.1/Tree/API/Programming-Java-Native-API.html"}],["meta",{"property":"og:url","content":"https://iotdb.apache.org/UserGuide/V2.0.1/Tree/API/Programming-Java-Native-API.html"}],["meta",{"property":"og:site_name","content":"IoTDB Website"}],["meta",{"property":"og:title","content":"Session Native API"}],["meta",{"property":"og:description","content":"Session Native API In the native API of IoTDB, the Session is the core interface for interacting with the database. It integrates a rich set of methods that support data writing..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-01-21T05:16:03.000Z"}],["meta",{"property":"article:modified_time","content":"2025-01-21T05:16:03.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Session Native API\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-01-21T05:16:03.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"1 Overview of Steps","slug":"_1-overview-of-steps","link":"#_1-overview-of-steps","children":[]},{"level":2,"title":"2 Detailed Steps","slug":"_2-detailed-steps","link":"#_2-detailed-steps","children":[{"level":3,"title":"2.1 Create a Maven Project","slug":"_2-1-create-a-maven-project","link":"#_2-1-create-a-maven-project","children":[]},{"level":3,"title":"2.2 Creating a Connection Pool Instance","slug":"_2-2-creating-a-connection-pool-instance","link":"#_2-2-creating-a-connection-pool-instance","children":[]},{"level":3,"title":"2.3 Performing Database Operations","slug":"_2-3-performing-database-operations","link":"#_2-3-performing-database-operations","children":[]},{"level":3,"title":"3 Native Interface Description","slug":"_3-native-interface-description","link":"#_3-native-interface-description","children":[]}]}],"git":{"createdTime":1688958677000,"updatedTime":1737436563000,"contributors":[{"name":"W1y1r","username":"W1y1r","email":"150988475+W1y1r@users.noreply.github.com","commits":4,"url":"https://github.com/W1y1r"},{"name":"CritasWang","username":"CritasWang","email":"critas@outlook.com","commits":2,"url":"https://github.com/CritasWang"},{"name":"majialin","username":"majialin","email":"107627937+mal117@users.noreply.github.com","commits":2,"url":"https://github.com/majialin"},{"name":"VGalaxies","username":"VGalaxies","email":"dyc1904821183@gmail.com","commits":1,"url":"https://github.com/VGalaxies"},{"name":"StefanieZhao7","username":"StefanieZhao7","email":"131440380+StefanieZhao7@users.noreply.github.com","commits":1,"url":"https://github.com/StefanieZhao7"},{"name":"Xinyi Zhao","username":"Xinyi Zhao","email":"xinyizhao@XinyideMacBook-Pro.local","commits":1,"url":"https://github.com/Xinyi Zhao"},{"name":"Haonan","username":"Haonan","email":"hhaonan@outlook.com","commits":1,"url":"https://github.com/Haonan"},{"name":"wanghui42","username":"wanghui42","email":"105700158+wanghui42@users.noreply.github.com","commits":1,"url":"https://github.com/wanghui42"},{"name":"Christofer Dutz","username":"Christofer Dutz","email":"christofer.dutz@c-ware.de","commits":1,"url":"https://github.com/Christofer Dutz"},{"name":"Lei","username":"Lei","email":"33376433+LeiRui@users.noreply.github.com","commits":1,"url":"https://github.com/Lei"},{"name":"Summer","username":"Summer","email":"43237967+2b3c511@users.noreply.github.com","commits":1,"url":"https://github.com/Summer"},{"name":"Weihao Li","username":"Weihao Li","email":"60659567+Wei-hao-Li@users.noreply.github.com","commits":1,"url":"https://github.com/Weihao Li"}]},"readingTime":{"minutes":10.74,"words":3221},"filePathRelative":"UserGuide/V2.0.1/Tree/API/Programming-Java-Native-API.md","localizedDate":"July 10, 2023","autoDesc":true}');export{u as comp,v as data};
