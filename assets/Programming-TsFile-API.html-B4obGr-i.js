import{_ as e,c as a,b as n,o as l}from"./app-1A-12q_f.js";const o={};function t(i,s){return l(),a("div",null,s[0]||(s[0]=[n(`<h1 id="tsfile-api" tabindex="-1"><a class="header-anchor" href="#tsfile-api"><span>TsFile API</span></a></h1><p>TsFile is a file format of Time Series used in IoTDB. This session introduces the usage of this file format.</p><h2 id="tsfile-library-installation" tabindex="-1"><a class="header-anchor" href="#tsfile-library-installation"><span>TsFile library Installation</span></a></h2><p>There are two ways to use TsFile in your own project.</p><ul><li>Use as jars: Compile the source codes and build to jars</li></ul><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#61AFEF;">git</span><span style="color:#98C379;"> clone</span><span style="color:#98C379;"> https://github.com/apache/iotdb.git</span></span>
<span class="line"><span style="color:#56B6C2;">cd</span><span style="color:#98C379;"> iotdb-core/tsfile</span></span>
<span class="line"><span style="color:#61AFEF;">mvn</span><span style="color:#98C379;"> clean</span><span style="color:#98C379;"> package</span><span style="color:#D19A66;"> -Dmaven.test.skip=true</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Then, all the jars are in folder named <code>target/</code>. Import <code>target/tsfile-0.12.0-jar-with-dependencies.jar</code> to your project.</p><ul><li><p>Use as a maven dependency:</p><p>Compile source codes and deploy to your local repository in three steps:</p><ul><li><p>Get the source codes</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#61AFEF;">git</span><span style="color:#98C379;"> clone</span><span style="color:#98C379;"> https://github.com/apache/iotdb.git</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>Compile the source codes and deploy</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#56B6C2;">cd</span><span style="color:#98C379;"> iotdb-core/tsfile</span></span>
<span class="line"><span style="color:#61AFEF;">mvn</span><span style="color:#98C379;"> clean</span><span style="color:#98C379;"> install</span><span style="color:#D19A66;"> -Dmaven.test.skip=true</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>add dependencies into your project:</p><div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" data-title="xml" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#ABB2BF;"> &lt;</span><span style="color:#E06C75;">dependency</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">   &lt;</span><span style="color:#E06C75;">groupId</span><span style="color:#ABB2BF;">&gt;org.apache.iotdb&lt;/</span><span style="color:#E06C75;">groupId</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">   &lt;</span><span style="color:#E06C75;">artifactId</span><span style="color:#ABB2BF;">&gt;tsfile&lt;/</span><span style="color:#E06C75;">artifactId</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">   &lt;</span><span style="color:#E06C75;">version</span><span style="color:#ABB2BF;">&gt;1.0.0&lt;/</span><span style="color:#E06C75;">version</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;"> &lt;/</span><span style="color:#E06C75;">dependency</span><span style="color:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><p>Or, you can download the dependencies from official Maven repository:</p><ul><li><p>First, find your maven <code>settings.xml</code> on path: <code>\${username}\\.m2\\settings.xml</code><br> , add this <code>&lt;profile&gt;</code> to <code>&lt;profiles&gt;</code>:</p><div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" data-title="xml" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#ABB2BF;">  &lt;</span><span style="color:#E06C75;">profile</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">       &lt;</span><span style="color:#E06C75;">id</span><span style="color:#ABB2BF;">&gt;allow-snapshots&lt;/</span><span style="color:#E06C75;">id</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">          &lt;</span><span style="color:#E06C75;">activation</span><span style="color:#ABB2BF;">&gt;&lt;</span><span style="color:#E06C75;">activeByDefault</span><span style="color:#ABB2BF;">&gt;true&lt;/</span><span style="color:#E06C75;">activeByDefault</span><span style="color:#ABB2BF;">&gt;&lt;/</span><span style="color:#E06C75;">activation</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">       &lt;</span><span style="color:#E06C75;">repositories</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">         &lt;</span><span style="color:#E06C75;">repository</span><span style="color:#ABB2BF;">&gt;  </span></span>
<span class="line"><span style="color:#ABB2BF;">            &lt;</span><span style="color:#E06C75;">id</span><span style="color:#ABB2BF;">&gt;apache.snapshots&lt;/</span><span style="color:#E06C75;">id</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">            &lt;</span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;">&gt;Apache Development Snapshot Repository&lt;/</span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">            &lt;</span><span style="color:#E06C75;">url</span><span style="color:#ABB2BF;">&gt;https://repository.apache.org/content/repositories/snapshots/&lt;/</span><span style="color:#E06C75;">url</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">            &lt;</span><span style="color:#E06C75;">releases</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">                &lt;</span><span style="color:#E06C75;">enabled</span><span style="color:#ABB2BF;">&gt;false&lt;/</span><span style="color:#E06C75;">enabled</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">            &lt;/</span><span style="color:#E06C75;">releases</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">            &lt;</span><span style="color:#E06C75;">snapshots</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">                &lt;</span><span style="color:#E06C75;">enabled</span><span style="color:#ABB2BF;">&gt;true&lt;/</span><span style="color:#E06C75;">enabled</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">            &lt;/</span><span style="color:#E06C75;">snapshots</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">          &lt;/</span><span style="color:#E06C75;">repository</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">       &lt;/</span><span style="color:#E06C75;">repositories</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">     &lt;/</span><span style="color:#E06C75;">profile</span><span style="color:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>Then add dependencies into your project:</p><div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" data-title="xml" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#ABB2BF;"> &lt;</span><span style="color:#E06C75;">dependency</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">   &lt;</span><span style="color:#E06C75;">groupId</span><span style="color:#ABB2BF;">&gt;org.apache.iotdb&lt;/</span><span style="color:#E06C75;">groupId</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">   &lt;</span><span style="color:#E06C75;">artifactId</span><span style="color:#ABB2BF;">&gt;tsfile&lt;/</span><span style="color:#E06C75;">artifactId</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">   &lt;</span><span style="color:#E06C75;">version</span><span style="color:#ABB2BF;">&gt;1.0.0&lt;/</span><span style="color:#E06C75;">version</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;"> &lt;/</span><span style="color:#E06C75;">dependency</span><span style="color:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li></ul><h2 id="tsfile-usage" tabindex="-1"><a class="header-anchor" href="#tsfile-usage"><span>TsFile Usage</span></a></h2><p>This section demonstrates the detailed usages of TsFile.</p><p>Time-series Data<br> Time-series data is considered as a sequence of quadruples. A quadruple is defined as (device, measurement, time, value).</p><ul><li><p><strong>measurement</strong>: A physical or formal measurement that a time-series data takes, e.g., the temperature of a city, the<br> sales number of some goods or the speed of a train at different times. As a traditional sensor (like a thermometer) also<br> takes a single measurement and produce a time-series, we will use measurement and sensor interchangeably below.</p></li><li><p><strong>device</strong>: A device refers to an entity that takes several measurements (producing multiple time-series), e.g.,<br> a running train monitors its speed, oil meter, miles it has run, current passengers each is conveyed to a time-series dataset.</p></li></ul><p><strong>One Line of Data</strong>: In many industrial applications, a device normally contains more than one sensor and these sensors<br> may have values at the same timestamp, which is called one line of data.</p><p>Formally, one line of data consists of a <code>device_id</code>, a timestamp which indicates the milliseconds since January 1,<br> 1970, 00:00:00, and several data pairs composed of <code>measurement_id</code> and corresponding <code>value</code>. All data pairs in one<br> line belong to this <code>device_id</code> and have the same timestamp. If one of the <code>measurements</code> does not have a <code>value</code><br> in the <code>timestamp</code>, use a space instead(Actually, TsFile does not store null values). Its format is shown as follow:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>device_id, timestamp, &lt;measurement_id, value&gt;...</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>An example is illustrated as follow. In this example, the data type of two measurements are <code>INT32</code>, <code>FLOAT</code> respectively.</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>device_1, 1490860659000, m1, 10, m2, 12.12</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="write-tsfile" tabindex="-1"><a class="header-anchor" href="#write-tsfile"><span>Write TsFile</span></a></h3><p>A TsFile is generated by the following three steps and the complete code is given in the section &quot;Example for writing TsFile&quot;.</p><ol><li><p>construct a <code>TsFileWriter</code> instance.</p><p>Here are the available constructors:</p><ul><li>Without pre-defined schema</li></ul><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">public</span><span style="color:#61AFEF;"> TsFileWriter</span><span style="color:#E06C75;">(</span><span style="color:#E5C07B;">File</span><span style="color:#E06C75;"> file) throws </span><span style="color:#E5C07B;">IOException</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>With pre-defined schema</li></ul><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">public</span><span style="color:#61AFEF;"> TsFileWriter</span><span style="color:#E06C75;">(</span><span style="color:#E5C07B;">File</span><span style="color:#E06C75;"> file</span><span style="color:#ABB2BF;">,</span><span style="color:#E5C07B;"> Schema</span><span style="color:#E06C75;"> schema) throws </span><span style="color:#E5C07B;">IOException</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>This one is for using the HDFS file system. <code>TsFileOutput</code> can be an instance of class <code>HDFSOutput</code>.</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">public</span><span style="color:#61AFEF;"> TsFileWriter</span><span style="color:#E06C75;">(</span><span style="color:#E5C07B;">TsFileOutput</span><span style="color:#E06C75;"> output</span><span style="color:#ABB2BF;">,</span><span style="color:#E5C07B;"> Schema</span><span style="color:#E06C75;"> schema) throws </span><span style="color:#E5C07B;">IOException</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>If you want to set some TSFile configuration on your own, you could use param <code>config</code>. For example:</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#E5C07B;">TSFileConfig</span><span style="color:#E06C75;"> conf </span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> TSFileConfig</span><span style="color:#E06C75;">()</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">conf</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">setTSFileStorageFs</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;HDFS&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">TsFileWriter</span><span style="color:#E06C75;"> tsFileWriter </span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> TsFileWriter</span><span style="color:#E06C75;">(file</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;"> schema</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;"> conf)</span><span style="color:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>In this example, data files will be stored in HDFS, instead of local file system. If you&#39;d like to store data files in local file system, you can use <code>conf.setTSFileStorageFs(&quot;LOCAL&quot;)</code>, which is also the default config.</p><p>You can also config the ip and rpc port of your HDFS by <code>config.setHdfsIp(...)</code> and <code>config.setHdfsPort(...)</code>. The default ip is <code>localhost</code> and default rpc port is <code>9000</code>.</p><p><strong>Parameters:</strong></p><ul><li><p>file : The TsFile to write</p></li><li><p>schema : The file schemas, will be introduced in next part.</p></li><li><p>config : The config of TsFile.</p></li></ul></li><li><p>add measurements</p><p>Or you can make an instance of class <code>Schema</code> first and pass this to the constructor of class <code>TsFileWriter</code></p><p>The class <code>Schema</code> contains a map whose key is the name of one measurement schema, and the value is the schema itself.</p><p>Here are the interfaces:</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// Create an empty Schema or from an existing map</span></span>
<span class="line"><span style="color:#C678DD;">public</span><span style="color:#61AFEF;"> Schema</span><span style="color:#E06C75;">()</span></span>
<span class="line"><span style="color:#C678DD;">public</span><span style="color:#61AFEF;"> Schema</span><span style="color:#E06C75;">(</span><span style="color:#E5C07B;">Map</span><span style="color:#56B6C2;">&lt;</span><span style="color:#E06C75;">String</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;"> MeasurementSchema</span><span style="color:#56B6C2;">&gt;</span><span style="color:#E06C75;"> measurements)</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// Use this two interfaces to add measurements</span></span>
<span class="line"><span style="color:#C678DD;">public</span><span style="color:#C678DD;"> void</span><span style="color:#61AFEF;"> registerMeasurement</span><span style="color:#E06C75;">(</span><span style="color:#E5C07B;">MeasurementSchema</span><span style="color:#E06C75;"> descriptor)</span></span>
<span class="line"><span style="color:#C678DD;">public</span><span style="color:#C678DD;"> void</span><span style="color:#61AFEF;"> registerMeasurements</span><span style="color:#E06C75;">(</span><span style="color:#E5C07B;">Map</span><span style="color:#56B6C2;">&lt;</span><span style="color:#E06C75;">String</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;"> MeasurementSchema</span><span style="color:#56B6C2;">&gt;</span><span style="color:#E06C75;"> measurements)</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// Some useful getter and checker</span></span>
<span class="line"><span style="color:#C678DD;">public</span><span style="color:#E5C07B;"> TSDataType</span><span style="color:#61AFEF;"> getMeasurementDataType</span><span style="color:#E06C75;">(</span><span style="color:#E5C07B;">String</span><span style="color:#E06C75;"> measurementId)</span></span>
<span class="line"><span style="color:#C678DD;">public</span><span style="color:#E5C07B;"> MeasurementSchema</span><span style="color:#61AFEF;"> getMeasurementSchema</span><span style="color:#E06C75;">(</span><span style="color:#E5C07B;">String</span><span style="color:#E06C75;"> measurementId)</span></span>
<span class="line"><span style="color:#C678DD;">public</span><span style="color:#E5C07B;"> Map</span><span style="color:#56B6C2;">&lt;</span><span style="color:#E06C75;">String</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;"> MeasurementSchema</span><span style="color:#56B6C2;">&gt;</span><span style="color:#61AFEF;"> getAllMeasurementSchema</span><span style="color:#E06C75;">()</span></span>
<span class="line"><span style="color:#C678DD;">public</span><span style="color:#C678DD;"> boolean</span><span style="color:#61AFEF;"> hasMeasurement</span><span style="color:#E06C75;">(</span><span style="color:#E5C07B;">String</span><span style="color:#E06C75;"> measurementId)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>You can always use the following interface in <code>TsFileWriter</code> class to add additional measurements:</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">public</span><span style="color:#C678DD;"> void</span><span style="color:#61AFEF;"> addMeasurement</span><span style="color:#E06C75;">(</span><span style="color:#E5C07B;">MeasurementSchema</span><span style="color:#E06C75;"> measurementSchema) throws </span><span style="color:#E5C07B;">WriteProcessException</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>The class <code>MeasurementSchema</code> contains the information of one measurement, there are several constructors:</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">public</span><span style="color:#61AFEF;"> MeasurementSchema</span><span style="color:#E06C75;">(</span><span style="color:#E5C07B;">String</span><span style="color:#E06C75;"> measurementId</span><span style="color:#ABB2BF;">,</span><span style="color:#E5C07B;"> TSDataType</span><span style="color:#E06C75;"> type</span><span style="color:#ABB2BF;">,</span><span style="color:#E5C07B;"> TSEncoding</span><span style="color:#E06C75;"> encoding)</span></span>
<span class="line"><span style="color:#C678DD;">public</span><span style="color:#61AFEF;"> MeasurementSchema</span><span style="color:#E06C75;">(</span><span style="color:#E5C07B;">String</span><span style="color:#E06C75;"> measurementId</span><span style="color:#ABB2BF;">,</span><span style="color:#E5C07B;"> TSDataType</span><span style="color:#E06C75;"> type</span><span style="color:#ABB2BF;">,</span><span style="color:#E5C07B;"> TSEncoding</span><span style="color:#E06C75;"> encoding</span><span style="color:#ABB2BF;">,</span><span style="color:#E5C07B;"> CompressionType</span><span style="color:#E06C75;"> compressionType)</span></span>
<span class="line"><span style="color:#C678DD;">public</span><span style="color:#61AFEF;"> MeasurementSchema</span><span style="color:#E06C75;">(</span><span style="color:#E5C07B;">String</span><span style="color:#E06C75;"> measurementId</span><span style="color:#ABB2BF;">,</span><span style="color:#E5C07B;"> TSDataType</span><span style="color:#E06C75;"> type</span><span style="color:#ABB2BF;">,</span><span style="color:#E5C07B;"> TSEncoding</span><span style="color:#E06C75;"> encoding</span><span style="color:#ABB2BF;">,</span><span style="color:#E5C07B;"> CompressionType</span><span style="color:#E06C75;"> compressionType</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;"> </span></span>
<span class="line"><span style="color:#E5C07B;">Map</span><span style="color:#56B6C2;">&lt;</span><span style="color:#E06C75;">String</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;"> String</span><span style="color:#56B6C2;">&gt;</span><span style="color:#E06C75;"> props)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Parameters:</strong><br> ​</p><ul><li><p>measurementID: The name of this measurement, typically the name of the sensor.</p></li><li><p>type: The data type, now support six types: <code>BOOLEAN</code>, <code>INT32</code>, <code>INT64</code>, <code>FLOAT</code>, <code>DOUBLE</code>, <code>TEXT</code>;</p></li><li><p>encoding: The data encoding.</p></li><li><p>compression: The data compression.</p></li><li><p>props: Properties for special data types.Such as <code>max_point_number</code> for <code>FLOAT</code> and <code>DOUBLE</code>, <code>max_string_length</code> for<br><code>TEXT</code>. Use as string pairs into a map such as (&quot;max_point_number&quot;, &quot;3&quot;).</p></li></ul><blockquote><p><strong>Notice:</strong> Although one measurement name can be used in multiple deltaObjects, the properties cannot be changed. I.e.<br> it&#39;s not allowed to add one measurement name for multiple times with different type or encoding.<br> Here is a bad example:</p></blockquote><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// The measurement &quot;sensor_1&quot; is float type</span></span>
<span class="line"><span style="color:#61AFEF;">addMeasurement</span><span style="color:#E06C75;">(</span><span style="color:#C678DD;">new</span><span style="color:#61AFEF;"> MeasurementSchema</span><span style="color:#E06C75;">(</span><span style="color:#98C379;">&quot;sensor_1&quot;</span><span style="color:#ABB2BF;">,</span><span style="color:#E5C07B;"> TSDataType</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">FLOAT</span><span style="color:#ABB2BF;">,</span><span style="color:#E5C07B;"> TSEncoding</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">RLE</span><span style="color:#E06C75;">))</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// This call will throw a WriteProcessException exception</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><p>addMeasurement(new MeasurementSchema(&quot;sensor_1&quot;, TSDataType.INT32, TSEncoding.RLE));</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span></span></span>
<span class="line"><span>3. insert and write data continually.</span></span>
<span class="line"><span></span></span>
<span class="line"><span>  Use this interface to create a new \`TSRecord\`(a timestamp and device pair).</span></span>
<span class="line"><span>  </span></span>
<span class="line"><span>  \`\`\`java</span></span>
<span class="line"><span>  public TSRecord(long timestamp, String deviceId)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>  Then create a \`DataPoint\`(a measurement and value pair), and use the addTuple method to add the DataPoint to the correct</span></span>
<span class="line"><span>  TsRecord.</span></span>
<span class="line"><span>  </span></span>
<span class="line"><span>  Use this method to write</span></span>
<span class="line"><span>  </span></span>
<span class="line"><span>  \`\`\`java</span></span>
<span class="line"><span>  public void write(TSRecord record) throws IOException, WriteProcessException</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li><p>call <code>close</code> to finish this writing process.</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">public</span><span style="color:#C678DD;"> void</span><span style="color:#61AFEF;"> close</span><span style="color:#E06C75;">() throws </span><span style="color:#E5C07B;">IOException</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ol><p>We are also able to write data into a closed TsFile.</p><ol><li><p>Use <code>ForceAppendTsFileWriter</code> to open a closed file.</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">public</span><span style="color:#61AFEF;"> ForceAppendTsFileWriter</span><span style="color:#E06C75;">(</span><span style="color:#E5C07B;">File</span><span style="color:#E06C75;"> file) throws </span><span style="color:#E5C07B;">IOException</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>call <code>doTruncate</code> truncate the part of Metadata</p></li><li><p>Then use <code>ForceAppendTsFileWriter</code> to construct a new <code>TsFileWriter</code></p></li></ol><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">public</span><span style="color:#61AFEF;"> TsFileWriter</span><span style="color:#E06C75;">(</span><span style="color:#E5C07B;">TsFileIOWriter</span><span style="color:#E06C75;"> fileWriter) throws </span><span style="color:#E5C07B;">IOException</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Please note, we should redo the step of adding measurements before writing new data to the TsFile.</p><h3 id="example-for-writing-a-tsfile" tabindex="-1"><a class="header-anchor" href="#example-for-writing-a-tsfile"><span>Example for writing a TsFile</span></a></h3><p>You should install TsFile to your local maven repository.</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#61AFEF;">mvn</span><span style="color:#98C379;"> clean</span><span style="color:#98C379;"> install</span><span style="color:#D19A66;"> -pl</span><span style="color:#98C379;"> iotdb-core/tsfile</span><span style="color:#D19A66;"> -am</span><span style="color:#D19A66;"> -DskipTests</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>You could write a TsFile by constructing <strong>TSRecord</strong> if you have the <strong>non-aligned</strong> (e.g. not all sensors contain values) time series data.</p><p>A more thorough example can be found at <code>/example/tsfile/src/main/java/org/apache/iotdb/tsfile/TsFileWriteWithTSRecord.java</code></p><p>You could write a TsFile by constructing <strong>Tablet</strong> if you have the <strong>aligned</strong> time series data.</p><p>A more thorough example can be found at <code>/example/tsfile/src/main/java/org/apache/iotdb/tsfile/TsFileWriteWithTablet.java</code></p><p>You could write data into a closed TsFile by using <strong>ForceAppendTsFileWriter</strong>.</p><p>A more thorough example can be found at <code>/example/tsfile/src/main/java/org/apache/iotdb/tsfile/TsFileForceAppendWrite.java</code></p><h3 id="interface-for-reading-tsfile" tabindex="-1"><a class="header-anchor" href="#interface-for-reading-tsfile"><span>Interface for Reading TsFile</span></a></h3><ul><li>Definition of Path</li></ul><p>A path is a dot-separated string which uniquely identifies a time-series in TsFile, e.g., &quot;root.area_1.device_1.sensor_1&quot;.<br> The last section &quot;sensor_1&quot; is called &quot;measurementId&quot; while the remaining parts &quot;root.area_1.device_1&quot; is called deviceId.<br> As mentioned above, the same measurement in different devices has the same data type and encoding, and devices are also unique.</p><p>In read interfaces, The parameter <code>paths</code> indicates the measurements to be selected.</p><p>Path instance can be easily constructed through the class <code>Path</code>. For example:</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#E5C07B;">Path</span><span style="color:#E06C75;"> p </span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> Path</span><span style="color:#E06C75;">(</span><span style="color:#98C379;">&quot;device_1.sensor_1&quot;</span><span style="color:#E06C75;">)</span><span style="color:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>We will pass an ArrayList of paths for final query call to support multiple paths.</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#E5C07B;">List</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">Path</span><span style="color:#ABB2BF;">&gt;</span><span style="color:#E06C75;"> paths </span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;"> new</span><span style="color:#E5C07B;"> ArrayList</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">Path</span><span style="color:#ABB2BF;">&gt;</span><span style="color:#E06C75;">()</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">paths</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">add</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">new</span><span style="color:#61AFEF;"> Path</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;device_1.sensor_1&quot;</span><span style="color:#ABB2BF;">));</span></span>
<span class="line"><span style="color:#E5C07B;">paths</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">add</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">new</span><span style="color:#61AFEF;"> Path</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;device_1.sensor_3&quot;</span><span style="color:#ABB2BF;">));</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><strong>Notice:</strong> When constructing a Path, the format of the parameter should be a dot-separated string, the last part will<br> be recognized as measurementId while the remaining parts will be recognized as deviceId.</p></blockquote><ul><li><p>Definition of Filter</p></li><li><p>Usage Scenario<br> Filter is used in TsFile reading process to select data satisfying one or more given condition(s).</p></li><li><p>IExpression<br> The <code>IExpression</code> is a filter expression interface and it will be passed to our final query call.<br> We create one or more filter expressions and may use binary filter operators to link them to our final expression.</p></li><li><p><strong>Create a Filter Expression</strong></p><p>There are two types of filters.</p><ul><li><p>TimeFilter: A filter for <code>time</code> in time-series data.</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>IExpression timeFilterExpr = new GlobalTimeExpression(TimeFilter);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Use the following relationships to get a <code>TimeFilter</code> object (value is a long int variable).</p><table><thead><tr><th>Relationship</th><th>Description</th></tr></thead><tbody><tr><td>TimeFilter.eq(value)</td><td>Choose the time equal to the value</td></tr><tr><td><a href="http://TimeFilter.lt" target="_blank" rel="noopener noreferrer">TimeFilter.lt</a>(value)</td><td>Choose the time less than the value</td></tr><tr><td><a href="http://TimeFilter.gt" target="_blank" rel="noopener noreferrer">TimeFilter.gt</a>(value)</td><td>Choose the time greater than the value</td></tr><tr><td>TimeFilter.ltEq(value)</td><td>Choose the time less than or equal to the value</td></tr><tr><td>TimeFilter.gtEq(value)</td><td>Choose the time greater than or equal to the value</td></tr><tr><td>TimeFilter.notEq(value)</td><td>Choose the time not equal to the value</td></tr><tr><td>TimeFilter.not(TimeFilter)</td><td>Choose the time not satisfy another TimeFilter</td></tr></tbody></table></li><li><p>ValueFilter: A filter for <code>value</code> in time-series data.</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>IExpression valueFilterExpr = new SingleSeriesExpression(Path, ValueFilter);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>The usage of <code>ValueFilter</code> is the same as using <code>TimeFilter</code>, just to make sure that the type of the value<br> equal to the measurement&#39;s(defined in the path).</p></li></ul></li><li><p><strong>Binary Filter Operators</strong></p><p>Binary filter operators can be used to link two single expressions.</p><ul><li>BinaryExpression.and(Expression, Expression): Choose the value satisfy for both expressions.</li><li>BinaryExpression.or(Expression, Expression): Choose the value satisfy for at least one expression.</li></ul></li></ul><p>Filter Expression Examples</p><ul><li><p><strong>TimeFilterExpression Examples</strong></p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#E5C07B;">IExpression</span><span style="color:#E06C75;"> timeFilterExpr </span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> GlobalTimeExpression</span><span style="color:#E06C75;">(</span><span style="color:#E5C07B;">TimeFilter</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">eq</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">15</span><span style="color:#ABB2BF;">)</span><span style="color:#E06C75;">)</span><span style="color:#ABB2BF;">;</span><span style="color:#7F848E;font-style:italic;"> // series time = 15</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>    \`\`\`java</span></span>
<span class="line"><span>    IExpression timeFilterExpr = new GlobalTimeExpression(TimeFilter.ltEq(15)); // series time &lt;= 15</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#E5C07B;">    IExpression</span><span style="color:#E06C75;"> timeFilterExpr </span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> GlobalTimeExpression</span><span style="color:#E06C75;">(</span><span style="color:#E5C07B;">TimeFilter</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">lt</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">15</span><span style="color:#ABB2BF;">)</span><span style="color:#E06C75;">)</span><span style="color:#ABB2BF;">;</span><span style="color:#7F848E;font-style:italic;"> // series time &lt; 15</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><pre><code>\`\`\`java
</code></pre><p>IExpression timeFilterExpr = new GlobalTimeExpression(TimeFilter.gtEq(15)); // series time &gt;= 15<br><code></code>java<br> IExpression timeFilterExpr = new GlobalTimeExpression(TimeFilter.notEq(15)); // series time != 15</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>    \`\`\`java</span></span>
<span class="line"><span>    IExpression timeFilterExpr = BinaryExpression.and(</span></span>
<span class="line"><span>        new GlobalTimeExpression(TimeFilter.gtEq(15L)),</span></span>
<span class="line"><span>    new GlobalTimeExpression(TimeFilter.lt(25L))); // 15 &lt;= series time &lt; 25</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><pre><code>\`\`\`java
IExpression timeFilterExpr = BinaryExpression.or(
    new GlobalTimeExpression(TimeFilter.gtEq(15L)),
    new GlobalTimeExpression(TimeFilter.lt(25L))); // series time &gt;= 15 or series time &lt; 25
\`\`\`
</code></pre><ul><li>Read Interface</li></ul><p>First, we open the TsFile and get a <code>ReadOnlyTsFile</code> instance from a file path string <code>path</code>.</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#E5C07B;">TsFileSequenceReader</span><span style="color:#E06C75;"> reader </span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> TsFileSequenceReader</span><span style="color:#E06C75;">(path)</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">   </span></span>
<span class="line"><span style="color:#E5C07B;">ReadOnlyTsFile</span><span style="color:#E06C75;"> readTsFile </span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> ReadOnlyTsFile</span><span style="color:#E06C75;">(reader)</span><span style="color:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Next, we prepare the path array and query expression, then get final <code>QueryExpression</code> object by this interface:</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#E5C07B;">QueryExpression</span><span style="color:#E06C75;"> queryExpression </span><span style="color:#56B6C2;">=</span><span style="color:#E5C07B;"> QueryExpression</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">create</span><span style="color:#ABB2BF;">(paths, statement);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>The ReadOnlyTsFile class has two <code>query</code> method to perform a query.</p><ul><li><p><strong>Method 1</strong></p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">public</span><span style="color:#E5C07B;"> QueryDataSet</span><span style="color:#61AFEF;"> query</span><span style="color:#E06C75;">(</span><span style="color:#E5C07B;">QueryExpression</span><span style="color:#E06C75;"> queryExpression) throws </span><span style="color:#E5C07B;">IOException</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p><strong>Method 2</strong></p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">public</span><span style="color:#E5C07B;"> QueryDataSet</span><span style="color:#61AFEF;"> query</span><span style="color:#E06C75;">(</span><span style="color:#E5C07B;">QueryExpression</span><span style="color:#E06C75;"> queryExpression</span><span style="color:#ABB2BF;">,</span><span style="color:#C678DD;"> long</span><span style="color:#E06C75;"> partitionStartOffset</span><span style="color:#ABB2BF;">,</span><span style="color:#C678DD;"> long</span><span style="color:#E06C75;"> partitionEndOffset) throws </span><span style="color:#E5C07B;">IOException</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>This method is designed for advanced applications such as the TsFile-Spark Connector.</p><ul><li><p><strong>params</strong> : For method 2, two additional parameters are added to support partial query:</p><ul><li><code>partitionStartOffset</code>: start offset for a TsFile</li><li><code>partitionEndOffset</code>: end offset for a TsFile</li></ul><blockquote><p><strong>What is Partial Query ?</strong></p><p>In some distributed file systems(e.g. HDFS), a file is split into severval parts which are called &quot;Blocks&quot; and stored in different nodes. Executing a query paralleled in each nodes involved makes better efficiency. Thus Partial Query is needed. Paritial Query only selects the results stored in the part split by <code>QueryConstant.PARTITION_START_OFFSET</code> and <code>QueryConstant.PARTITION_END_OFFSET</code> for a TsFile.</p></blockquote></li></ul></li><li><p>QueryDataset Interface</p></li></ul><p>The query performed above will return a <code>QueryDataset</code> object.</p><p>Here&#39;s the useful interfaces for user.</p><ul><li><p><code>bool hasNext();</code></p><p>Return true if this dataset still has elements.</p></li><li><p><code>List&lt;Path&gt; getPaths()</code></p><p>Get the paths in this data set.</p></li><li><p><code>List&lt;TSDataType&gt; getDataTypes();</code></p></li></ul><p>Get the data types. The class TSDataType is an enum class, the value will be one of the following:</p><pre><code>   BOOLEAN,
   INT32,
   INT64,
   FLOAT,
   DOUBLE,
   TEXT;
</code></pre><ul><li><p><code>RowRecord next() throws IOException;</code></p><p>Get the next record.</p><p>The class <code>RowRecord</code> consists of a <code>long</code> timestamp and a <code>List&lt;Field&gt;</code> for data in different sensors,<br> we can use two getter methods to get them.</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">long</span><span style="color:#61AFEF;"> getTimestamp</span><span style="color:#E06C75;">()</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">List</span><span style="color:#56B6C2;">&lt;</span><span style="color:#E06C75;">Field</span><span style="color:#56B6C2;">&gt;</span><span style="color:#61AFEF;"> getFields</span><span style="color:#E06C75;">()</span><span style="color:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>To get data from one Field, use these methods:</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#E5C07B;">TSDataType</span><span style="color:#61AFEF;"> getDataType</span><span style="color:#E06C75;">()</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">Object</span><span style="color:#61AFEF;"> getObjectValue</span><span style="color:#E06C75;">()</span><span style="color:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="example-for-reading-an-existing-tsfile" tabindex="-1"><a class="header-anchor" href="#example-for-reading-an-existing-tsfile"><span>Example for reading an existing TsFile</span></a></h3><p>You should install TsFile to your local maven repository.</p><p>A more thorough example with query statement can be found at<br><code>/tsfile/example/src/main/java/org/apache/iotdb/tsfile/TsFileRead.java</code></p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">package</span><span style="color:#C678DD;"> org.apache.iotdb.tsfile</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E5C07B;"> java.io.IOException</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E5C07B;"> java.util.ArrayList</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E5C07B;"> org.apache.iotdb.tsfile.read.ReadOnlyTsFile</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E5C07B;"> org.apache.iotdb.tsfile.read.TsFileSequenceReader</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E5C07B;"> org.apache.iotdb.tsfile.read.common.Path</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E5C07B;"> org.apache.iotdb.tsfile.read.expression.IExpression</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E5C07B;"> org.apache.iotdb.tsfile.read.expression.QueryExpression</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E5C07B;"> org.apache.iotdb.tsfile.read.expression.impl.BinaryExpression</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E5C07B;"> org.apache.iotdb.tsfile.read.expression.impl.GlobalTimeExpression</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E5C07B;"> org.apache.iotdb.tsfile.read.expression.impl.SingleSeriesExpression</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E5C07B;"> org.apache.iotdb.tsfile.read.filter.TimeFilter</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E5C07B;"> org.apache.iotdb.tsfile.read.filter.ValueFilter</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E5C07B;"> org.apache.iotdb.tsfile.read.query.dataset.QueryDataSet</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * The class is to show how to read TsFile file named &quot;test.tsfile&quot;.</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * The TsFile file &quot;test.tsfile&quot; is generated from class TsFileWrite.</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * Run TsFileWrite to generate the test.tsfile first</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> */</span></span>
<span class="line"><span style="color:#C678DD;">public</span><span style="color:#C678DD;"> class</span><span style="color:#E5C07B;"> TsFileRead</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">  private</span><span style="color:#C678DD;"> static</span><span style="color:#C678DD;"> void</span><span style="color:#61AFEF;"> queryAndPrint</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">ArrayList</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">Path</span><span style="color:#ABB2BF;">&gt; </span><span style="color:#E06C75;font-style:italic;">paths</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">ReadOnlyTsFile</span><span style="color:#E06C75;font-style:italic;"> readTsFile</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">IExpression</span><span style="color:#E06C75;font-style:italic;"> statement</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#C678DD;">          throws</span><span style="color:#E5C07B;"> IOException</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">    QueryExpression</span><span style="color:#E06C75;"> queryExpression</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> QueryExpression</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">create</span><span style="color:#ABB2BF;">(paths, statement);</span></span>
<span class="line"><span style="color:#E5C07B;">    QueryDataSet</span><span style="color:#E06C75;"> queryDataSet</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> readTsFile</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">query</span><span style="color:#ABB2BF;">(queryExpression);</span></span>
<span class="line"><span style="color:#C678DD;">    while</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">queryDataSet</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">hasNext</span><span style="color:#ABB2BF;">()) {</span></span>
<span class="line"><span style="color:#E5C07B;">      System</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">out</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">println</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">queryDataSet</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">next</span><span style="color:#ABB2BF;">());</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#E5C07B;">    System</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">out</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">println</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;------------&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">  public</span><span style="color:#C678DD;"> static</span><span style="color:#C678DD;"> void</span><span style="color:#61AFEF;"> main</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">String</span><span style="color:#ABB2BF;">[] </span><span style="color:#E06C75;font-style:italic;">args</span><span style="color:#ABB2BF;">)</span><span style="color:#C678DD;"> throws</span><span style="color:#E5C07B;"> IOException</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // file path</span></span>
<span class="line"><span style="color:#E5C07B;">    String</span><span style="color:#E06C75;"> path</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &quot;test.tsfile&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // create reader and get the readTsFile interface</span></span>
<span class="line"><span style="color:#E5C07B;">    TsFileSequenceReader</span><span style="color:#E06C75;"> reader</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> TsFileSequenceReader</span><span style="color:#ABB2BF;">(path);</span></span>
<span class="line"><span style="color:#E5C07B;">    ReadOnlyTsFile</span><span style="color:#E06C75;"> readTsFile</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> ReadOnlyTsFile</span><span style="color:#ABB2BF;">(reader);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // use these paths(all sensors) for all the queries</span></span>
<span class="line"><span style="color:#E5C07B;">    ArrayList</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">Path</span><span style="color:#ABB2BF;">&gt; </span><span style="color:#E06C75;">paths</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#E5C07B;"> ArrayList</span><span style="color:#ABB2BF;">&lt;&gt;();</span></span>
<span class="line"><span style="color:#E5C07B;">    paths</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">add</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">new</span><span style="color:#61AFEF;"> Path</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;device_1.sensor_1&quot;</span><span style="color:#ABB2BF;">));</span></span>
<span class="line"><span style="color:#E5C07B;">    paths</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">add</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">new</span><span style="color:#61AFEF;"> Path</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;device_1.sensor_2&quot;</span><span style="color:#ABB2BF;">));</span></span>
<span class="line"><span style="color:#E5C07B;">    paths</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">add</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">new</span><span style="color:#61AFEF;"> Path</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;device_1.sensor_3&quot;</span><span style="color:#ABB2BF;">));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // no query statement</span></span>
<span class="line"><span style="color:#61AFEF;">    queryAndPrint</span><span style="color:#ABB2BF;">(paths, readTsFile, </span><span style="color:#D19A66;">null</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    //close the reader when you left</span></span>
<span class="line"><span style="color:#E5C07B;">    reader</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">close</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="change-tsfile-configuration" tabindex="-1"><a class="header-anchor" href="#change-tsfile-configuration"><span>Change TsFile Configuration</span></a></h2><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#E5C07B;">TSFileConfig</span><span style="color:#E06C75;"> config </span><span style="color:#56B6C2;">=</span><span style="color:#E5C07B;"> TSFileDescriptor</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getInstance</span><span style="color:#ABB2BF;">().</span><span style="color:#61AFEF;">getConfig</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E5C07B;">config</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">setXXX</span><span style="color:#ABB2BF;">();</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div>`,75)]))}const r=e(o,[["render",t],["__file","Programming-TsFile-API.html.vue"]]),c=JSON.parse('{"path":"/UserGuide/V1.2.x/API/Programming-TsFile-API.html","title":"TsFile API","lang":"en-US","frontmatter":{"description":"TsFile API TsFile is a file format of Time Series used in IoTDB. This session introduces the usage of this file format. TsFile library Installation There are two ways to use TsF...","head":[["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://iotdb.apache.org/zh/UserGuide/V1.2.x/API/Programming-TsFile-API.html"}],["meta",{"property":"og:url","content":"https://iotdb.apache.org/UserGuide/V1.2.x/API/Programming-TsFile-API.html"}],["meta",{"property":"og:site_name","content":"IoTDB Website"}],["meta",{"property":"og:title","content":"TsFile API"}],["meta",{"property":"og:description","content":"TsFile API TsFile is a file format of Time Series used in IoTDB. This session introduces the usage of this file format. TsFile library Installation There are two ways to use TsF..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-08-01T06:02:08.000Z"}],["meta",{"property":"article:modified_time","content":"2023-08-01T06:02:08.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"TsFile API\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-08-01T06:02:08.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"TsFile library Installation","slug":"tsfile-library-installation","link":"#tsfile-library-installation","children":[]},{"level":2,"title":"TsFile Usage","slug":"tsfile-usage","link":"#tsfile-usage","children":[{"level":3,"title":"Write TsFile","slug":"write-tsfile","link":"#write-tsfile","children":[]},{"level":3,"title":"Example for writing a TsFile","slug":"example-for-writing-a-tsfile","link":"#example-for-writing-a-tsfile","children":[]},{"level":3,"title":"Interface for Reading TsFile","slug":"interface-for-reading-tsfile","link":"#interface-for-reading-tsfile","children":[]},{"level":3,"title":"Example for reading an existing TsFile","slug":"example-for-reading-an-existing-tsfile","link":"#example-for-reading-an-existing-tsfile","children":[]}]},{"level":2,"title":"Change TsFile Configuration","slug":"change-tsfile-configuration","link":"#change-tsfile-configuration","children":[]}],"git":{"createdTime":1688958677000,"updatedTime":1690869728000,"contributors":[{"name":"Lei","username":"Lei","email":"33376433+LeiRui@users.noreply.github.com","commits":1,"url":"https://github.com/Lei"},{"name":"CritasWang","username":"CritasWang","email":"critas@outlook.com","commits":1,"url":"https://github.com/CritasWang"}]},"readingTime":{"minutes":7.94,"words":2382},"filePathRelative":"UserGuide/V1.2.x/API/Programming-TsFile-API.md","localizedDate":"July 10, 2023","autoDesc":true}');export{r as comp,c as data};
