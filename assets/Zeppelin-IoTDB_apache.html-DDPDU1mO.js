import{_ as p,c as t,b as n,d as a,e,a as o,f as r,r as i,o as c}from"./app-CBPT9zqK.js";const d={};function B(y,s){const l=i("RouteLink");return c(),t("div",null,[s[5]||(s[5]=n('<h1 id="apache-zeppelin" tabindex="-1"><a class="header-anchor" href="#apache-zeppelin"><span>Apache Zeppelin</span></a></h1><h2 id="zeppelin-简介" tabindex="-1"><a class="header-anchor" href="#zeppelin-简介"><span>Zeppelin 简介</span></a></h2><p>Apache Zeppelin 是一个基于网页的交互式数据分析系统。用户可以通过 Zeppelin 连接数据源并使用 SQL、Scala 等进行交互式操作。操作可以保存为文档（类似于 Jupyter）。Zeppelin 支持多种数据源，包括 Spark、ElasticSearch、Cassandra 和 InfluxDB 等等。现在，IoTDB 已经支持使用 Zeppelin 进行操作。样例如下：</p><figure><img src="https://alioss.timecho.com/docs/img/github/102752947-520a3e80-43a5-11eb-8fb1-8fac471c8c7e.png" alt="iotdb-note-snapshot" tabindex="0" loading="lazy"><figcaption>iotdb-note-snapshot</figcaption></figure><h2 id="zeppelin-iotdb-解释器" tabindex="-1"><a class="header-anchor" href="#zeppelin-iotdb-解释器"><span>Zeppelin-IoTDB 解释器</span></a></h2><h3 id="系统环境需求" tabindex="-1"><a class="header-anchor" href="#系统环境需求"><span>系统环境需求</span></a></h3><table><thead><tr><th style="text-align:center;">IoTDB 版本</th><th style="text-align:center;">Java 版本</th><th style="text-align:center;">Zeppelin 版本</th></tr></thead><tbody><tr><td style="text-align:center;">&gt;=<code>0.12.0</code></td><td style="text-align:center;">&gt;=<code>1.8.0_271</code></td><td style="text-align:center;"><code>&gt;=0.9.0</code></td></tr></tbody></table>',7)),a("p",null,[s[1]||(s[1]=e("安装 IoTDB：参考 ")),o(l,{to:"/zh/UserGuide/V1.3.0-2/Deployment-and-Maintenance/Stand-Alone-Deployment_apache.html"},{default:r(()=>s[0]||(s[0]=[e("快速上手")])),_:1}),s[2]||(s[2]=e(". 假设 IoTDB 安装在 ")),s[3]||(s[3]=a("code",null,"$IoTDB_HOME",-1)),s[4]||(s[4]=e("."))]),s[6]||(s[6]=n(`<p>安装 Zeppelin：</p><blockquote><p>方法 1 直接下载：下载 <a href="https://zeppelin.apache.org/download.html#" target="_blank" rel="noopener noreferrer">Zeppelin</a> 并解压二进制文件。推荐下载 <a href="http://www.apache.org/dyn/closer.cgi/zeppelin/zeppelin-0.9.0/zeppelin-0.9.0-bin-netinst.tgz" target="_blank" rel="noopener noreferrer">netinst</a> 二进制包，此包由于未编译不相关的 interpreter，因此大小相对较小。</p><p>方法 2 源码编译：参考 <a href="https://zeppelin.apache.org/docs/latest/setup/basics/how_to_build.html" target="_blank" rel="noopener noreferrer">从源码构建 Zeppelin</a> ，使用命令为 <code>mvn clean package -pl zeppelin-web,zeppelin-server -am -DskipTests</code>。</p></blockquote><p>假设 Zeppelin 安装在 <code>$Zeppelin_HOME</code>.</p><h3 id="编译解释器" tabindex="-1"><a class="header-anchor" href="#编译解释器"><span>编译解释器</span></a></h3><p>运行如下命令编译 IoTDB Zeppelin 解释器。</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#56B6C2;">cd</span><span style="color:#E06C75;"> $IoTDB_HOME</span></span>
<span class="line"><span style="color:#61AFEF;"> mvn</span><span style="color:#98C379;"> clean</span><span style="color:#98C379;"> package</span><span style="color:#D19A66;"> -pl</span><span style="color:#98C379;"> iotdb-connector/zeppelin-interpreter</span><span style="color:#D19A66;"> -am</span><span style="color:#D19A66;"> -DskipTests</span><span style="color:#D19A66;"> -P</span><span style="color:#98C379;"> get-jar-with-dependencies</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>编译后的解释器位于如下目录：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#E06C75;">$IoTDB_HOME</span><span style="color:#ABB2BF;">/zeppelin-interpreter/target/zeppelin-{</span><span style="color:#61AFEF;">version}-SNAPSHOT-jar-with-dependencies.jar</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="安装解释器" tabindex="-1"><a class="header-anchor" href="#安装解释器"><span>安装解释器</span></a></h3><p>当你编译好了解释器，在 Zeppelin 的解释器目录下创建一个新的文件夹<code>iotdb</code>，并将 IoTDB 解释器放入其中。</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#56B6C2;">cd</span><span style="color:#E06C75;"> $IoTDB_HOME</span></span>
<span class="line"><span style="color:#61AFEF;">mkdir</span><span style="color:#D19A66;"> -p</span><span style="color:#E06C75;"> $Zeppelin_HOME</span><span style="color:#98C379;">/interpreter/iotdb</span></span>
<span class="line"><span style="color:#61AFEF;">cp</span><span style="color:#E06C75;"> $IoTDB_HOME</span><span style="color:#98C379;">/zeppelin-interpreter/target/zeppelin-{version}-SNAPSHOT-jar-with-dependencies.jar</span><span style="color:#E06C75;"> $Zeppelin_HOME</span><span style="color:#98C379;">/interpreter/iotdb</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="修改-zeppelin-配置" tabindex="-1"><a class="header-anchor" href="#修改-zeppelin-配置"><span>修改 Zeppelin 配置</span></a></h3><p>进入 <code>$Zeppelin_HOME/conf</code>，使用 template 创建 Zeppelin 配置文件：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#61AFEF;">cp</span><span style="color:#98C379;"> zeppelin-site.xml.template</span><span style="color:#98C379;"> zeppelin-site.xml</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>打开 zeppelin-site.xml 文件，将 <code>zeppelin.server.addr</code> 项修改为 <code>0.0.0.0</code></p><h3 id="启动-zeppelin-和-iotdb" tabindex="-1"><a class="header-anchor" href="#启动-zeppelin-和-iotdb"><span>启动 Zeppelin 和 IoTDB</span></a></h3><p>进入 <code>$Zeppelin_HOME</code> 并运行 Zeppelin：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#7F848E;font-style:italic;"># Unix/OS X</span></span>
<span class="line"><span style="color:#ABB2BF;">&gt; ./bin/zeppelin-daemon.sh start</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># Windows</span></span>
<span class="line"><span style="color:#ABB2BF;">&gt; .</span><span style="color:#56B6C2;">\\b</span><span style="color:#ABB2BF;">in</span><span style="color:#56B6C2;">\\z</span><span style="color:#ABB2BF;">eppelin.cmd</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>进入 <code>$IoTDB_HOME</code> 并运行 IoTDB：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#7F848E;font-style:italic;"># Unix/OS X</span></span>
<span class="line"><span style="color:#ABB2BF;">&gt; nohup sbin/start-server.sh &gt;/dev/null 2&gt;&amp;1 &amp;</span></span>
<span class="line"><span style="color:#61AFEF;">or</span></span>
<span class="line"><span style="color:#ABB2BF;">&gt; nohup sbin/start-server.sh -c &lt;conf_path&gt; -rpc_port &lt;rpc_port&gt; &gt;/dev/null 2&gt;&amp;1 &amp;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># Windows</span></span>
<span class="line"><span style="color:#ABB2BF;">&gt; sbin</span><span style="color:#56B6C2;">\\s</span><span style="color:#ABB2BF;">tart-server.bat -c &lt;conf_path&gt; -rpc_port &lt;rpc_port&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="使用-zeppelin-iotdb-解释器" tabindex="-1"><a class="header-anchor" href="#使用-zeppelin-iotdb-解释器"><span>使用 Zeppelin-IoTDB 解释器</span></a></h2><p>当 Zeppelin 启动后，访问 <a href="http://127.0.0.1:8080/" target="_blank" rel="noopener noreferrer">http://127.0.0.1:8080/</a></p><p>通过如下步骤创建一个新的笔记本页面：</p><ol><li>点击 <code>Create new node</code> 按钮</li><li>设置笔记本名</li><li>选择解释器为 iotdb</li></ol><p>现在可以开始使用 Zeppelin 操作 IoTDB 了。</p><figure><img src="https://alioss.timecho.com/docs/img/github/102752945-5171a800-43a5-11eb-8614-53b3276a3ce2.png" alt="iotdb-create-note" tabindex="0" loading="lazy"><figcaption>iotdb-create-note</figcaption></figure><p>我们提供了一些简单的 SQL 来展示 Zeppelin-IoTDB 解释器的使用：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">CREATE</span><span style="color:#C678DD;"> DATABASE</span><span style="color:#61AFEF;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">ln</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">wf01</span><span style="color:#ABB2BF;">.wt01;</span></span>
<span class="line"><span style="color:#C678DD;">CREATE</span><span style="color:#ABB2BF;"> TIMESERIES </span><span style="color:#D19A66;">root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">ln</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">wf01</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">wt01</span><span style="color:#ABB2BF;">.</span><span style="color:#C678DD;">status</span><span style="color:#C678DD;"> WITH</span><span style="color:#ABB2BF;"> DATATYPE</span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;">BOOLEAN</span><span style="color:#ABB2BF;">, </span><span style="color:#C678DD;">ENCODING</span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;">PLAIN;</span></span>
<span class="line"><span style="color:#C678DD;">CREATE</span><span style="color:#ABB2BF;"> TIMESERIES </span><span style="color:#D19A66;">root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">ln</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">wf01</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">wt01</span><span style="color:#ABB2BF;">.temperature </span><span style="color:#C678DD;">WITH</span><span style="color:#ABB2BF;"> DATATYPE</span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;">FLOAT</span><span style="color:#ABB2BF;">, </span><span style="color:#C678DD;">ENCODING</span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;">PLAIN;</span></span>
<span class="line"><span style="color:#C678DD;">CREATE</span><span style="color:#ABB2BF;"> TIMESERIES </span><span style="color:#D19A66;">root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">ln</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">wf01</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">wt01</span><span style="color:#ABB2BF;">.hardware </span><span style="color:#C678DD;">WITH</span><span style="color:#ABB2BF;"> DATATYPE</span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;">INT32, </span><span style="color:#C678DD;">ENCODING</span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;">PLAIN;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">INSERT INTO</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">ln</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">wf01</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">wt01</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">timestamp</span><span style="color:#ABB2BF;">, temperature, </span><span style="color:#C678DD;">status</span><span style="color:#ABB2BF;">, hardware)</span></span>
<span class="line"><span style="color:#C678DD;">VALUES</span><span style="color:#ABB2BF;"> (</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">, false, </span><span style="color:#D19A66;">11</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">INSERT INTO</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">ln</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">wf01</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">wt01</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">timestamp</span><span style="color:#ABB2BF;">, temperature, </span><span style="color:#C678DD;">status</span><span style="color:#ABB2BF;">, hardware)</span></span>
<span class="line"><span style="color:#C678DD;">VALUES</span><span style="color:#ABB2BF;"> (</span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">, true, </span><span style="color:#D19A66;">22</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">INSERT INTO</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">ln</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">wf01</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">wt01</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">timestamp</span><span style="color:#ABB2BF;">, temperature, </span><span style="color:#C678DD;">status</span><span style="color:#ABB2BF;">, hardware)</span></span>
<span class="line"><span style="color:#C678DD;">VALUES</span><span style="color:#ABB2BF;"> (</span><span style="color:#D19A66;">3</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">3</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">3</span><span style="color:#ABB2BF;">, false, </span><span style="color:#D19A66;">33</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">INSERT INTO</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">ln</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">wf01</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">wt01</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">timestamp</span><span style="color:#ABB2BF;">, temperature, </span><span style="color:#C678DD;">status</span><span style="color:#ABB2BF;">, hardware)</span></span>
<span class="line"><span style="color:#C678DD;">VALUES</span><span style="color:#ABB2BF;"> (</span><span style="color:#D19A66;">4</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">4</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">4</span><span style="color:#ABB2BF;">, false, </span><span style="color:#D19A66;">44</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">INSERT INTO</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">ln</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">wf01</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">wt01</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">timestamp</span><span style="color:#ABB2BF;">, temperature, </span><span style="color:#C678DD;">status</span><span style="color:#ABB2BF;">, hardware)</span></span>
<span class="line"><span style="color:#C678DD;">VALUES</span><span style="color:#ABB2BF;"> (</span><span style="color:#D19A66;">5</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">5</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">5</span><span style="color:#ABB2BF;">, false, </span><span style="color:#D19A66;">55</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">SELECT</span><span style="color:#ABB2BF;"> *</span></span>
<span class="line"><span style="color:#C678DD;">FROM</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">ln</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">wf01</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">wt01</span></span>
<span class="line"><span style="color:#C678DD;">WHERE</span><span style="color:#C678DD;"> time</span><span style="color:#56B6C2;"> &gt;=</span><span style="color:#D19A66;"> 1</span></span>
<span class="line"><span style="color:#C678DD;">	AND</span><span style="color:#C678DD;"> time</span><span style="color:#56B6C2;"> &lt;=</span><span style="color:#D19A66;"> 6</span><span style="color:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>样例如下：</p><figure><img src="https://alioss.timecho.com/docs/img/github/102752948-52a2d500-43a5-11eb-9156-0c55667eb4cd.png" alt="iotdb-note-snapshot2" tabindex="0" loading="lazy"><figcaption>iotdb-note-snapshot2</figcaption></figure><p>用户也可以参考 <a href="https://zeppelin.apache.org/docs/0.9.0/usage/display_system/basic.html" target="_blank" rel="noopener noreferrer">[1]</a> 编写更丰富多彩的文档。</p><p>以上样例放置于 <code>$IoTDB_HOME/zeppelin-interpreter/Zeppelin-IoTDB-Demo.zpln</code></p><h2 id="解释器配置项" tabindex="-1"><a class="header-anchor" href="#解释器配置项"><span>解释器配置项</span></a></h2><p>进入页面 <a href="http://127.0.0.1:8080/#/interpreter" target="_blank" rel="noopener noreferrer">http://127.0.0.1:8080/#/interpreter</a> 并配置 IoTDB 的连接参数：</p><figure><img src="https://alioss.timecho.com/docs/img/github/102752940-50407b00-43a5-11eb-94fb-3e3be222183c.png" alt="iotdb-configuration" tabindex="0" loading="lazy"><figcaption>iotdb-configuration</figcaption></figure><p>可配置参数默认值和解释如下：</p><table><thead><tr><th>属性</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>iotdb.host</td><td>127.0.0.1</td><td>IoTDB 主机名</td></tr><tr><td>iotdb.port</td><td>6667</td><td>IoTDB 端口</td></tr><tr><td>iotdb.username</td><td>root</td><td>用户名</td></tr><tr><td>iotdb.password</td><td>root</td><td>密码</td></tr><tr><td>iotdb.fetchSize</td><td>10000</td><td>查询结果分批次返回时，每一批数量</td></tr><tr><td>iotdb.zoneId</td><td></td><td>时区 ID</td></tr><tr><td>iotdb.enable.rpc.compression</td><td>FALSE</td><td>是否允许 rpc 压缩</td></tr><tr><td>iotdb.time.display.type</td><td>default</td><td>时间戳的展示格式</td></tr></tbody></table>`,37))])}const m=p(d,[["render",B],["__file","Zeppelin-IoTDB_apache.html.vue"]]),b=JSON.parse('{"path":"/zh/UserGuide/V1.3.0-2/Ecosystem-Integration/Zeppelin-IoTDB_apache.html","title":"Apache Zeppelin","lang":"zh-CN","frontmatter":{"description":"Apache Zeppelin Zeppelin 简介 Apache Zeppelin 是一个基于网页的交互式数据分析系统。用户可以通过 Zeppelin 连接数据源并使用 SQL、Scala 等进行交互式操作。操作可以保存为文档（类似于 Jupyter）。Zeppelin 支持多种数据源，包括 Spark、ElasticSearch、Cassandr...","head":[["link",{"rel":"alternate","hreflang":"en-us","href":"https://iotdb.apache.org/UserGuide/V1.3.0-2/Ecosystem-Integration/Zeppelin-IoTDB_apache.html"}],["meta",{"property":"og:url","content":"https://iotdb.apache.org/zh/UserGuide/V1.3.0-2/Ecosystem-Integration/Zeppelin-IoTDB_apache.html"}],["meta",{"property":"og:site_name","content":"IoTDB Website"}],["meta",{"property":"og:title","content":"Apache Zeppelin"}],["meta",{"property":"og:description","content":"Apache Zeppelin Zeppelin 简介 Apache Zeppelin 是一个基于网页的交互式数据分析系统。用户可以通过 Zeppelin 连接数据源并使用 SQL、Scala 等进行交互式操作。操作可以保存为文档（类似于 Jupyter）。Zeppelin 支持多种数据源，包括 Spark、ElasticSearch、Cassandr..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://alioss.timecho.com/docs/img/github/102752947-520a3e80-43a5-11eb-8fb1-8fac471c8c7e.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-11-11T11:01:16.000Z"}],["meta",{"property":"article:modified_time","content":"2024-11-11T11:01:16.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Apache Zeppelin\\",\\"image\\":[\\"https://alioss.timecho.com/docs/img/github/102752947-520a3e80-43a5-11eb-8fb1-8fac471c8c7e.png\\",\\"https://alioss.timecho.com/docs/img/github/102752945-5171a800-43a5-11eb-8614-53b3276a3ce2.png\\",\\"https://alioss.timecho.com/docs/img/github/102752948-52a2d500-43a5-11eb-9156-0c55667eb4cd.png\\",\\"https://alioss.timecho.com/docs/img/github/102752940-50407b00-43a5-11eb-94fb-3e3be222183c.png\\"],\\"dateModified\\":\\"2024-11-11T11:01:16.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"Zeppelin 简介","slug":"zeppelin-简介","link":"#zeppelin-简介","children":[]},{"level":2,"title":"Zeppelin-IoTDB 解释器","slug":"zeppelin-iotdb-解释器","link":"#zeppelin-iotdb-解释器","children":[{"level":3,"title":"系统环境需求","slug":"系统环境需求","link":"#系统环境需求","children":[]},{"level":3,"title":"编译解释器","slug":"编译解释器","link":"#编译解释器","children":[]},{"level":3,"title":"安装解释器","slug":"安装解释器","link":"#安装解释器","children":[]},{"level":3,"title":"修改 Zeppelin 配置","slug":"修改-zeppelin-配置","link":"#修改-zeppelin-配置","children":[]},{"level":3,"title":"启动 Zeppelin 和 IoTDB","slug":"启动-zeppelin-和-iotdb","link":"#启动-zeppelin-和-iotdb","children":[]}]},{"level":2,"title":"使用 Zeppelin-IoTDB 解释器","slug":"使用-zeppelin-iotdb-解释器","link":"#使用-zeppelin-iotdb-解释器","children":[]},{"level":2,"title":"解释器配置项","slug":"解释器配置项","link":"#解释器配置项","children":[]}],"git":{"createdTime":1688958677000,"updatedTime":1731322876000,"contributors":[{"name":"W1y1r","username":"W1y1r","email":"150988475+W1y1r@users.noreply.github.com","commits":2,"url":"https://github.com/W1y1r"},{"name":"majialin","username":"majialin","email":"107627937+mal117@users.noreply.github.com","commits":1,"url":"https://github.com/majialin"},{"name":"Peng Junzhi","username":"Peng Junzhi","email":"78788603+Pengzna@users.noreply.github.com","commits":1,"url":"https://github.com/Peng Junzhi"},{"name":"CritasWang","username":"CritasWang","email":"critas@outlook.com","commits":3,"url":"https://github.com/CritasWang"},{"name":"Lei","username":"Lei","email":"33376433+LeiRui@users.noreply.github.com","commits":1,"url":"https://github.com/Lei"}]},"readingTime":{"minutes":3.12,"words":936},"filePathRelative":"zh/UserGuide/V1.3.0-2/Ecosystem-Integration/Zeppelin-IoTDB_apache.md","localizedDate":"2023年7月10日","autoDesc":true}');export{m as comp,b as data};
