import{_ as n,c as a,b as e,o as l}from"./app-DmvF8OAs.js";const p={};function i(t,s){return l(),a("div",null,s[0]||(s[0]=[e(`<h1 id="连续查询" tabindex="-1"><a class="header-anchor" href="#连续查询"><span>连续查询</span></a></h1><h2 id="简介" tabindex="-1"><a class="header-anchor" href="#简介"><span>简介</span></a></h2><p>连续查询(Continuous queries, aka CQ) 是对实时数据周期性地自动执行的查询，并将查询结果写入指定的时间序列中。</p><p>用户可以通过连续查询实现滑动窗口流式计算，如计算某个序列每小时平均温度，并写入一个新序列中。用户可以自定义 <code>RESAMPLE</code> 子句去创建不同的滑动窗口，可以实现对于乱序数据一定程度的容忍。</p><h2 id="语法" tabindex="-1"><a class="header-anchor" href="#语法"><span>语法</span></a></h2><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">CREATE</span><span style="color:#ABB2BF;"> (CONTINUOUS QUERY | CQ) </span><span style="color:#56B6C2;">&lt;</span><span style="color:#ABB2BF;">cq_id</span><span style="color:#56B6C2;">&gt;</span><span style="color:#ABB2BF;"> </span></span>
<span class="line"><span style="color:#ABB2BF;">[</span><span style="color:#C678DD;">RESAMPLE</span><span style="color:#ABB2BF;"> </span></span>
<span class="line"><span style="color:#E06C75;">  [EVERY &lt;every_interval&gt;]</span><span style="color:#ABB2BF;"> </span></span>
<span class="line"><span style="color:#E06C75;">  [BOUNDARY &lt;execution_boundary_time&gt;]</span></span>
<span class="line"><span style="color:#E06C75;">  [RANGE &lt;start_time_offset&gt;[, end_time_offset]</span><span style="color:#ABB2BF;">] </span></span>
<span class="line"><span style="color:#ABB2BF;">]</span></span>
<span class="line"><span style="color:#E06C75;">[TIMEOUT POLICY BLOCKED|DISCARD]</span></span>
<span class="line"><span style="color:#C678DD;">BEGIN</span><span style="color:#ABB2BF;"> </span></span>
<span class="line"><span style="color:#C678DD;">    SELECT</span><span style="color:#ABB2BF;"> CLAUSE</span></span>
<span class="line"><span style="color:#C678DD;">        INTO</span><span style="color:#ABB2BF;"> CLAUSE</span></span>
<span class="line"><span style="color:#C678DD;">        FROM</span><span style="color:#ABB2BF;"> CLAUSE</span></span>
<span class="line"><span style="color:#E06C75;">        [WHERE CLAUSE]</span></span>
<span class="line"><span style="color:#E06C75;">        [GROUP BY(&lt;group_by_interval&gt;[, &lt;sliding_step&gt;]</span><span style="color:#ABB2BF;">) </span><span style="color:#E06C75;">[, level = &lt;level&gt;]</span><span style="color:#ABB2BF;">]</span></span>
<span class="line"><span style="color:#E06C75;">        [HAVING CLAUSE]</span></span>
<span class="line"><span style="color:#E06C75;">        [FILL {PREVIOUS | LINEAR | constant}]</span></span>
<span class="line"><span style="color:#E06C75;">        [LIMIT rowLimit OFFSET rowOffset]</span></span>
<span class="line"><span style="color:#E06C75;">        [ALIGN BY DEVICE]</span></span>
<span class="line"><span style="color:#C678DD;">END</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>注意：</p><ol><li>如果where子句中出现任何时间过滤条件，IoTDB将会抛出异常，因为IoTDB会自动为每次查询执行指定时间范围。</li><li>GROUP BY TIME CLAUSE在连续查询中的语法稍有不同，它不能包含原来的第一个参数，即 [start_time, end_time)，IoTDB会自动填充这个缺失的参数。如果指定，IoTDB将会抛出异常。</li><li>如果连续查询中既没有GROUP BY TIME子句，也没有指定EVERY子句，IoTDB将会抛出异常。</li></ol></blockquote><h3 id="连续查询语法中参数含义的描述" tabindex="-1"><a class="header-anchor" href="#连续查询语法中参数含义的描述"><span>连续查询语法中参数含义的描述</span></a></h3><ul><li><code>&lt;cq_id&gt;</code> 为连续查询指定一个全局唯一的标识。</li><li><code>&lt;every_interval&gt;</code> 指定了连续查询周期性执行的间隔。现在支持的时间单位有：ns, us, ms, s, m, h, d, w, 并且它的值不能小于用户在<code>iotdb-system.properties</code>配置文件中指定的<code>continuous_query_min_every_interval</code>。这是一个可选参数，默认等于group by子句中的<code>group_by_interval</code>。</li><li><code>&lt;start_time_offset&gt;</code> 指定了每次查询执行窗口的开始时间，即<code>now()-&lt;start_time_offset&gt;</code>。现在支持的时间单位有：ns, us, ms, s, m, h, d, w。这是一个可选参数，默认等于<code>EVERY</code>子句中的<code>every_interval</code>。</li><li><code>&lt;end_time_offset&gt;</code> 指定了每次查询执行窗口的结束时间，即<code>now()-&lt;end_time_offset&gt;</code>。现在支持的时间单位有：ns, us, ms, s, m, h, d, w。这是一个可选参数，默认等于<code>0</code>.</li><li><code>&lt;execution_boundary_time&gt;</code> 表示用户期待的连续查询的首个周期任务的执行时间。（因为连续查询只会对当前实时的数据流做计算，所以该连续查询实际首个周期任务的执行时间并不一定等于用户指定的时间，具体计算逻辑如下所示） <ul><li><code>&lt;execution_boundary_time&gt;</code> 可以早于、等于或者迟于当前时间。</li><li>这个参数是可选的，默认等于<code>0</code>。</li><li>首次查询执行窗口的开始时间为<code>&lt;execution_boundary_time&gt; - &lt;start_time_offset&gt;</code>.</li><li>首次查询执行窗口的结束时间为<code>&lt;execution_boundary_time&gt; - &lt;end_time_offset&gt;</code>.</li><li>第i个查询执行窗口的时间范围是<code>[&lt;execution_boundary_time&gt; - &lt;start_time_offset&gt; + (i - 1) * &lt;every_interval&gt;, &lt;execution_boundary_time&gt; - &lt;end_time_offset&gt; + (i - 1) * &lt;every_interval&gt;)</code>。</li><li>如果当前时间早于或等于, 那连续查询的首个周期任务的执行时间就是用户指定的<code>execution_boundary_time</code>.</li><li>如果当前时间迟于用户指定的<code>execution_boundary_time</code>，那么连续查询的首个周期任务的执行时间就是<code>execution_boundary_time + i * &lt;every_interval&gt;</code>中第一个大于或等于当前时间的值。</li></ul></li></ul><blockquote><ul><li>&lt;every_interval&gt;，&lt;start_time_offset&gt; 和 &lt;group_by_interval&gt; 都应该大于 0</li><li>&lt;group_by_interval&gt;应该小于等于&lt;start_time_offset&gt;</li><li>用户应该根据实际需求，为&lt;start_time_offset&gt; 和 &lt;every_interval&gt; 指定合适的值 <ul><li>如果&lt;start_time_offset&gt;大于&lt;every_interval&gt;，在每一次查询执行的时间窗口上会有部分重叠</li><li>如果&lt;start_time_offset&gt;小于&lt;every_interval&gt;，在连续的两次查询执行的时间窗口中间将会有未覆盖的时间范围</li></ul></li><li>start_time_offset 应该大于end_time_offset</li></ul></blockquote><h4 id="start-time-offset-等于-every-interval" tabindex="-1"><a class="header-anchor" href="#start-time-offset-等于-every-interval"><span><code>&lt;start_time_offset&gt;</code>等于<code>&lt;every_interval&gt;</code></span></a></h4><figure><img src="https://alioss.timecho.com/docs/img/UserGuide/Process-Data/Continuous-Query/pic1.png?raw=true" alt="1" tabindex="0" loading="lazy"><figcaption>1</figcaption></figure><h4 id="start-time-offset-大于-every-interval" tabindex="-1"><a class="header-anchor" href="#start-time-offset-大于-every-interval"><span><code>&lt;start_time_offset&gt;</code>大于<code>&lt;every_interval&gt;</code></span></a></h4><figure><img src="https://alioss.timecho.com/docs/img/UserGuide/Process-Data/Continuous-Query/pic2.png?raw=true" alt="2" tabindex="0" loading="lazy"><figcaption>2</figcaption></figure><h4 id="start-time-offset-小于-every-interval" tabindex="-1"><a class="header-anchor" href="#start-time-offset-小于-every-interval"><span><code>&lt;start_time_offset&gt;</code>小于<code>&lt;every_interval&gt;</code></span></a></h4><figure><img src="https://alioss.timecho.com/docs/img/UserGuide/Process-Data/Continuous-Query/pic3.png?raw=true" alt="3" tabindex="0" loading="lazy"><figcaption>3</figcaption></figure><h4 id="every-interval-不为0" tabindex="-1"><a class="header-anchor" href="#every-interval-不为0"><span><code>&lt;every_interval&gt;</code>不为0</span></a></h4><figure><img src="https://alioss.timecho.com/docs/img/UserGuide/Process-Data/Continuous-Query/pic4.png?raw=true" alt="4" tabindex="0" loading="lazy"><figcaption>4</figcaption></figure><ul><li><code>TIMEOUT POLICY</code> 指定了我们如何处理“前一个时间窗口还未执行完时，下一个窗口的执行时间已经到达的场景，默认值是<code>BLOCKED</code>. <ul><li><code>BLOCKED</code>意味着即使下一个窗口的执行时间已经到达，我们依旧需要阻塞等待前一个时间窗口的查询执行完再开始执行下一个窗口。如果使用<code>BLOCKED</code>策略，所有的时间窗口都将会被依此执行，但是如果遇到执行查询的时间长于周期性间隔时，连续查询的结果会迟于最新的时间窗口范围。</li><li><code>DISCARD</code>意味着如果前一个时间窗口还未执行完，我们会直接丢弃下一个窗口的执行时间。如果使用<code>DISCARD</code>策略，可能会有部分时间窗口得不到执行。但是一旦前一个查询执行完后，它将会使用最新的时间窗口，所以它的执行结果总能赶上最新的时间窗口范围，当然是以部分时间窗口得不到执行为代价。</li></ul></li></ul><h2 id="连续查询的用例" tabindex="-1"><a class="header-anchor" href="#连续查询的用例"><span>连续查询的用例</span></a></h2><p>下面是用例数据，这是一个实时的数据流，我们假设数据都按时到达。</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+-----------------------------+-----------------------------+-----------------------------+-----------------------------+</span></span>
<span class="line"><span>|                         Time|root.ln.wf02.wt02.temperature|root.ln.wf02.wt01.temperature|root.ln.wf01.wt02.temperature|root.ln.wf01.wt01.temperature|</span></span>
<span class="line"><span>+-----------------------------+-----------------------------+-----------------------------+-----------------------------+-----------------------------+</span></span>
<span class="line"><span>|2021-05-11T22:18:14.598+08:00|                        121.0|                         72.0|                        183.0|                        115.0|</span></span>
<span class="line"><span>|2021-05-11T22:18:19.941+08:00|                          0.0|                         68.0|                         68.0|                        103.0|</span></span>
<span class="line"><span>|2021-05-11T22:18:24.949+08:00|                        122.0|                         45.0|                         11.0|                         14.0|</span></span>
<span class="line"><span>|2021-05-11T22:18:29.967+08:00|                         47.0|                         14.0|                         59.0|                        181.0|</span></span>
<span class="line"><span>|2021-05-11T22:18:34.979+08:00|                        182.0|                        113.0|                         29.0|                        180.0|</span></span>
<span class="line"><span>|2021-05-11T22:18:39.990+08:00|                         42.0|                         11.0|                         52.0|                         19.0|</span></span>
<span class="line"><span>|2021-05-11T22:18:44.995+08:00|                         78.0|                         38.0|                        123.0|                         52.0|</span></span>
<span class="line"><span>|2021-05-11T22:18:49.999+08:00|                        137.0|                        172.0|                        135.0|                        193.0|</span></span>
<span class="line"><span>|2021-05-11T22:18:55.003+08:00|                         16.0|                        124.0|                        183.0|                         18.0|</span></span>
<span class="line"><span>+-----------------------------+-----------------------------+-----------------------------+-----------------------------+-----------------------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="配置连续查询执行的周期性间隔" tabindex="-1"><a class="header-anchor" href="#配置连续查询执行的周期性间隔"><span>配置连续查询执行的周期性间隔</span></a></h3><p>在<code>RESAMPLE</code>子句中使用<code>EVERY</code>参数指定连续查询的执行间隔，如果没有指定，默认等于<code>group_by_interval</code>。</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">CREATE</span><span style="color:#ABB2BF;"> CONTINUOUS QUERY cq1</span></span>
<span class="line"><span style="color:#C678DD;">RESAMPLE</span><span style="color:#ABB2BF;"> EVERY 20s</span></span>
<span class="line"><span style="color:#C678DD;">BEGIN</span></span>
<span class="line"><span style="color:#C678DD;">  SELECT</span><span style="color:#ABB2BF;"> max_value(temperature)</span></span>
<span class="line"><span style="color:#C678DD;">  INTO</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">ln</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">wf02</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">wt02</span><span style="color:#ABB2BF;">(temperature_max), </span><span style="color:#D19A66;">root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">ln</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">wf02</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">wt01</span><span style="color:#ABB2BF;">(temperature_max), </span><span style="color:#D19A66;">root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">ln</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">wf01</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">wt02</span><span style="color:#ABB2BF;">(temperature_max), </span><span style="color:#D19A66;">root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">ln</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">wf01</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">wt01</span><span style="color:#ABB2BF;">(temperature_max)</span></span>
<span class="line"><span style="color:#C678DD;">  FROM</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">ln</span><span style="color:#ABB2BF;">.*.*</span></span>
<span class="line"><span style="color:#C678DD;">  GROUP BY</span><span style="color:#ABB2BF;">(10s)</span></span>
<span class="line"><span style="color:#C678DD;">END</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>cq1</code>计算出<code>temperature</code>传感器每10秒的平均值，并且将查询结果存储在<code>temperature_max</code>传感器下，传感器路径前缀使用跟原来一样的前缀。</p><p><code>cq1</code>每20秒执行一次，每次执行的查询的时间窗口范围是从过去20秒到当前时间。</p><p>假设当前时间是<code>2021-05-11T22:18:40.000+08:00</code>，如果把日志等级设置为DEBUG，我们可以在<code>cq1</code>执行的DataNode上看到如下的输出：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>At **2021-05-11T22:18:40.000+08:00**, \`cq1\` executes a query within the time range \`[2021-05-11T22:18:20, 2021-05-11T22:18:40)\`.</span></span>
<span class="line"><span>\`cq1\` generate 2 lines:</span></span>
<span class="line"><span>&gt;</span></span>
<span class="line"><span>+-----------------------------+---------------------------------+---------------------------------+---------------------------------+---------------------------------+</span></span>
<span class="line"><span>|                         Time|root.ln.wf02.wt02.temperature_max|root.ln.wf02.wt01.temperature_max|root.ln.wf01.wt02.temperature_max|root.ln.wf01.wt01.temperature_max|</span></span>
<span class="line"><span>+-----------------------------+---------------------------------+---------------------------------+---------------------------------+---------------------------------+</span></span>
<span class="line"><span>|2021-05-11T22:18:20.000+08:00|                            122.0|                             45.0|                             59.0|                            181.0|</span></span>
<span class="line"><span>|2021-05-11T22:18:30.000+08:00|                            182.0|                            113.0|                             52.0|                            180.0|</span></span>
<span class="line"><span>+-----------------------------+---------------------------------+---------------------------------+---------------------------------+---------------------------------+</span></span>
<span class="line"><span>&gt;</span></span>
<span class="line"><span>At **2021-05-11T22:19:00.000+08:00**, \`cq1\` executes a query within the time range \`[2021-05-11T22:18:40, 2021-05-11T22:19:00)\`.</span></span>
<span class="line"><span>\`cq1\` generate 2 lines:</span></span>
<span class="line"><span>&gt;</span></span>
<span class="line"><span>+-----------------------------+---------------------------------+---------------------------------+---------------------------------+---------------------------------+</span></span>
<span class="line"><span>|                         Time|root.ln.wf02.wt02.temperature_max|root.ln.wf02.wt01.temperature_max|root.ln.wf01.wt02.temperature_max|root.ln.wf01.wt01.temperature_max|</span></span>
<span class="line"><span>+-----------------------------+---------------------------------+---------------------------------+---------------------------------+---------------------------------+</span></span>
<span class="line"><span>|2021-05-11T22:18:40.000+08:00|                            137.0|                            172.0|                            135.0|                            193.0|</span></span>
<span class="line"><span>|2021-05-11T22:18:50.000+08:00|                             16.0|                            124.0|                            183.0|                             18.0|</span></span>
<span class="line"><span>+-----------------------------+---------------------------------+---------------------------------+---------------------------------+---------------------------------+</span></span>
<span class="line"><span>&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>cq1</code>并不会处理当前时间窗口以外的数据，即<code>2021-05-11T22:18:20.000+08:00</code>以前的数据，所以我们会得到如下结果：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>&gt; SELECT temperature_max from root.ln.*.*;</span></span>
<span class="line"><span>+-----------------------------+---------------------------------+---------------------------------+---------------------------------+---------------------------------+</span></span>
<span class="line"><span>|                         Time|root.ln.wf02.wt02.temperature_max|root.ln.wf02.wt01.temperature_max|root.ln.wf01.wt02.temperature_max|root.ln.wf01.wt01.temperature_max|</span></span>
<span class="line"><span>+-----------------------------+---------------------------------+---------------------------------+---------------------------------+---------------------------------+</span></span>
<span class="line"><span>|2021-05-11T22:18:20.000+08:00|                            122.0|                             45.0|                             59.0|                            181.0|</span></span>
<span class="line"><span>|2021-05-11T22:18:30.000+08:00|                            182.0|                            113.0|                             52.0|                            180.0|</span></span>
<span class="line"><span>|2021-05-11T22:18:40.000+08:00|                            137.0|                            172.0|                            135.0|                            193.0|</span></span>
<span class="line"><span>|2021-05-11T22:18:50.000+08:00|                             16.0|                            124.0|                            183.0|                             18.0|</span></span>
<span class="line"><span>+-----------------------------+---------------------------------+---------------------------------+---------------------------------+---------------------------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="配置连续查询的时间窗口大小" tabindex="-1"><a class="header-anchor" href="#配置连续查询的时间窗口大小"><span>配置连续查询的时间窗口大小</span></a></h3><p>使用<code>RANGE</code>子句中的<code>start_time_offset</code>参数指定连续查询每次执行的时间窗口的开始时间偏移，如果没有指定，默认值等于<code>EVERY</code>参数。</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">CREATE</span><span style="color:#ABB2BF;"> CONTINUOUS QUERY cq2</span></span>
<span class="line"><span style="color:#C678DD;">RESAMPLE</span><span style="color:#C678DD;"> RANGE</span><span style="color:#ABB2BF;"> 40s</span></span>
<span class="line"><span style="color:#C678DD;">BEGIN</span></span>
<span class="line"><span style="color:#C678DD;">  SELECT</span><span style="color:#ABB2BF;"> max_value(temperature)</span></span>
<span class="line"><span style="color:#C678DD;">  INTO</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">ln</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">wf02</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">wt02</span><span style="color:#ABB2BF;">(temperature_max), </span><span style="color:#D19A66;">root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">ln</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">wf02</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">wt01</span><span style="color:#ABB2BF;">(temperature_max), </span><span style="color:#D19A66;">root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">ln</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">wf01</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">wt02</span><span style="color:#ABB2BF;">(temperature_max), </span><span style="color:#D19A66;">root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">ln</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">wf01</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">wt01</span><span style="color:#ABB2BF;">(temperature_max)</span></span>
<span class="line"><span style="color:#C678DD;">  FROM</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">ln</span><span style="color:#ABB2BF;">.*.*</span></span>
<span class="line"><span style="color:#C678DD;">  GROUP BY</span><span style="color:#ABB2BF;">(10s)</span></span>
<span class="line"><span style="color:#C678DD;">END</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>cq2</code>计算出<code>temperature</code>传感器每10秒的平均值，并且将查询结果存储在<code>temperature_max</code>传感器下，传感器路径前缀使用跟原来一样的前缀。</p><p><code>cq2</code>每10秒执行一次，每次执行的查询的时间窗口范围是从过去40秒到当前时间。</p><p>假设当前时间是<code>2021-05-11T22:18:40.000+08:00</code>，如果把日志等级设置为DEBUG，我们可以在<code>cq2</code>执行的DataNode上看到如下的输出：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>At **2021-05-11T22:18:40.000+08:00**, \`cq2\` executes a query within the time range \`[2021-05-11T22:18:00, 2021-05-11T22:18:40)\`.</span></span>
<span class="line"><span>\`cq2\` generate 4 lines:</span></span>
<span class="line"><span>&gt;</span></span>
<span class="line"><span>+-----------------------------+---------------------------------+---------------------------------+---------------------------------+---------------------------------+</span></span>
<span class="line"><span>|                         Time|root.ln.wf02.wt02.temperature_max|root.ln.wf02.wt01.temperature_max|root.ln.wf01.wt02.temperature_max|root.ln.wf01.wt01.temperature_max|</span></span>
<span class="line"><span>+-----------------------------+---------------------------------+---------------------------------+---------------------------------+---------------------------------+</span></span>
<span class="line"><span>|2021-05-11T22:18:00.000+08:00|                             NULL|                             NULL|                             NULL|                             NULL|</span></span>
<span class="line"><span>|2021-05-11T22:18:10.000+08:00|                            121.0|                             72.0|                            183.0|                            115.0|</span></span>
<span class="line"><span>|2021-05-11T22:18:20.000+08:00|                            122.0|                             45.0|                             59.0|                            181.0|</span></span>
<span class="line"><span>|2021-05-11T22:18:30.000+08:00|                            182.0|                            113.0|                             52.0|                            180.0|</span></span>
<span class="line"><span>+-----------------------------+---------------------------------+---------------------------------+---------------------------------+---------------------------------+</span></span>
<span class="line"><span>&gt;</span></span>
<span class="line"><span>At **2021-05-11T22:18:50.000+08:00**, \`cq2\` executes a query within the time range \`[2021-05-11T22:18:10, 2021-05-11T22:18:50)\`.</span></span>
<span class="line"><span>\`cq2\` generate 4 lines:</span></span>
<span class="line"><span>&gt;</span></span>
<span class="line"><span>+-----------------------------+---------------------------------+---------------------------------+---------------------------------+---------------------------------+</span></span>
<span class="line"><span>|                         Time|root.ln.wf02.wt02.temperature_max|root.ln.wf02.wt01.temperature_max|root.ln.wf01.wt02.temperature_max|root.ln.wf01.wt01.temperature_max|</span></span>
<span class="line"><span>+-----------------------------+---------------------------------+---------------------------------+---------------------------------+---------------------------------+</span></span>
<span class="line"><span>|2021-05-11T22:18:10.000+08:00|                            121.0|                             72.0|                            183.0|                            115.0|</span></span>
<span class="line"><span>|2021-05-11T22:18:20.000+08:00|                            122.0|                             45.0|                             59.0|                            181.0|</span></span>
<span class="line"><span>|2021-05-11T22:18:30.000+08:00|                            182.0|                            113.0|                             52.0|                            180.0|</span></span>
<span class="line"><span>|2021-05-11T22:18:40.000+08:00|                            137.0|                            172.0|                            135.0|                            193.0|</span></span>
<span class="line"><span>+-----------------------------+---------------------------------+---------------------------------+---------------------------------+---------------------------------+</span></span>
<span class="line"><span>&gt;</span></span>
<span class="line"><span>At **2021-05-11T22:19:00.000+08:00**, \`cq2\` executes a query within the time range \`[2021-05-11T22:18:20, 2021-05-11T22:19:00)\`.</span></span>
<span class="line"><span>\`cq2\` generate 4 lines:</span></span>
<span class="line"><span>&gt;</span></span>
<span class="line"><span>+-----------------------------+---------------------------------+---------------------------------+---------------------------------+---------------------------------+</span></span>
<span class="line"><span>|                         Time|root.ln.wf02.wt02.temperature_max|root.ln.wf02.wt01.temperature_max|root.ln.wf01.wt02.temperature_max|root.ln.wf01.wt01.temperature_max|</span></span>
<span class="line"><span>+-----------------------------+---------------------------------+---------------------------------+---------------------------------+---------------------------------+</span></span>
<span class="line"><span>|2021-05-11T22:18:20.000+08:00|                            122.0|                             45.0|                             59.0|                            181.0|</span></span>
<span class="line"><span>|2021-05-11T22:18:30.000+08:00|                            182.0|                            113.0|                             52.0|                            180.0|</span></span>
<span class="line"><span>|2021-05-11T22:18:40.000+08:00|                            137.0|                            172.0|                            135.0|                            193.0|</span></span>
<span class="line"><span>|2021-05-11T22:18:50.000+08:00|                             16.0|                            124.0|                            183.0|                             18.0|</span></span>
<span class="line"><span>+-----------------------------+---------------------------------+---------------------------------+---------------------------------+---------------------------------+</span></span>
<span class="line"><span>&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>cq2</code>并不会写入全是null值的行，值得注意的是<code>cq2</code>会多次计算某些区间的聚合值，下面是计算结果：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>&gt; SELECT temperature_max from root.ln.*.*;</span></span>
<span class="line"><span>+-----------------------------+---------------------------------+---------------------------------+---------------------------------+---------------------------------+</span></span>
<span class="line"><span>|                         Time|root.ln.wf02.wt02.temperature_max|root.ln.wf02.wt01.temperature_max|root.ln.wf01.wt02.temperature_max|root.ln.wf01.wt01.temperature_max|</span></span>
<span class="line"><span>+-----------------------------+---------------------------------+---------------------------------+---------------------------------+---------------------------------+</span></span>
<span class="line"><span>|2021-05-11T22:18:10.000+08:00|                            121.0|                             72.0|                            183.0|                            115.0|</span></span>
<span class="line"><span>|2021-05-11T22:18:20.000+08:00|                            122.0|                             45.0|                             59.0|                            181.0|</span></span>
<span class="line"><span>|2021-05-11T22:18:30.000+08:00|                            182.0|                            113.0|                             52.0|                            180.0|</span></span>
<span class="line"><span>|2021-05-11T22:18:40.000+08:00|                            137.0|                            172.0|                            135.0|                            193.0|</span></span>
<span class="line"><span>|2021-05-11T22:18:50.000+08:00|                             16.0|                            124.0|                            183.0|                             18.0|</span></span>
<span class="line"><span>+-----------------------------+---------------------------------+---------------------------------+---------------------------------+---------------------------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="同时配置连续查询执行的周期性间隔和时间窗口大小" tabindex="-1"><a class="header-anchor" href="#同时配置连续查询执行的周期性间隔和时间窗口大小"><span>同时配置连续查询执行的周期性间隔和时间窗口大小</span></a></h3><p>使用<code>RESAMPLE</code>子句中的<code>EVERY</code>参数和<code>RANGE</code>参数分别指定连续查询的执行间隔和窗口大小。并且使用<code>fill()</code>来填充没有值的时间区间。</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">CREATE</span><span style="color:#ABB2BF;"> CONTINUOUS QUERY cq3</span></span>
<span class="line"><span style="color:#C678DD;">RESAMPLE</span><span style="color:#ABB2BF;"> EVERY 20s </span><span style="color:#C678DD;">RANGE</span><span style="color:#ABB2BF;"> 40s</span></span>
<span class="line"><span style="color:#C678DD;">BEGIN</span></span>
<span class="line"><span style="color:#C678DD;">  SELECT</span><span style="color:#ABB2BF;"> max_value(temperature)</span></span>
<span class="line"><span style="color:#C678DD;">  INTO</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">ln</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">wf02</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">wt02</span><span style="color:#ABB2BF;">(temperature_max), </span><span style="color:#D19A66;">root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">ln</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">wf02</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">wt01</span><span style="color:#ABB2BF;">(temperature_max), </span><span style="color:#D19A66;">root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">ln</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">wf01</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">wt02</span><span style="color:#ABB2BF;">(temperature_max), </span><span style="color:#D19A66;">root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">ln</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">wf01</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">wt01</span><span style="color:#ABB2BF;">(temperature_max)</span></span>
<span class="line"><span style="color:#C678DD;">  FROM</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">ln</span><span style="color:#ABB2BF;">.*.*</span></span>
<span class="line"><span style="color:#C678DD;">  GROUP BY</span><span style="color:#ABB2BF;">(10s)</span></span>
<span class="line"><span style="color:#ABB2BF;">  FILL(</span><span style="color:#D19A66;">100</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#C678DD;">END</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>cq3</code>计算出<code>temperature</code>传感器每10秒的平均值，并且将查询结果存储在<code>temperature_max</code>传感器下，传感器路径前缀使用跟原来一样的前缀。如果某些区间没有值，用<code>100.0</code>填充。</p><p><code>cq3</code>每20秒执行一次，每次执行的查询的时间窗口范围是从过去40秒到当前时间。</p><p>假设当前时间是<code>2021-05-11T22:18:40.000+08:00</code>，如果把日志等级设置为DEBUG，我们可以在<code>cq3</code>执行的DataNode上看到如下的输出：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>At **2021-05-11T22:18:40.000+08:00**, \`cq3\` executes a query within the time range \`[2021-05-11T22:18:00, 2021-05-11T22:18:40)\`.</span></span>
<span class="line"><span>\`cq3\` generate 4 lines:</span></span>
<span class="line"><span>&gt;</span></span>
<span class="line"><span>+-----------------------------+---------------------------------+---------------------------------+---------------------------------+---------------------------------+</span></span>
<span class="line"><span>|                         Time|root.ln.wf02.wt02.temperature_max|root.ln.wf02.wt01.temperature_max|root.ln.wf01.wt02.temperature_max|root.ln.wf01.wt01.temperature_max|</span></span>
<span class="line"><span>+-----------------------------+---------------------------------+---------------------------------+---------------------------------+---------------------------------+</span></span>
<span class="line"><span>|2021-05-11T22:18:00.000+08:00|                            100.0|                            100.0|                            100.0|                            100.0|</span></span>
<span class="line"><span>|2021-05-11T22:18:10.000+08:00|                            121.0|                             72.0|                            183.0|                            115.0|</span></span>
<span class="line"><span>|2021-05-11T22:18:20.000+08:00|                            122.0|                             45.0|                             59.0|                            181.0|</span></span>
<span class="line"><span>|2021-05-11T22:18:30.000+08:00|                            182.0|                            113.0|                             52.0|                            180.0|</span></span>
<span class="line"><span>+-----------------------------+---------------------------------+---------------------------------+---------------------------------+---------------------------------+</span></span>
<span class="line"><span>&gt;</span></span>
<span class="line"><span>At **2021-05-11T22:19:00.000+08:00**, \`cq3\` executes a query within the time range \`[2021-05-11T22:18:20, 2021-05-11T22:19:00)\`.</span></span>
<span class="line"><span>\`cq3\` generate 4 lines:</span></span>
<span class="line"><span>&gt;</span></span>
<span class="line"><span>+-----------------------------+---------------------------------+---------------------------------+---------------------------------+---------------------------------+</span></span>
<span class="line"><span>|                         Time|root.ln.wf02.wt02.temperature_max|root.ln.wf02.wt01.temperature_max|root.ln.wf01.wt02.temperature_max|root.ln.wf01.wt01.temperature_max|</span></span>
<span class="line"><span>+-----------------------------+---------------------------------+---------------------------------+---------------------------------+---------------------------------+</span></span>
<span class="line"><span>|2021-05-11T22:18:20.000+08:00|                            122.0|                             45.0|                             59.0|                            181.0|</span></span>
<span class="line"><span>|2021-05-11T22:18:30.000+08:00|                            182.0|                            113.0|                             52.0|                            180.0|</span></span>
<span class="line"><span>|2021-05-11T22:18:40.000+08:00|                            137.0|                            172.0|                            135.0|                            193.0|</span></span>
<span class="line"><span>|2021-05-11T22:18:50.000+08:00|                             16.0|                            124.0|                            183.0|                             18.0|</span></span>
<span class="line"><span>+-----------------------------+---------------------------------+---------------------------------+---------------------------------+---------------------------------+</span></span>
<span class="line"><span>&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>值得注意的是<code>cq3</code>会多次计算某些区间的聚合值，下面是计算结果：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>&gt; SELECT temperature_max from root.ln.*.*;</span></span>
<span class="line"><span>+-----------------------------+---------------------------------+---------------------------------+---------------------------------+---------------------------------+</span></span>
<span class="line"><span>|                         Time|root.ln.wf02.wt02.temperature_max|root.ln.wf02.wt01.temperature_max|root.ln.wf01.wt02.temperature_max|root.ln.wf01.wt01.temperature_max|</span></span>
<span class="line"><span>+-----------------------------+---------------------------------+---------------------------------+---------------------------------+---------------------------------+</span></span>
<span class="line"><span>|2021-05-11T22:18:00.000+08:00|                            100.0|                            100.0|                            100.0|                            100.0|</span></span>
<span class="line"><span>|2021-05-11T22:18:10.000+08:00|                            121.0|                             72.0|                            183.0|                            115.0|</span></span>
<span class="line"><span>|2021-05-11T22:18:20.000+08:00|                            122.0|                             45.0|                             59.0|                            181.0|</span></span>
<span class="line"><span>|2021-05-11T22:18:30.000+08:00|                            182.0|                            113.0|                             52.0|                            180.0|</span></span>
<span class="line"><span>|2021-05-11T22:18:40.000+08:00|                            137.0|                            172.0|                            135.0|                            193.0|</span></span>
<span class="line"><span>|2021-05-11T22:18:50.000+08:00|                             16.0|                            124.0|                            183.0|                             18.0|</span></span>
<span class="line"><span>+-----------------------------+---------------------------------+---------------------------------+---------------------------------+---------------------------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="配置连续查询每次查询执行时间窗口的结束时间" tabindex="-1"><a class="header-anchor" href="#配置连续查询每次查询执行时间窗口的结束时间"><span>配置连续查询每次查询执行时间窗口的结束时间</span></a></h3><p>使用<code>RESAMPLE</code>子句中的<code>EVERY</code>参数和<code>RANGE</code>参数分别指定连续查询的执行间隔和窗口大小。并且使用<code>fill()</code>来填充没有值的时间区间。</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">CREATE</span><span style="color:#ABB2BF;"> CONTINUOUS QUERY cq4</span></span>
<span class="line"><span style="color:#C678DD;">RESAMPLE</span><span style="color:#ABB2BF;"> EVERY 20s </span><span style="color:#C678DD;">RANGE</span><span style="color:#ABB2BF;"> 40s, 20s</span></span>
<span class="line"><span style="color:#C678DD;">BEGIN</span></span>
<span class="line"><span style="color:#C678DD;">  SELECT</span><span style="color:#ABB2BF;"> max_value(temperature)</span></span>
<span class="line"><span style="color:#C678DD;">  INTO</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">ln</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">wf02</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">wt02</span><span style="color:#ABB2BF;">(temperature_max), </span><span style="color:#D19A66;">root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">ln</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">wf02</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">wt01</span><span style="color:#ABB2BF;">(temperature_max), </span><span style="color:#D19A66;">root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">ln</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">wf01</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">wt02</span><span style="color:#ABB2BF;">(temperature_max), </span><span style="color:#D19A66;">root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">ln</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">wf01</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">wt01</span><span style="color:#ABB2BF;">(temperature_max)</span></span>
<span class="line"><span style="color:#C678DD;">  FROM</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">ln</span><span style="color:#ABB2BF;">.*.*</span></span>
<span class="line"><span style="color:#C678DD;">  GROUP BY</span><span style="color:#ABB2BF;">(10s)</span></span>
<span class="line"><span style="color:#ABB2BF;">  FILL(</span><span style="color:#D19A66;">100</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#C678DD;">END</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>cq4</code>计算出<code>temperature</code>传感器每10秒的平均值，并且将查询结果存储在<code>temperature_max</code>传感器下，传感器路径前缀使用跟原来一样的前缀。如果某些区间没有值，用<code>100.0</code>填充。</p><p><code>cq4</code>每20秒执行一次，每次执行的查询的时间窗口范围是从过去40秒到过去20秒。</p><p>假设当前时间是<code>2021-05-11T22:18:40.000+08:00</code>，如果把日志等级设置为DEBUG，我们可以在<code>cq4</code>执行的DataNode上看到如下的输出：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>At **2021-05-11T22:18:40.000+08:00**, \`cq4\` executes a query within the time range \`[2021-05-11T22:18:00, 2021-05-11T22:18:20)\`.</span></span>
<span class="line"><span>\`cq4\` generate 2 lines:</span></span>
<span class="line"><span>&gt;</span></span>
<span class="line"><span>+-----------------------------+---------------------------------+---------------------------------+---------------------------------+---------------------------------+</span></span>
<span class="line"><span>|                         Time|root.ln.wf02.wt02.temperature_max|root.ln.wf02.wt01.temperature_max|root.ln.wf01.wt02.temperature_max|root.ln.wf01.wt01.temperature_max|</span></span>
<span class="line"><span>+-----------------------------+---------------------------------+---------------------------------+---------------------------------+---------------------------------+</span></span>
<span class="line"><span>|2021-05-11T22:18:00.000+08:00|                            100.0|                            100.0|                            100.0|                            100.0|</span></span>
<span class="line"><span>|2021-05-11T22:18:10.000+08:00|                            121.0|                             72.0|                            183.0|                            115.0|</span></span>
<span class="line"><span>+-----------------------------+---------------------------------+---------------------------------+---------------------------------+---------------------------------+</span></span>
<span class="line"><span>&gt;</span></span>
<span class="line"><span>At **2021-05-11T22:19:00.000+08:00**, \`cq4\` executes a query within the time range \`[2021-05-11T22:18:20, 2021-05-11T22:18:40)\`.</span></span>
<span class="line"><span>\`cq4\` generate 2 lines:</span></span>
<span class="line"><span>&gt;</span></span>
<span class="line"><span>+-----------------------------+---------------------------------+---------------------------------+---------------------------------+---------------------------------+</span></span>
<span class="line"><span>|                         Time|root.ln.wf02.wt02.temperature_max|root.ln.wf02.wt01.temperature_max|root.ln.wf01.wt02.temperature_max|root.ln.wf01.wt01.temperature_max|</span></span>
<span class="line"><span>+-----------------------------+---------------------------------+---------------------------------+---------------------------------+---------------------------------+</span></span>
<span class="line"><span>|2021-05-11T22:18:20.000+08:00|                            122.0|                             45.0|                             59.0|                            181.0|</span></span>
<span class="line"><span>|2021-05-11T22:18:30.000+08:00|                            182.0|                            113.0|                             52.0|                            180.0|</span></span>
<span class="line"><span>+-----------------------------+---------------------------------+---------------------------------+---------------------------------+---------------------------------+</span></span>
<span class="line"><span>&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>值得注意的是<code>cq4</code>只会计算每个聚合区间一次，并且每次开始执行计算的时间都会比当前的时间窗口结束时间迟20s, 下面是计算结果：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>&gt; SELECT temperature_max from root.ln.*.*;</span></span>
<span class="line"><span>+-----------------------------+---------------------------------+---------------------------------+---------------------------------+---------------------------------+</span></span>
<span class="line"><span>|                         Time|root.ln.wf02.wt02.temperature_max|root.ln.wf02.wt01.temperature_max|root.ln.wf01.wt02.temperature_max|root.ln.wf01.wt01.temperature_max|</span></span>
<span class="line"><span>+-----------------------------+---------------------------------+---------------------------------+---------------------------------+---------------------------------+</span></span>
<span class="line"><span>|2021-05-11T22:18:00.000+08:00|                            100.0|                            100.0|                            100.0|                            100.0|</span></span>
<span class="line"><span>|2021-05-11T22:18:10.000+08:00|                            121.0|                             72.0|                            183.0|                            115.0|</span></span>
<span class="line"><span>|2021-05-11T22:18:20.000+08:00|                            122.0|                             45.0|                             59.0|                            181.0|</span></span>
<span class="line"><span>|2021-05-11T22:18:30.000+08:00|                            182.0|                            113.0|                             52.0|                            180.0|</span></span>
<span class="line"><span>+-----------------------------+---------------------------------+---------------------------------+---------------------------------+---------------------------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="没有group-by-time子句的连续查询" tabindex="-1"><a class="header-anchor" href="#没有group-by-time子句的连续查询"><span>没有GROUP BY TIME子句的连续查询</span></a></h3><p>不使用<code>GROUP BY TIME</code>子句，并在<code>RESAMPLE</code>子句中显式使用<code>EVERY</code>参数指定连续查询的执行间隔。</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">CREATE</span><span style="color:#ABB2BF;"> CONTINUOUS QUERY cq5</span></span>
<span class="line"><span style="color:#C678DD;">RESAMPLE</span><span style="color:#ABB2BF;"> EVERY 20s</span></span>
<span class="line"><span style="color:#C678DD;">BEGIN</span></span>
<span class="line"><span style="color:#C678DD;">  SELECT</span><span style="color:#ABB2BF;"> temperature + </span><span style="color:#D19A66;">1</span></span>
<span class="line"><span style="color:#C678DD;">  INTO</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">precalculated_sg</span><span style="color:#ABB2BF;">.::(temperature)</span></span>
<span class="line"><span style="color:#C678DD;">  FROM</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">ln</span><span style="color:#ABB2BF;">.*.*</span></span>
<span class="line"><span style="color:#ABB2BF;">  align </span><span style="color:#C678DD;">by</span><span style="color:#ABB2BF;"> device</span></span>
<span class="line"><span style="color:#C678DD;">END</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>cq5</code>计算以<code>root.ln</code>为前缀的所有<code>temperature + 1</code>的值，并将结果储存在另一个 database <code>root.precalculated_sg</code>中。除 database 名称不同外，目标序列与源序列路径名均相同。</p><p><code>cq5</code>每20秒执行一次，每次执行的查询的时间窗口范围是从过去20秒到当前时间。</p><p>假设当前时间是<code>2021-05-11T22:18:40.000+08:00</code>，如果把日志等级设置为DEBUG，我们可以在<code>cq5</code>执行的DataNode上看到如下的输出：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>At **2021-05-11T22:18:40.000+08:00**, \`cq5\` executes a query within the time range \`[2021-05-11T22:18:20, 2021-05-11T22:18:40)\`.</span></span>
<span class="line"><span>\`cq5\` generate 16 lines:</span></span>
<span class="line"><span>&gt;</span></span>
<span class="line"><span>+-----------------------------+-------------------------------+-----------+</span></span>
<span class="line"><span>|                         Time|                         Device|temperature|</span></span>
<span class="line"><span>+-----------------------------+-------------------------------+-----------+</span></span>
<span class="line"><span>|2021-05-11T22:18:24.949+08:00|root.precalculated_sg.wf02.wt02|      123.0| </span></span>
<span class="line"><span>|2021-05-11T22:18:29.967+08:00|root.precalculated_sg.wf02.wt02|       48.0|</span></span>
<span class="line"><span>|2021-05-11T22:18:34.979+08:00|root.precalculated_sg.wf02.wt02|      183.0|</span></span>
<span class="line"><span>|2021-05-11T22:18:39.990+08:00|root.precalculated_sg.wf02.wt02|       45.0|</span></span>
<span class="line"><span>|2021-05-11T22:18:24.949+08:00|root.precalculated_sg.wf02.wt01|       46.0| </span></span>
<span class="line"><span>|2021-05-11T22:18:29.967+08:00|root.precalculated_sg.wf02.wt01|       15.0|</span></span>
<span class="line"><span>|2021-05-11T22:18:34.979+08:00|root.precalculated_sg.wf02.wt01|      114.0|</span></span>
<span class="line"><span>|2021-05-11T22:18:39.990+08:00|root.precalculated_sg.wf02.wt01|       12.0|</span></span>
<span class="line"><span>|2021-05-11T22:18:24.949+08:00|root.precalculated_sg.wf01.wt02|       12.0| </span></span>
<span class="line"><span>|2021-05-11T22:18:29.967+08:00|root.precalculated_sg.wf01.wt02|       60.0|</span></span>
<span class="line"><span>|2021-05-11T22:18:34.979+08:00|root.precalculated_sg.wf01.wt02|       30.0|</span></span>
<span class="line"><span>|2021-05-11T22:18:39.990+08:00|root.precalculated_sg.wf01.wt02|       53.0|</span></span>
<span class="line"><span>|2021-05-11T22:18:24.949+08:00|root.precalculated_sg.wf01.wt01|       15.0| </span></span>
<span class="line"><span>|2021-05-11T22:18:29.967+08:00|root.precalculated_sg.wf01.wt01|      182.0|</span></span>
<span class="line"><span>|2021-05-11T22:18:34.979+08:00|root.precalculated_sg.wf01.wt01|      181.0|</span></span>
<span class="line"><span>|2021-05-11T22:18:39.990+08:00|root.precalculated_sg.wf01.wt01|       20.0|</span></span>
<span class="line"><span>+-----------------------------+-------------------------------+-----------+</span></span>
<span class="line"><span>&gt;</span></span>
<span class="line"><span>At **2021-05-11T22:19:00.000+08:00**, \`cq5\` executes a query within the time range \`[2021-05-11T22:18:40, 2021-05-11T22:19:00)\`.</span></span>
<span class="line"><span>\`cq5\` generate 12 lines:</span></span>
<span class="line"><span>&gt;</span></span>
<span class="line"><span>+-----------------------------+-------------------------------+-----------+</span></span>
<span class="line"><span>|                         Time|                         Device|temperature|</span></span>
<span class="line"><span>+-----------------------------+-------------------------------+-----------+</span></span>
<span class="line"><span>|2021-05-11T22:18:44.995+08:00|root.precalculated_sg.wf02.wt02|       79.0| </span></span>
<span class="line"><span>|2021-05-11T22:18:49.999+08:00|root.precalculated_sg.wf02.wt02|      138.0|</span></span>
<span class="line"><span>|2021-05-11T22:18:55.003+08:00|root.precalculated_sg.wf02.wt02|       17.0|</span></span>
<span class="line"><span>|2021-05-11T22:18:44.995+08:00|root.precalculated_sg.wf02.wt01|       39.0| </span></span>
<span class="line"><span>|2021-05-11T22:18:49.999+08:00|root.precalculated_sg.wf02.wt01|      173.0|</span></span>
<span class="line"><span>|2021-05-11T22:18:55.003+08:00|root.precalculated_sg.wf02.wt01|      125.0|</span></span>
<span class="line"><span>|2021-05-11T22:18:44.995+08:00|root.precalculated_sg.wf01.wt02|      124.0| </span></span>
<span class="line"><span>|2021-05-11T22:18:49.999+08:00|root.precalculated_sg.wf01.wt02|      136.0|</span></span>
<span class="line"><span>|2021-05-11T22:18:55.003+08:00|root.precalculated_sg.wf01.wt02|      184.0|</span></span>
<span class="line"><span>|2021-05-11T22:18:44.995+08:00|root.precalculated_sg.wf01.wt01|       53.0| </span></span>
<span class="line"><span>|2021-05-11T22:18:49.999+08:00|root.precalculated_sg.wf01.wt01|      194.0|</span></span>
<span class="line"><span>|2021-05-11T22:18:55.003+08:00|root.precalculated_sg.wf01.wt01|       19.0|</span></span>
<span class="line"><span>+-----------------------------+-------------------------------+-----------+</span></span>
<span class="line"><span>&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>cq5</code>并不会处理当前时间窗口以外的数据，即<code>2021-05-11T22:18:20.000+08:00</code>以前的数据，所以我们会得到如下结果：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>&gt; SELECT temperature from root.precalculated_sg.*.* align by device;</span></span>
<span class="line"><span>+-----------------------------+-------------------------------+-----------+</span></span>
<span class="line"><span>|                         Time|                         Device|temperature|</span></span>
<span class="line"><span>+-----------------------------+-------------------------------+-----------+</span></span>
<span class="line"><span>|2021-05-11T22:18:24.949+08:00|root.precalculated_sg.wf02.wt02|      123.0| </span></span>
<span class="line"><span>|2021-05-11T22:18:29.967+08:00|root.precalculated_sg.wf02.wt02|       48.0|</span></span>
<span class="line"><span>|2021-05-11T22:18:34.979+08:00|root.precalculated_sg.wf02.wt02|      183.0|</span></span>
<span class="line"><span>|2021-05-11T22:18:39.990+08:00|root.precalculated_sg.wf02.wt02|       45.0|</span></span>
<span class="line"><span>|2021-05-11T22:18:44.995+08:00|root.precalculated_sg.wf02.wt02|       79.0| </span></span>
<span class="line"><span>|2021-05-11T22:18:49.999+08:00|root.precalculated_sg.wf02.wt02|      138.0|</span></span>
<span class="line"><span>|2021-05-11T22:18:55.003+08:00|root.precalculated_sg.wf02.wt02|       17.0|</span></span>
<span class="line"><span>|2021-05-11T22:18:24.949+08:00|root.precalculated_sg.wf02.wt01|       46.0| </span></span>
<span class="line"><span>|2021-05-11T22:18:29.967+08:00|root.precalculated_sg.wf02.wt01|       15.0|</span></span>
<span class="line"><span>|2021-05-11T22:18:34.979+08:00|root.precalculated_sg.wf02.wt01|      114.0|</span></span>
<span class="line"><span>|2021-05-11T22:18:39.990+08:00|root.precalculated_sg.wf02.wt01|       12.0|</span></span>
<span class="line"><span>|2021-05-11T22:18:44.995+08:00|root.precalculated_sg.wf02.wt01|       39.0| </span></span>
<span class="line"><span>|2021-05-11T22:18:49.999+08:00|root.precalculated_sg.wf02.wt01|      173.0|</span></span>
<span class="line"><span>|2021-05-11T22:18:55.003+08:00|root.precalculated_sg.wf02.wt01|      125.0|</span></span>
<span class="line"><span>|2021-05-11T22:18:24.949+08:00|root.precalculated_sg.wf01.wt02|       12.0| </span></span>
<span class="line"><span>|2021-05-11T22:18:29.967+08:00|root.precalculated_sg.wf01.wt02|       60.0|</span></span>
<span class="line"><span>|2021-05-11T22:18:34.979+08:00|root.precalculated_sg.wf01.wt02|       30.0|</span></span>
<span class="line"><span>|2021-05-11T22:18:39.990+08:00|root.precalculated_sg.wf01.wt02|       53.0|</span></span>
<span class="line"><span>|2021-05-11T22:18:44.995+08:00|root.precalculated_sg.wf01.wt02|      124.0| </span></span>
<span class="line"><span>|2021-05-11T22:18:49.999+08:00|root.precalculated_sg.wf01.wt02|      136.0|</span></span>
<span class="line"><span>|2021-05-11T22:18:55.003+08:00|root.precalculated_sg.wf01.wt02|      184.0|</span></span>
<span class="line"><span>|2021-05-11T22:18:24.949+08:00|root.precalculated_sg.wf01.wt01|       15.0| </span></span>
<span class="line"><span>|2021-05-11T22:18:29.967+08:00|root.precalculated_sg.wf01.wt01|      182.0|</span></span>
<span class="line"><span>|2021-05-11T22:18:34.979+08:00|root.precalculated_sg.wf01.wt01|      181.0|</span></span>
<span class="line"><span>|2021-05-11T22:18:39.990+08:00|root.precalculated_sg.wf01.wt01|       20.0|</span></span>
<span class="line"><span>|2021-05-11T22:18:44.995+08:00|root.precalculated_sg.wf01.wt01|       53.0| </span></span>
<span class="line"><span>|2021-05-11T22:18:49.999+08:00|root.precalculated_sg.wf01.wt01|      194.0|</span></span>
<span class="line"><span>|2021-05-11T22:18:55.003+08:00|root.precalculated_sg.wf01.wt01|       19.0|</span></span>
<span class="line"><span>+-----------------------------+-------------------------------+-----------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="连续查询的管理" tabindex="-1"><a class="header-anchor" href="#连续查询的管理"><span>连续查询的管理</span></a></h2><h3 id="查询系统已有的连续查询" tabindex="-1"><a class="header-anchor" href="#查询系统已有的连续查询"><span>查询系统已有的连续查询</span></a></h3><p>展示集群中所有的已注册的连续查询</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#ABB2BF;">SHOW (CONTINUOUS QUERIES | CQS)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><code>SHOW (CONTINUOUS QUERIES | CQS)</code>会将结果集按照<code>cq_id</code>排序。</p><h4 id="例子" tabindex="-1"><a class="header-anchor" href="#例子"><span>例子</span></a></h4><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#ABB2BF;">SHOW CONTINUOUS QUERIES;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>执行以上sql，我们将会得到如下的查询结果：</p><table><thead><tr><th style="text-align:left;">cq_id</th><th>query</th><th>state</th></tr></thead><tbody><tr><td style="text-align:left;">s1_count_cq</td><td>CREATE CQ s1_count_cq<br>BEGIN<br>SELECT count(s1)<br>INTO root.sg_count.d.count_s1<br>FROM root.sg.d<br>GROUP BY(30m)<br>END</td><td>active</td></tr></tbody></table><h3 id="删除已有的连续查询" tabindex="-1"><a class="header-anchor" href="#删除已有的连续查询"><span>删除已有的连续查询</span></a></h3><p>删除指定的名为cq_id的连续查询：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">DROP</span><span style="color:#ABB2BF;"> (CONTINUOUS QUERY | CQ) </span><span style="color:#56B6C2;">&lt;</span><span style="color:#ABB2BF;">cq_id</span><span style="color:#56B6C2;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>DROP CQ并不会返回任何结果集。</p><h4 id="例子-1" tabindex="-1"><a class="header-anchor" href="#例子-1"><span>例子</span></a></h4><p>删除名为s1_count_cq的连续查询：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">DROP</span><span style="color:#ABB2BF;"> CONTINUOUS QUERY s1_count_cq;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="修改已有的连续查询" tabindex="-1"><a class="header-anchor" href="#修改已有的连续查询"><span>修改已有的连续查询</span></a></h3><p>目前连续查询一旦被创建就不能再被修改。如果想要修改某个连续查询，只能先用<code>DROP</code>命令删除它，然后再用<code>CREATE</code>命令重新创建。</p><h2 id="连续查询的使用场景" tabindex="-1"><a class="header-anchor" href="#连续查询的使用场景"><span>连续查询的使用场景</span></a></h2><h3 id="对数据进行降采样并对降采样后的数据使用不同的保留策略" tabindex="-1"><a class="header-anchor" href="#对数据进行降采样并对降采样后的数据使用不同的保留策略"><span>对数据进行降采样并对降采样后的数据使用不同的保留策略</span></a></h3><p>可以使用连续查询，定期将高频率采样的原始数据（如每秒1000个点），降采样（如每秒仅保留一个点）后保存到另一个 database 的同名序列中。高精度的原始数据所在 database 的<code>TTL</code>可能设置的比较短，比如一天，而低精度的降采样后的数据所在的 database <code>TTL</code>可以设置的比较长，比如一个月，从而达到快速释放磁盘空间的目的。</p><h3 id="预计算代价昂贵的查询" tabindex="-1"><a class="header-anchor" href="#预计算代价昂贵的查询"><span>预计算代价昂贵的查询</span></a></h3><p>我们可以通过连续查询对一些重复的查询进行预计算，并将查询结果保存在某些目标序列中，这样真实查询并不需要真的再次去做计算，而是直接查询目标序列的结果，从而缩短了查询的时间。</p><blockquote><p>预计算查询结果尤其对一些可视化工具渲染时序图和工作台时有很大的加速作用。</p></blockquote><h3 id="作为子查询的替代品" tabindex="-1"><a class="header-anchor" href="#作为子查询的替代品"><span>作为子查询的替代品</span></a></h3><p>IoTDB现在不支持子查询，但是我们可以通过创建连续查询得到相似的功能。我们可以将子查询注册为一个连续查询，并将子查询的结果物化到目标序列中，外层查询再直接查询哪个目标序列。</p><h4 id="例子-2" tabindex="-1"><a class="header-anchor" href="#例子-2"><span>例子</span></a></h4><p>IoTDB并不会接收如下的嵌套子查询。这个查询会计算s1序列每隔30分钟的非空值数量的平均值：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">SELECT</span><span style="color:#56B6C2;"> avg</span><span style="color:#ABB2BF;">(count_s1) </span><span style="color:#C678DD;">from</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">select</span><span style="color:#56B6C2;"> count</span><span style="color:#ABB2BF;">(s1) </span><span style="color:#C678DD;">as</span><span style="color:#ABB2BF;"> count_s1 </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">sg</span><span style="color:#ABB2BF;">.d </span><span style="color:#C678DD;">group by</span><span style="color:#ABB2BF;">([</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">, </span><span style="color:#C678DD;">now</span><span style="color:#ABB2BF;">()), 30m));</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>为了得到相同的结果，我们可以：</p><p><strong>1. 创建一个连续查询</strong></p><p>这一步执行内层子查询部分。下面创建的连续查询每隔30分钟计算一次<code>root.sg.d.s1</code>序列的非空值数量，并将结果写入目标序列<code>root.sg_count.d.count_s1</code>中。</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">CREATE</span><span style="color:#ABB2BF;"> CQ s1_count_cq </span></span>
<span class="line"><span style="color:#C678DD;">BEGIN</span><span style="color:#ABB2BF;"> </span></span>
<span class="line"><span style="color:#C678DD;">    SELECT</span><span style="color:#56B6C2;"> count</span><span style="color:#ABB2BF;">(s1)  </span></span>
<span class="line"><span style="color:#C678DD;">        INTO</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">sg_count</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">d</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">count_s1</span></span>
<span class="line"><span style="color:#C678DD;">        FROM</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">sg</span><span style="color:#ABB2BF;">.d</span></span>
<span class="line"><span style="color:#C678DD;">        GROUP BY</span><span style="color:#ABB2BF;">(30m)</span></span>
<span class="line"><span style="color:#C678DD;">END</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>2. 查询连续查询的结果</strong></p><p>这一步执行外层查询的avg([...])部分。</p><p>查询序列<code>root.sg_count.d.count_s1</code>的值，并计算平均值：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">SELECT</span><span style="color:#56B6C2;"> avg</span><span style="color:#ABB2BF;">(count_s1) </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">sg_count</span><span style="color:#ABB2BF;">.d;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="连续查询相关的配置参数" tabindex="-1"><a class="header-anchor" href="#连续查询相关的配置参数"><span>连续查询相关的配置参数</span></a></h2><table><thead><tr><th style="text-align:left;">参数名</th><th>描述</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td style="text-align:left;"><code>continuous_query_submit_thread_count</code></td><td>用于周期性提交连续查询执行任务的线程数</td><td>int32</td><td>2</td></tr><tr><td style="text-align:left;"><code>continuous_query_min_every_interval_in_ms</code></td><td>系统允许的连续查询最小的周期性时间间隔</td><td>duration</td><td>1000</td></tr></tbody></table>`,106)]))}const r=n(p,[["render",i],["__file","Database-Programming.html.vue"]]),o=JSON.parse('{"path":"/zh/UserGuide/latest/User-Manual/Database-Programming.html","title":"连续查询","lang":"zh-CN","frontmatter":{"description":"连续查询 简介 连续查询(Continuous queries, aka CQ) 是对实时数据周期性地自动执行的查询，并将查询结果写入指定的时间序列中。 用户可以通过连续查询实现滑动窗口流式计算，如计算某个序列每小时平均温度，并写入一个新序列中。用户可以自定义 RESAMPLE 子句去创建不同的滑动窗口，可以实现对于乱序数据一定程度的容忍。 语法 注意...","head":[["link",{"rel":"alternate","hreflang":"en-us","href":"https://iotdb.apache.org/UserGuide/latest/User-Manual/Database-Programming.html"}],["meta",{"property":"og:url","content":"https://iotdb.apache.org/zh/UserGuide/latest/User-Manual/Database-Programming.html"}],["meta",{"property":"og:site_name","content":"IoTDB Website"}],["meta",{"property":"og:title","content":"连续查询"}],["meta",{"property":"og:description","content":"连续查询 简介 连续查询(Continuous queries, aka CQ) 是对实时数据周期性地自动执行的查询，并将查询结果写入指定的时间序列中。 用户可以通过连续查询实现滑动窗口流式计算，如计算某个序列每小时平均温度，并写入一个新序列中。用户可以自定义 RESAMPLE 子句去创建不同的滑动窗口，可以实现对于乱序数据一定程度的容忍。 语法 注意..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://alioss.timecho.com/docs/img/UserGuide/Process-Data/Continuous-Query/pic1.png?raw=true"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-12-16T09:28:53.000Z"}],["meta",{"property":"article:modified_time","content":"2024-12-16T09:28:53.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"连续查询\\",\\"image\\":[\\"https://alioss.timecho.com/docs/img/UserGuide/Process-Data/Continuous-Query/pic1.png?raw=true\\",\\"https://alioss.timecho.com/docs/img/UserGuide/Process-Data/Continuous-Query/pic2.png?raw=true\\",\\"https://alioss.timecho.com/docs/img/UserGuide/Process-Data/Continuous-Query/pic3.png?raw=true\\",\\"https://alioss.timecho.com/docs/img/UserGuide/Process-Data/Continuous-Query/pic4.png?raw=true\\"],\\"dateModified\\":\\"2024-12-16T09:28:53.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"简介","slug":"简介","link":"#简介","children":[]},{"level":2,"title":"语法","slug":"语法","link":"#语法","children":[{"level":3,"title":"连续查询语法中参数含义的描述","slug":"连续查询语法中参数含义的描述","link":"#连续查询语法中参数含义的描述","children":[]}]},{"level":2,"title":"连续查询的用例","slug":"连续查询的用例","link":"#连续查询的用例","children":[{"level":3,"title":"配置连续查询执行的周期性间隔","slug":"配置连续查询执行的周期性间隔","link":"#配置连续查询执行的周期性间隔","children":[]},{"level":3,"title":"配置连续查询的时间窗口大小","slug":"配置连续查询的时间窗口大小","link":"#配置连续查询的时间窗口大小","children":[]},{"level":3,"title":"同时配置连续查询执行的周期性间隔和时间窗口大小","slug":"同时配置连续查询执行的周期性间隔和时间窗口大小","link":"#同时配置连续查询执行的周期性间隔和时间窗口大小","children":[]},{"level":3,"title":"配置连续查询每次查询执行时间窗口的结束时间","slug":"配置连续查询每次查询执行时间窗口的结束时间","link":"#配置连续查询每次查询执行时间窗口的结束时间","children":[]},{"level":3,"title":"没有GROUP BY TIME子句的连续查询","slug":"没有group-by-time子句的连续查询","link":"#没有group-by-time子句的连续查询","children":[]}]},{"level":2,"title":"连续查询的管理","slug":"连续查询的管理","link":"#连续查询的管理","children":[{"level":3,"title":"查询系统已有的连续查询","slug":"查询系统已有的连续查询","link":"#查询系统已有的连续查询","children":[]},{"level":3,"title":"删除已有的连续查询","slug":"删除已有的连续查询","link":"#删除已有的连续查询","children":[]},{"level":3,"title":"修改已有的连续查询","slug":"修改已有的连续查询","link":"#修改已有的连续查询","children":[]}]},{"level":2,"title":"连续查询的使用场景","slug":"连续查询的使用场景","link":"#连续查询的使用场景","children":[{"level":3,"title":"对数据进行降采样并对降采样后的数据使用不同的保留策略","slug":"对数据进行降采样并对降采样后的数据使用不同的保留策略","link":"#对数据进行降采样并对降采样后的数据使用不同的保留策略","children":[]},{"level":3,"title":"预计算代价昂贵的查询","slug":"预计算代价昂贵的查询","link":"#预计算代价昂贵的查询","children":[]},{"level":3,"title":"作为子查询的替代品","slug":"作为子查询的替代品","link":"#作为子查询的替代品","children":[]}]},{"level":2,"title":"连续查询相关的配置参数","slug":"连续查询相关的配置参数","link":"#连续查询相关的配置参数","children":[]}],"git":{"createdTime":1690869728000,"updatedTime":1734341333000,"contributors":[{"name":"W1y1r","username":"W1y1r","email":"150988475+W1y1r@users.noreply.github.com","commits":6,"url":"https://github.com/W1y1r"},{"name":"Zhihao Shen","username":"Zhihao Shen","email":"zhihaoshen7@qq.com","commits":2,"url":"https://github.com/Zhihao Shen"},{"name":"majialin","username":"majialin","email":"107627937+mal117@users.noreply.github.com","commits":3,"url":"https://github.com/majialin"},{"name":"shuwenwei","username":"shuwenwei","email":"55970239+shuwenwei@users.noreply.github.com","commits":1,"url":"https://github.com/shuwenwei"},{"name":"Tanxilo","username":"Tanxilo","email":"101696091+tanxilo@users.noreply.github.com","commits":1,"url":"https://github.com/Tanxilo"},{"name":"wanghui42","username":"wanghui42","email":"105700158+wanghui42@users.noreply.github.com","commits":3,"url":"https://github.com/wanghui42"},{"name":"CritasWang","username":"CritasWang","email":"critas@outlook.com","commits":2,"url":"https://github.com/CritasWang"},{"name":"Lei","username":"Lei","email":"33376433+LeiRui@users.noreply.github.com","commits":1,"url":"https://github.com/Lei"}]},"readingTime":{"minutes":16.86,"words":5059},"filePathRelative":"zh/UserGuide/latest/User-Manual/Database-Programming.md","localizedDate":"2023年8月1日","autoDesc":true}');export{r as comp,o as data};
