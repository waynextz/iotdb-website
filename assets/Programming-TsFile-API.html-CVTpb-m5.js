import{_ as a,c as e,b as l,o as n}from"./app-BrzuM4xY.js";const o={};function p(t,s){return n(),e("div",null,s[0]||(s[0]=[l(`<h1 id="tsfile-api" tabindex="-1"><a class="header-anchor" href="#tsfile-api"><span>TsFile API</span></a></h1><p>TsFile 是在 IoTDB 中使用的时间序列的文件格式。在这个章节中，我们将介绍这种文件格式的用法。</p><h2 id="安装-tsfile-library" tabindex="-1"><a class="header-anchor" href="#安装-tsfile-library"><span>安装 TsFile library</span></a></h2><p>在您自己的项目中有两种方法使用 TsFile .</p><ul><li>使用 jar 包：编译源码生成 jar 包</li></ul><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#61AFEF;">git</span><span style="color:#98C379;"> clone</span><span style="color:#98C379;"> https://github.com/apache/iotdb.git</span></span>
<span class="line"><span style="color:#56B6C2;">cd</span><span style="color:#98C379;"> iotdb-core/tsfile/</span></span>
<span class="line"><span style="color:#61AFEF;">mvn</span><span style="color:#98C379;"> clean</span><span style="color:#98C379;"> package</span><span style="color:#D19A66;"> -Dmaven.test.skip=true</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>命令执行完成之后，所有的 jar 包都可以从 <code>target/</code> 目录下找到。之后您可以在自己的工程中导入 <code>target/tsfile-1.0.0.jar</code>.</p><ul><li>使用 Maven 依赖：</li></ul><p>编译源码并且部署到您的本地仓库中需要 3 步：</p><ol><li>下载源码</li></ol><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#61AFEF;">git</span><span style="color:#98C379;"> clone</span><span style="color:#98C379;"> https://github.com/apache/iotdb.git</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol start="2"><li>编译源码和部署到本地仓库</li></ol><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#56B6C2;">cd</span><span style="color:#98C379;"> iotdb-core/tsfile/</span></span>
<span class="line"><span style="color:#61AFEF;">mvn</span><span style="color:#98C379;"> clean</span><span style="color:#98C379;"> install</span><span style="color:#D19A66;"> -Dmaven.test.skip=true</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>在您自己的工程中增加依赖：</li></ol><div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" data-title="xml" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">dependency</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">  &lt;</span><span style="color:#E06C75;">groupId</span><span style="color:#ABB2BF;">&gt;org.apache.iotdb&lt;/</span><span style="color:#E06C75;">groupId</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">  &lt;</span><span style="color:#E06C75;">artifactId</span><span style="color:#ABB2BF;">&gt;tsfile&lt;/</span><span style="color:#E06C75;">artifactId</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">  &lt;</span><span style="color:#E06C75;">version</span><span style="color:#ABB2BF;">&gt;0.12.0&lt;/</span><span style="color:#E06C75;">version</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;/</span><span style="color:#E06C75;">dependency</span><span style="color:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>或者，您可以直接使用官方的 Maven 仓库：</p><ol><li>首先，在<code>\${username}\\.m2\\settings.xml</code>目录下的<code>settings.xml</code>文件中<code>&lt;profiles&gt;</code><br> 节中增加<code>&lt;profile&gt;</code>，内容如下：</li></ol><div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" data-title="xml" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">profile</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">  &lt;</span><span style="color:#E06C75;">id</span><span style="color:#ABB2BF;">&gt;allow-snapshots&lt;/</span><span style="color:#E06C75;">id</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">     &lt;</span><span style="color:#E06C75;">activation</span><span style="color:#ABB2BF;">&gt;&lt;</span><span style="color:#E06C75;">activeByDefault</span><span style="color:#ABB2BF;">&gt;true&lt;/</span><span style="color:#E06C75;">activeByDefault</span><span style="color:#ABB2BF;">&gt;&lt;/</span><span style="color:#E06C75;">activation</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">  &lt;</span><span style="color:#E06C75;">repositories</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">    &lt;</span><span style="color:#E06C75;">repository</span><span style="color:#ABB2BF;">&gt;  </span></span>
<span class="line"><span style="color:#ABB2BF;">       &lt;</span><span style="color:#E06C75;">id</span><span style="color:#ABB2BF;">&gt;apache.snapshots&lt;/</span><span style="color:#E06C75;">id</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">       &lt;</span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;">&gt;Apache Development Snapshot Repository&lt;/</span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">       &lt;</span><span style="color:#E06C75;">url</span><span style="color:#ABB2BF;">&gt;https://repository.apache.org/content/repositories/snapshots/&lt;/</span><span style="color:#E06C75;">url</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">       &lt;</span><span style="color:#E06C75;">releases</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">           &lt;</span><span style="color:#E06C75;">enabled</span><span style="color:#ABB2BF;">&gt;false&lt;/</span><span style="color:#E06C75;">enabled</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">       &lt;/</span><span style="color:#E06C75;">releases</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">       &lt;</span><span style="color:#E06C75;">snapshots</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">           &lt;</span><span style="color:#E06C75;">enabled</span><span style="color:#ABB2BF;">&gt;true&lt;/</span><span style="color:#E06C75;">enabled</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">       &lt;/</span><span style="color:#E06C75;">snapshots</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">     &lt;/</span><span style="color:#E06C75;">repository</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">  &lt;/</span><span style="color:#E06C75;">repositories</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;/</span><span style="color:#E06C75;">profile</span><span style="color:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>之后您可以在您的工程中增加如下依赖：</li></ol><div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" data-title="xml" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">dependency</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">  &lt;</span><span style="color:#E06C75;">groupId</span><span style="color:#ABB2BF;">&gt;org.apache.iotdb&lt;/</span><span style="color:#E06C75;">groupId</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">  &lt;</span><span style="color:#E06C75;">artifactId</span><span style="color:#ABB2BF;">&gt;tsfile&lt;/</span><span style="color:#E06C75;">artifactId</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">  &lt;</span><span style="color:#E06C75;">version</span><span style="color:#ABB2BF;">&gt;1.0.0&lt;/</span><span style="color:#E06C75;">version</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;/</span><span style="color:#E06C75;">dependency</span><span style="color:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="tsfile-的使用" tabindex="-1"><a class="header-anchor" href="#tsfile-的使用"><span>TsFile 的使用</span></a></h2><p>本章节演示 TsFile 的详细用法。</p><p>时序数据 (Time-series Data)<br> 一个时序是由 4 个序列组成，分别是 device, measurement, time, value。</p><ul><li><p><strong>measurement</strong>: 时间序列描述的是一个物理或者形式的测量 (measurement)，比如：城市的温度，一些商品的销售数量或者是火车在不同时间的速度。<br> 传统的传感器（如温度计）也采用单次测量 (measurement) 并产生时间序列，我们将在下面交替使用测量 (measurement) 和传感器。</p></li><li><p><strong>device</strong>: 一个设备指的是一个正在进行多次测量（产生多个时间序列）的实体，例如，<br> ​ ​ ​ 一列正在运行的火车监控它的速度、油表、它已经运行的英里数，当前的乘客每个都被传送到一个时间序列。</p></li></ul><p><strong>单行数据</strong>: 在许多工业应用程序中，一个设备通常包含多个传感器，这些传感器可能同时具有多个值，这称为一行数据。</p><p>在形式上，一行数据包含一个<code>device_id</code>，它是一个时间戳，表示从 1970 年 1 月 1 日 00:00:00 开始的毫秒数，<br> 以及由<code>measurement_id</code>和相应的<code>value</code>组成的几个数据对。一行中的所有数据对都属于这个<code>device_id</code>，并且具有相同的时间戳。<br> 如果其中一个度量值<code>measurements</code>在某个时间戳<code>timestamp</code>没有值<code>value</code>，将使用一个空格表示（实际上 TsFile 并不存储 null 值）。<br> 其格式如下：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>device_id, timestamp, &lt;measurement_id, value&gt;...</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>示例数据如下所示。在本例中，两个度量值 (measurement) 的数据类型分别是<code>INT32</code>和<code>FLOAT</code>。</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>device_1, 1490860659000, m1, 10, m2, 12.12</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="写入-tsfile" tabindex="-1"><a class="header-anchor" href="#写入-tsfile"><span>写入 TsFile</span></a></h3><p>TsFile 可以通过以下三个步骤生成，完整的代码参见&quot;写入 TsFile 示例&quot;章节。</p><ol><li><p>构造一个<code>TsFileWriter</code>实例。</p><p>以下是可用的构造函数：</p><ul><li>没有预定义 schema</li></ul><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">public</span><span style="color:#61AFEF;"> TsFileWriter</span><span style="color:#E06C75;">(</span><span style="color:#E5C07B;">File</span><span style="color:#E06C75;"> file) throws </span><span style="color:#E5C07B;">IOException</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>预定义 schema</li></ul><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">public</span><span style="color:#61AFEF;"> TsFileWriter</span><span style="color:#E06C75;">(</span><span style="color:#E5C07B;">File</span><span style="color:#E06C75;"> file</span><span style="color:#ABB2BF;">,</span><span style="color:#E5C07B;"> Schema</span><span style="color:#E06C75;"> schema) throws </span><span style="color:#E5C07B;">IOException</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>这个是用于使用 HDFS 文件系统的。<code>TsFileOutput</code>可以是<code>HDFSOutput</code>类的一个实例。</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">public</span><span style="color:#61AFEF;"> TsFileWriter</span><span style="color:#E06C75;">(</span><span style="color:#E5C07B;">TsFileOutput</span><span style="color:#E06C75;"> output</span><span style="color:#ABB2BF;">,</span><span style="color:#E5C07B;"> Schema</span><span style="color:#E06C75;"> schema) throws </span><span style="color:#E5C07B;">IOException</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>如果你想自己设置一些 TSFile 的配置，你可以使用<code>config</code>参数。比如：</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#E5C07B;">TSFileConfig</span><span style="color:#E06C75;"> conf </span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> TSFileConfig</span><span style="color:#E06C75;">()</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">conf</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">setTSFileStorageFs</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;HDFS&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">TsFileWriter</span><span style="color:#E06C75;"> tsFileWriter </span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> TsFileWriter</span><span style="color:#E06C75;">(file</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;"> schema</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;"> conf)</span><span style="color:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在上面的例子中，数据文件将存储在 HDFS 中，而不是本地文件系统中。如果你想在本地文件系统中存储数据文件，你可以使用<code>conf.setTSFileStorageFs(&quot;LOCAL&quot;)</code>，这也是默认的配置。</p><p>您还可以通过<code>config.setHdfsIp(...)</code>和<code>config.setHdfsPort(...)</code>来配置 HDFS 的 IP 和端口。默认的 IP 是<code>localhost</code>，默认的<code>RPC</code>端口是<code>9000</code>.</p><p><strong>参数：</strong></p><ul><li>file : 写入 TsFile 数据的文件</li><li>schema : 文件的 schemas，将在下章进行介绍</li><li>config : TsFile 的一些配置项</li></ul></li><li><p>添加测量值 (measurement)</p><p>你也可以先创建一个<code>Schema</code>类的实例然后把它传递给<code>TsFileWriter</code>类的构造函数</p><p><code>Schema</code>类保存的是一个映射关系，key 是一个 measurement 的名字，value 是 measurement schema.</p><p>下面是一系列接口：</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// Create an empty Schema or from an existing map</span></span>
<span class="line"><span style="color:#C678DD;">public</span><span style="color:#61AFEF;"> Schema</span><span style="color:#E06C75;">()</span></span>
<span class="line"><span style="color:#C678DD;">public</span><span style="color:#61AFEF;"> Schema</span><span style="color:#E06C75;">(</span><span style="color:#E5C07B;">Map</span><span style="color:#56B6C2;">&lt;</span><span style="color:#E06C75;">String</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;"> MeasurementSchema</span><span style="color:#56B6C2;">&gt;</span><span style="color:#E06C75;"> measurements)</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// Use this two interfaces to add measurements</span></span>
<span class="line"><span style="color:#C678DD;">public</span><span style="color:#C678DD;"> void</span><span style="color:#61AFEF;"> registerMeasurement</span><span style="color:#E06C75;">(</span><span style="color:#E5C07B;">MeasurementSchema</span><span style="color:#E06C75;"> descriptor)</span></span>
<span class="line"><span style="color:#C678DD;">public</span><span style="color:#C678DD;"> void</span><span style="color:#61AFEF;"> registerMeasurements</span><span style="color:#E06C75;">(</span><span style="color:#E5C07B;">Map</span><span style="color:#56B6C2;">&lt;</span><span style="color:#E06C75;">String</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;"> MeasurementSchema</span><span style="color:#56B6C2;">&gt;</span><span style="color:#E06C75;"> measurements)</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// Some useful getter and checker</span></span>
<span class="line"><span style="color:#C678DD;">public</span><span style="color:#E5C07B;"> TSDataType</span><span style="color:#61AFEF;"> getMeasurementDataType</span><span style="color:#E06C75;">(</span><span style="color:#E5C07B;">String</span><span style="color:#E06C75;"> measurementId)</span></span>
<span class="line"><span style="color:#C678DD;">public</span><span style="color:#E5C07B;"> MeasurementSchema</span><span style="color:#61AFEF;"> getMeasurementSchema</span><span style="color:#E06C75;">(</span><span style="color:#E5C07B;">String</span><span style="color:#E06C75;"> measurementId)</span></span>
<span class="line"><span style="color:#C678DD;">public</span><span style="color:#E5C07B;"> Map</span><span style="color:#56B6C2;">&lt;</span><span style="color:#E06C75;">String</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;"> MeasurementSchema</span><span style="color:#56B6C2;">&gt;</span><span style="color:#61AFEF;"> getAllMeasurementSchema</span><span style="color:#E06C75;">()</span></span>
<span class="line"><span style="color:#C678DD;">public</span><span style="color:#C678DD;"> boolean</span><span style="color:#61AFEF;"> hasMeasurement</span><span style="color:#E06C75;">(</span><span style="color:#E5C07B;">String</span><span style="color:#E06C75;"> measurementId)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>你可以在<code>TsFileWriter</code>类中使用以下接口来添加额外的测量 (measurement):<br> ​</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">public</span><span style="color:#C678DD;"> void</span><span style="color:#61AFEF;"> addMeasurement</span><span style="color:#E06C75;">(</span><span style="color:#E5C07B;">MeasurementSchema</span><span style="color:#E06C75;"> measurementSchema) throws </span><span style="color:#E5C07B;">WriteProcessException</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><code>MeasurementSchema</code>类保存了一个测量 (measurement) 的信息，有几个构造函数：</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">public</span><span style="color:#61AFEF;"> MeasurementSchema</span><span style="color:#E06C75;">(</span><span style="color:#E5C07B;">String</span><span style="color:#E06C75;"> measurementId</span><span style="color:#ABB2BF;">,</span><span style="color:#E5C07B;"> TSDataType</span><span style="color:#E06C75;"> type</span><span style="color:#ABB2BF;">,</span><span style="color:#E5C07B;"> TSEncoding</span><span style="color:#E06C75;"> encoding)</span></span>
<span class="line"><span style="color:#C678DD;">public</span><span style="color:#61AFEF;"> MeasurementSchema</span><span style="color:#E06C75;">(</span><span style="color:#E5C07B;">String</span><span style="color:#E06C75;"> measurementId</span><span style="color:#ABB2BF;">,</span><span style="color:#E5C07B;"> TSDataType</span><span style="color:#E06C75;"> type</span><span style="color:#ABB2BF;">,</span><span style="color:#E5C07B;"> TSEncoding</span><span style="color:#E06C75;"> encoding</span><span style="color:#ABB2BF;">,</span><span style="color:#E5C07B;"> CompressionType</span><span style="color:#E06C75;"> compressionType)</span></span>
<span class="line"><span style="color:#C678DD;">public</span><span style="color:#61AFEF;"> MeasurementSchema</span><span style="color:#E06C75;">(</span><span style="color:#E5C07B;">String</span><span style="color:#E06C75;"> measurementId</span><span style="color:#ABB2BF;">,</span><span style="color:#E5C07B;"> TSDataType</span><span style="color:#E06C75;"> type</span><span style="color:#ABB2BF;">,</span><span style="color:#E5C07B;"> TSEncoding</span><span style="color:#E06C75;"> encoding</span><span style="color:#ABB2BF;">,</span><span style="color:#E5C07B;"> CompressionType</span><span style="color:#E06C75;"> compressionType</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;"> </span></span>
<span class="line"><span style="color:#E5C07B;">Map</span><span style="color:#56B6C2;">&lt;</span><span style="color:#E06C75;">String</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;"> String</span><span style="color:#56B6C2;">&gt;</span><span style="color:#E06C75;"> props)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>参数：</strong><br> ​</p><ul><li><p>measurementID: 测量的名称，通常是传感器的名称。</p></li><li><p>type: 数据类型，现在支持六种类型：<code>BOOLEAN</code>, <code>INT32</code>, <code>INT64</code>, <code>FLOAT</code>, <code>DOUBLE</code>, <code>TEXT</code>;</p></li><li><p>encoding: 编码类型。</p></li><li><p>compression: 压缩方式。现在支持 <code>UNCOMPRESSED</code> 和 <code>SNAPPY</code>.</p></li><li><p>props: 特殊数据类型的属性。比如说<code>FLOAT</code>和<code>DOUBLE</code>可以设置<code>max_point_number</code>，<code>TEXT</code>可以设置<code>max_string_length</code>。<br> 可以使用 Map 来保存键值对，比如 (&quot;max_point_number&quot;, &quot;3&quot;)。</p></li></ul><blockquote><p><strong>注意：</strong> 虽然一个测量 (measurement) 的名字可以被用在多个 deltaObjects 中，但是它的参数是不允许被修改的。比如：<br> 不允许多次为同一个测量 (measurement) 名添加不同类型的编码。下面是一个错误示例：</p></blockquote><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// The measurement &quot;sensor_1&quot; is float type</span></span>
<span class="line"><span style="color:#61AFEF;">addMeasurement</span><span style="color:#E06C75;">(</span><span style="color:#C678DD;">new</span><span style="color:#61AFEF;"> MeasurementSchema</span><span style="color:#E06C75;">(</span><span style="color:#98C379;">&quot;sensor_1&quot;</span><span style="color:#ABB2BF;">,</span><span style="color:#E5C07B;"> TSDataType</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">FLOAT</span><span style="color:#ABB2BF;">,</span><span style="color:#E5C07B;"> TSEncoding</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">RLE</span><span style="color:#E06C75;">))</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// This call will throw a WriteProcessException exception</span></span>
<span class="line"><span style="color:#61AFEF;">addMeasurement</span><span style="color:#E06C75;">(</span><span style="color:#C678DD;">new</span><span style="color:#61AFEF;"> MeasurementSchema</span><span style="color:#E06C75;">(</span><span style="color:#98C379;">&quot;sensor_1&quot;</span><span style="color:#ABB2BF;">,</span><span style="color:#E5C07B;"> TSDataType</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">INT32</span><span style="color:#ABB2BF;">,</span><span style="color:#E5C07B;"> TSEncoding</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">RLE</span><span style="color:#E06C75;">))</span><span style="color:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>插入和写入数据。</p><p>使用这个接口创建一个新的<code>TSRecord</code>（时间戳和设备对）。</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">public</span><span style="color:#61AFEF;"> TSRecord</span><span style="color:#E06C75;">(</span><span style="color:#C678DD;">long</span><span style="color:#E06C75;"> timestamp</span><span style="color:#ABB2BF;">,</span><span style="color:#E5C07B;"> String</span><span style="color:#E06C75;"> deviceId)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>然后创建一个<code>DataPoint</code>（度量 (measurement) 和值的对应），并使用 addTuple 方法将数据 DataPoint 添加正确的值到 TsRecord。</p><p>用下面这种方法写</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">public</span><span style="color:#C678DD;"> void</span><span style="color:#61AFEF;"> write</span><span style="color:#E06C75;">(</span><span style="color:#E5C07B;">TSRecord</span><span style="color:#E06C75;"> record) throws IOException</span><span style="color:#ABB2BF;">,</span><span style="color:#E5C07B;"> WriteProcessException</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>调用<code>close</code>方法来完成写入过程。</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">public</span><span style="color:#C678DD;"> void</span><span style="color:#61AFEF;"> close</span><span style="color:#E06C75;">() throws </span><span style="color:#E5C07B;">IOException</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ol><p>我们也支持将数据写入已关闭的 TsFile 文件中。</p><ol><li><p>使用<code>ForceAppendTsFileWriter</code>打开已经关闭的文件。</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">public</span><span style="color:#61AFEF;"> ForceAppendTsFileWriter</span><span style="color:#E06C75;">(</span><span style="color:#E5C07B;">File</span><span style="color:#E06C75;"> file) throws </span><span style="color:#E5C07B;">IOException</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>调用 <code>doTruncate</code> 去掉文件的 Metadata 部分</p></li><li><p>使用 <code>ForceAppendTsFileWriter</code> 构造另一个<code>TsFileWriter</code></p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">public</span><span style="color:#61AFEF;"> TsFileWriter</span><span style="color:#E06C75;">(</span><span style="color:#E5C07B;">TsFileIOWriter</span><span style="color:#E06C75;"> fileWriter) throws </span><span style="color:#E5C07B;">IOException</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ol><p>请注意 此时需要重新添加测量值 (measurement) 再进行上述写入操作。</p><h3 id="写入-tsfile-示例" tabindex="-1"><a class="header-anchor" href="#写入-tsfile-示例"><span>写入 TsFile 示例</span></a></h3><p>您需要安装 TsFile 到本地的 Maven 仓库中。</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#61AFEF;">mvn</span><span style="color:#98C379;"> clean</span><span style="color:#98C379;"> install</span><span style="color:#D19A66;"> -pl</span><span style="color:#98C379;"> iotdb-core/tsfile</span><span style="color:#D19A66;"> -am</span><span style="color:#D19A66;"> -DskipTests</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>如果存在<strong>非对齐</strong>的时序数据（比如：不是所有的传感器都有值），您可以通过构造** TSRecord **来写入。</p><p>更详细的例子可以在</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>/example/tsfile/src/main/java/org/apache/iotdb/tsfile/TsFileWriteWithTSRecord.java</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>中查看</p><p>如果所有时序数据都是<strong>对齐</strong>的，您可以通过构造** Tablet **来写入数据。</p><p>更详细的例子可以在</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>/example/tsfile/src/main/java/org/apache/iotdb/tsfile/TsFileWriteWithTablet.java</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>中查看</p><p>在已关闭的 TsFile 文件中写入新数据的详细例子可以在</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>/example/tsfile/src/main/java/org/apache/iotdb/tsfile/TsFileForceAppendWrite.java</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>中查看</p><h3 id="读取-tsfile-接口" tabindex="-1"><a class="header-anchor" href="#读取-tsfile-接口"><span>读取 TsFile 接口</span></a></h3><ul><li>路径的定义</li></ul><p>路径是一个点 (.) 分隔的字符串，它唯一地标识 TsFile 中的时间序列，例如：&quot;root.area_1.device_1.sensor_1&quot;。<br> 最后一部分&quot;sensor_1&quot;称为&quot;measurementId&quot;，其余部分&quot;root.area_1.device_1&quot;称为 deviceId。<br> 正如之前提到的，不同设备中的相同测量 (measurement) 具有相同的数据类型和编码，设备也是唯一的。</p><p>在 read 接口中，参数<code>paths</code>表示要选择的测量值 (measurement)。<br> Path 实例可以很容易地通过类<code>Path</code>来构造。例如：</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#E5C07B;">Path</span><span style="color:#E06C75;"> p </span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> Path</span><span style="color:#E06C75;">(</span><span style="color:#98C379;">&quot;device_1.sensor_1&quot;</span><span style="color:#E06C75;">)</span><span style="color:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>我们可以为查询传递一个 ArrayList 路径，以支持多个路径查询。</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#E5C07B;">List</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">Path</span><span style="color:#ABB2BF;">&gt;</span><span style="color:#E06C75;"> paths </span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;"> new</span><span style="color:#E5C07B;"> ArrayList</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">Path</span><span style="color:#ABB2BF;">&gt;</span><span style="color:#E06C75;">()</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">paths</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">add</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">new</span><span style="color:#61AFEF;"> Path</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;device_1.sensor_1&quot;</span><span style="color:#ABB2BF;">));</span></span>
<span class="line"><span style="color:#E5C07B;">paths</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">add</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">new</span><span style="color:#61AFEF;"> Path</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;device_1.sensor_3&quot;</span><span style="color:#ABB2BF;">));</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><strong>注意：</strong> 在构造路径时，参数的格式应该是一个点 (.) 分隔的字符串，最后一部分是 measurement，其余部分确认为 deviceId。</p></blockquote><ul><li><p>定义 Filter</p><ul><li><p>使用条件过滤<br> 在 TsFile 读取过程中使用 Filter 来选择满足一个或多个给定条件的数据。</p></li><li><p>IExpression<br><code>IExpression</code>是一个过滤器表达式接口，它将被传递给系统查询时调用。<br> 我们创建一个或多个筛选器表达式，并且可以使用<code>Binary Filter Operators</code>将它们连接形成最终表达式。</p></li></ul></li><li><p><strong>创建一个 Filter 表达式</strong></p><p>有两种类型的过滤器。</p><ul><li>TimeFilter: 使用时序数据中的<code>time</code>过滤。</li></ul><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#E5C07B;">IExpression</span><span style="color:#E06C75;"> timeFilterExpr </span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> GlobalTimeExpression</span><span style="color:#E06C75;">(TimeFilter)</span><span style="color:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul><p>使用以下关系获得一个<code>TimeFilter</code>对象（值是一个 long 型变量）。</p><table><thead><tr><th>Relationship</th><th>Description</th></tr></thead><tbody><tr><td>TimeFilter.eq(value)</td><td>选择时间等于值的数据</td></tr><tr><td><a href="http://TimeFilter.lt" target="_blank" rel="noopener noreferrer">TimeFilter.lt</a>(value)</td><td>选择时间小于值的数据</td></tr><tr><td><a href="http://TimeFilter.gt" target="_blank" rel="noopener noreferrer">TimeFilter.gt</a>(value)</td><td>选择时间大于值的数据</td></tr><tr><td>TimeFilter.ltEq(value)</td><td>选择时间小于等于值的数据</td></tr><tr><td>TimeFilter.gtEq(value)</td><td>选择时间大于等于值的数据</td></tr><tr><td>TimeFilter.notEq(value)</td><td>选择时间不等于值的数据</td></tr><tr><td>TimeFilter.not(TimeFilter)</td><td>选择时间不满足另一个时间过滤器的数据</td></tr></tbody></table><ul><li>ValueFilter: 使用时序数据中的<code>value</code>过滤。</li></ul><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#E5C07B;">IExpression</span><span style="color:#E06C75;"> valueFilterExpr </span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> SingleSeriesExpression</span><span style="color:#E06C75;">(Path</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;"> ValueFilter)</span><span style="color:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><code>ValueFilter</code>的用法与<code>TimeFilter</code>相同，只是需要确保值的类型等于 measurement（在路径中定义）的类型。</p><ul><li><p><strong>Binary Filter Operators</strong></p><p>Binary filter operators 可以用来连接两个单独的表达式。</p><ul><li>BinaryExpression.and(Expression, Expression): 选择同时满足两个表达式的数据。</li><li>BinaryExpression.or(Expression, Expression): 选择满足任意一个表达式值的数据。</li></ul></li></ul><p>Filter Expression 示例</p><ul><li><strong>TimeFilterExpression 示例</strong></li></ul><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#E5C07B;">IExpression</span><span style="color:#E06C75;"> timeFilterExpr </span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> GlobalTimeExpression</span><span style="color:#E06C75;">(</span><span style="color:#E5C07B;">TimeFilter</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">eq</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">15</span><span style="color:#ABB2BF;">)</span><span style="color:#E06C75;">)</span><span style="color:#ABB2BF;">;</span><span style="color:#7F848E;font-style:italic;"> // series time = 15</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#E5C07B;">IExpression</span><span style="color:#E06C75;"> timeFilterExpr </span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> GlobalTimeExpression</span><span style="color:#E06C75;">(</span><span style="color:#E5C07B;">TimeFilter</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">ltEq</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">15</span><span style="color:#ABB2BF;">)</span><span style="color:#E06C75;">)</span><span style="color:#ABB2BF;">;</span><span style="color:#7F848E;font-style:italic;"> // series time &lt;= 15</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#E5C07B;">IExpression</span><span style="color:#E06C75;"> timeFilterExpr </span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> GlobalTimeExpression</span><span style="color:#E06C75;">(</span><span style="color:#E5C07B;">TimeFilter</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">lt</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">15</span><span style="color:#ABB2BF;">)</span><span style="color:#E06C75;">)</span><span style="color:#ABB2BF;">;</span><span style="color:#7F848E;font-style:italic;"> // series time &lt; 15</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#E5C07B;">IExpression</span><span style="color:#E06C75;"> timeFilterExpr </span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> GlobalTimeExpression</span><span style="color:#E06C75;">(</span><span style="color:#E5C07B;">TimeFilter</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">gtEq</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">15</span><span style="color:#ABB2BF;">)</span><span style="color:#E06C75;">)</span><span style="color:#ABB2BF;">;</span><span style="color:#7F848E;font-style:italic;"> // series time &gt;= 15</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#E5C07B;">IExpression</span><span style="color:#E06C75;"> timeFilterExpr </span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> GlobalTimeExpression</span><span style="color:#E06C75;">(</span><span style="color:#E5C07B;">TimeFilter</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">notEq</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">15</span><span style="color:#ABB2BF;">)</span><span style="color:#E06C75;">)</span><span style="color:#ABB2BF;">;</span><span style="color:#7F848E;font-style:italic;"> // series time != 15</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#E5C07B;">IExpression</span><span style="color:#E06C75;"> timeFilterExpr </span><span style="color:#56B6C2;">=</span><span style="color:#E5C07B;"> BinaryExpression</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">and</span><span style="color:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#C678DD;">		new</span><span style="color:#61AFEF;"> GlobalTimeExpression</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">TimeFilter</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">gtEq</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">15L</span><span style="color:#ABB2BF;">)),</span></span>
<span class="line"><span style="color:#C678DD;">    new</span><span style="color:#61AFEF;"> GlobalTimeExpression</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">TimeFilter</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">lt</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">25L</span><span style="color:#ABB2BF;">)));</span><span style="color:#7F848E;font-style:italic;"> // 15 &lt;= series time &lt; 25</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#E5C07B;">IExpression</span><span style="color:#E06C75;"> timeFilterExpr </span><span style="color:#56B6C2;">=</span><span style="color:#E5C07B;"> BinaryExpression</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">or</span><span style="color:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#C678DD;">    new</span><span style="color:#61AFEF;"> GlobalTimeExpression</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">TimeFilter</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">gtEq</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">15L</span><span style="color:#ABB2BF;">)),</span></span>
<span class="line"><span style="color:#C678DD;">    new</span><span style="color:#61AFEF;"> GlobalTimeExpression</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">TimeFilter</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">lt</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">25L</span><span style="color:#ABB2BF;">)));</span><span style="color:#7F848E;font-style:italic;"> // series time &gt;= 15 or series time &lt; 25</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>读取接口</li></ul><p>首先，我们打开 TsFile 并从文件路径<code>path</code>中获取一个<code>ReadOnlyTsFile</code>实例。</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#E5C07B;">TsFileSequenceReader</span><span style="color:#E06C75;"> reader </span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> TsFileSequenceReader</span><span style="color:#E06C75;">(path)</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">ReadOnlyTsFile</span><span style="color:#E06C75;"> readTsFile </span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> ReadOnlyTsFile</span><span style="color:#E06C75;">(reader)</span><span style="color:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>接下来，我们准备路径数组和查询表达式，然后通过这个接口得到最终的<code>QueryExpression</code>对象：</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#E5C07B;">QueryExpression</span><span style="color:#E06C75;"> queryExpression </span><span style="color:#56B6C2;">=</span><span style="color:#E5C07B;"> QueryExpression</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">create</span><span style="color:#ABB2BF;">(paths, statement);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>ReadOnlyTsFile 类有两个<code>query</code>方法来执行查询。</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">public</span><span style="color:#E5C07B;"> QueryDataSet</span><span style="color:#61AFEF;"> query</span><span style="color:#E06C75;">(</span><span style="color:#E5C07B;">QueryExpression</span><span style="color:#E06C75;"> queryExpression) throws </span><span style="color:#E5C07B;">IOException</span></span>
<span class="line"><span style="color:#C678DD;">public</span><span style="color:#E5C07B;"> QueryDataSet</span><span style="color:#61AFEF;"> query</span><span style="color:#E06C75;">(</span><span style="color:#E5C07B;">QueryExpression</span><span style="color:#E06C75;"> queryExpression</span><span style="color:#ABB2BF;">,</span><span style="color:#C678DD;"> long</span><span style="color:#E06C75;"> partitionStartOffset</span><span style="color:#ABB2BF;">,</span><span style="color:#C678DD;"> long</span><span style="color:#E06C75;"> partitionEndOffset) throws </span><span style="color:#E5C07B;">IOException</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>此方法是为高级应用（如 TsFile-Spark 连接器）设计的。</p><ul><li><strong>参数</strong> : 对于第二个方法，添加了两个额外的参数来支持部分查询 (Partial Query): <ul><li><code>partitionStartOffset</code>: TsFile 的开始偏移量</li><li><code>partitionEndOffset</code>: TsFile 的结束偏移量</li></ul></li></ul><blockquote><p>什么是部分查询？</p></blockquote><blockquote><p>在一些分布式文件系统中（比如：HDFS), 文件被分成几个部分，这些部分被称为&quot;Blocks&quot;并存储在不同的节点中。在涉及的每个节点上并行执行查询可以提高效率。因此需要部分查询 (Partial Query)。部分查询 (Partial Query) 仅支持查询 TsFile 中被<code>QueryConstant.PARTITION_START_OFFSET</code>和<code>QueryConstant.PARTITION_END_OFFSET</code>分割的部分。</p></blockquote><ul><li>QueryDataset 接口</li></ul><p>上面执行的查询将返回一个<code>QueryDataset</code>对象。</p><p>以下是一些用户常用的接口：</p><ul><li><p><code>bool hasNext();</code></p><p>如果该数据集仍然有数据，则返回 true。</p></li><li><p><code>List&lt;Path&gt; getPaths()</code></p><p>获取这个数据集中的路径。</p></li><li><p><code>List&lt;TSDataType&gt; getDataTypes();</code></p><p>获取数据类型。</p></li><li><p><code>RowRecord next() throws IOException;</code></p><p>获取下一条记录。</p><p><code>RowRecord</code>类包含一个<code>long</code>类型的时间戳和一个<code>List&lt;Field&gt;</code>，用于不同传感器中的数据，我们可以使用两个 getter 方法来获取它们。</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">long</span><span style="color:#61AFEF;"> getTimestamp</span><span style="color:#E06C75;">()</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">List</span><span style="color:#56B6C2;">&lt;</span><span style="color:#E06C75;">Field</span><span style="color:#56B6C2;">&gt;</span><span style="color:#61AFEF;"> getFields</span><span style="color:#E06C75;">()</span><span style="color:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>要从一个字段获取数据，请使用以下方法：</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#E5C07B;">TSDataType</span><span style="color:#61AFEF;"> getDataType</span><span style="color:#E06C75;">()</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">Object</span><span style="color:#61AFEF;"> getObjectValue</span><span style="color:#E06C75;">()</span><span style="color:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="读取现有-tsfile-示例" tabindex="-1"><a class="header-anchor" href="#读取现有-tsfile-示例"><span>读取现有 TsFile 示例</span></a></h3><p>您需要安装 TsFile 到本地的 Maven 仓库中。</p><p>有关查询语句的更详细示例，请参见<br><code>/example/tsfile/src/main/java/org/apache/iotdb/tsfile/TsFileRead.java</code></p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">package</span><span style="color:#C678DD;"> org.apache.iotdb.tsfile</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E5C07B;"> java.io.IOException</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E5C07B;"> java.util.ArrayList</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E5C07B;"> org.apache.iotdb.tsfile.read.ReadOnlyTsFile</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E5C07B;"> org.apache.iotdb.tsfile.read.TsFileSequenceReader</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E5C07B;"> org.apache.iotdb.tsfile.read.common.Path</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E5C07B;"> org.apache.iotdb.tsfile.read.expression.IExpression</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E5C07B;"> org.apache.iotdb.tsfile.read.expression.QueryExpression</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E5C07B;"> org.apache.iotdb.tsfile.read.expression.impl.BinaryExpression</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E5C07B;"> org.apache.iotdb.tsfile.read.expression.impl.GlobalTimeExpression</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E5C07B;"> org.apache.iotdb.tsfile.read.expression.impl.SingleSeriesExpression</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E5C07B;"> org.apache.iotdb.tsfile.read.filter.TimeFilter</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E5C07B;"> org.apache.iotdb.tsfile.read.filter.ValueFilter</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E5C07B;"> org.apache.iotdb.tsfile.read.query.dataset.QueryDataSet</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * The class is to show how to read TsFile file named &quot;test.tsfile&quot;.</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * The TsFile file &quot;test.tsfile&quot; is generated from class TsFileWrite.</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * Run TsFileWrite to generate the test.tsfile first</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> */</span></span>
<span class="line"><span style="color:#C678DD;">public</span><span style="color:#C678DD;"> class</span><span style="color:#E5C07B;"> TsFileRead</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">  private</span><span style="color:#C678DD;"> static</span><span style="color:#C678DD;"> final</span><span style="color:#E5C07B;"> String</span><span style="color:#E06C75;"> DEVICE1 </span><span style="color:#56B6C2;">=</span><span style="color:#98C379;"> &quot;device_1&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">  </span></span>
<span class="line"><span style="color:#C678DD;">  private</span><span style="color:#C678DD;"> static</span><span style="color:#C678DD;"> void</span><span style="color:#61AFEF;"> queryAndPrint</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">ArrayList</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">Path</span><span style="color:#ABB2BF;">&gt; </span><span style="color:#E06C75;font-style:italic;">paths</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">ReadOnlyTsFile</span><span style="color:#E06C75;font-style:italic;"> readTsFile</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">IExpression</span><span style="color:#E06C75;font-style:italic;"> statement</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#C678DD;">          throws</span><span style="color:#E5C07B;"> IOException</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">    QueryExpression</span><span style="color:#E06C75;"> queryExpression</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> QueryExpression</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">create</span><span style="color:#ABB2BF;">(paths, statement);</span></span>
<span class="line"><span style="color:#E5C07B;">    QueryDataSet</span><span style="color:#E06C75;"> queryDataSet</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> readTsFile</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">query</span><span style="color:#ABB2BF;">(queryExpression);</span></span>
<span class="line"><span style="color:#C678DD;">    while</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">queryDataSet</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">hasNext</span><span style="color:#ABB2BF;">()) {</span></span>
<span class="line"><span style="color:#E5C07B;">      System</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">out</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">println</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">queryDataSet</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">next</span><span style="color:#ABB2BF;">());</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#E5C07B;">    System</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">out</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">println</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;------------&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">  public</span><span style="color:#C678DD;"> static</span><span style="color:#C678DD;"> void</span><span style="color:#61AFEF;"> main</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">String</span><span style="color:#ABB2BF;">[] </span><span style="color:#E06C75;font-style:italic;">args</span><span style="color:#ABB2BF;">)</span><span style="color:#C678DD;"> throws</span><span style="color:#E5C07B;"> IOException</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // file path</span></span>
<span class="line"><span style="color:#E5C07B;">    String</span><span style="color:#E06C75;"> path</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &quot;test.tsfile&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // create reader and get the readTsFile interface</span></span>
<span class="line"><span style="color:#C678DD;">    try</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">TsFileSequenceReader</span><span style="color:#E06C75;"> reader</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> TsFileSequenceReader</span><span style="color:#ABB2BF;">(path);</span></span>
<span class="line"><span style="color:#E5C07B;">         ReadOnlyTsFile</span><span style="color:#E06C75;"> readTsFile</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> ReadOnlyTsFile</span><span style="color:#ABB2BF;">(reader)){</span></span>
<span class="line"><span style="color:#ABB2BF;">	 </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // use these paths(all sensors) for all the queries</span></span>
<span class="line"><span style="color:#E5C07B;">    ArrayList</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">Path</span><span style="color:#ABB2BF;">&gt; </span><span style="color:#E06C75;">paths</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#E5C07B;"> ArrayList</span><span style="color:#ABB2BF;">&lt;&gt;();</span></span>
<span class="line"><span style="color:#E5C07B;">    paths</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">add</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">new</span><span style="color:#61AFEF;"> Path</span><span style="color:#ABB2BF;">(DEVICE1, </span><span style="color:#98C379;">&quot;sensor_1&quot;</span><span style="color:#ABB2BF;">));</span></span>
<span class="line"><span style="color:#E5C07B;">    paths</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">add</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">new</span><span style="color:#61AFEF;"> Path</span><span style="color:#ABB2BF;">(DEVICE1, </span><span style="color:#98C379;">&quot;sensor_2&quot;</span><span style="color:#ABB2BF;">));</span></span>
<span class="line"><span style="color:#E5C07B;">    paths</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">add</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">new</span><span style="color:#61AFEF;"> Path</span><span style="color:#ABB2BF;">(DEVICE1, </span><span style="color:#98C379;">&quot;sensor_3&quot;</span><span style="color:#ABB2BF;">));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // no filter, should select 1 2 3 4 6 7 8</span></span>
<span class="line"><span style="color:#61AFEF;">    queryAndPrint</span><span style="color:#ABB2BF;">(paths, readTsFile, </span><span style="color:#D19A66;">null</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">   // time filter : 4 &lt;= time &lt;= 10, should select 4 6 7 8</span></span>
<span class="line"><span style="color:#E5C07B;">    IExpression</span><span style="color:#E06C75;"> timeFilter</span><span style="color:#56B6C2;"> =</span></span>
<span class="line"><span style="color:#E5C07B;">       BinaryExpression</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">and</span><span style="color:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#C678DD;">           new</span><span style="color:#61AFEF;"> GlobalTimeExpression</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">TimeFilter</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">gtEq</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">4L</span><span style="color:#ABB2BF;">)),</span></span>
<span class="line"><span style="color:#C678DD;">           new</span><span style="color:#61AFEF;"> GlobalTimeExpression</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">TimeFilter</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">ltEq</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">10L</span><span style="color:#ABB2BF;">)));</span></span>
<span class="line"><span style="color:#61AFEF;">    queryAndPrint</span><span style="color:#ABB2BF;">(paths, readTsFile, timeFilter);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">   // value filter : device_1.sensor_2 &lt;= 20, should select 1 2 4 6 7</span></span>
<span class="line"><span style="color:#E5C07B;">    IExpression</span><span style="color:#E06C75;"> valueFilter</span><span style="color:#56B6C2;"> =</span></span>
<span class="line"><span style="color:#C678DD;">        new</span><span style="color:#61AFEF;"> SingleSeriesExpression</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">new</span><span style="color:#61AFEF;"> Path</span><span style="color:#ABB2BF;">(DEVICE1, </span><span style="color:#98C379;">&quot;sensor_2&quot;</span><span style="color:#ABB2BF;">), </span><span style="color:#E5C07B;">ValueFilter</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">ltEq</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">20L</span><span style="color:#ABB2BF;">));</span></span>
<span class="line"><span style="color:#61AFEF;">    queryAndPrint</span><span style="color:#ABB2BF;">(paths, readTsFile, valueFilter);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">   // time filter : 4 &lt;= time &lt;= 10, value filter : device_1.sensor_3 &gt;= 20, should select 4 7 8</span></span>
<span class="line"><span style="color:#ABB2BF;">    timeFilter </span><span style="color:#56B6C2;">=</span></span>
<span class="line"><span style="color:#E5C07B;">        BinaryExpression</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">and</span><span style="color:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#C678DD;">            new</span><span style="color:#61AFEF;"> GlobalTimeExpression</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">TimeFilter</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">gtEq</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">4L</span><span style="color:#ABB2BF;">)),</span></span>
<span class="line"><span style="color:#C678DD;">            new</span><span style="color:#61AFEF;"> GlobalTimeExpression</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">TimeFilter</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">ltEq</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">10L</span><span style="color:#ABB2BF;">)));</span></span>
<span class="line"><span style="color:#ABB2BF;">    valueFilter </span><span style="color:#56B6C2;">=</span></span>
<span class="line"><span style="color:#C678DD;">        new</span><span style="color:#61AFEF;"> SingleSeriesExpression</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">new</span><span style="color:#61AFEF;"> Path</span><span style="color:#ABB2BF;">(DEVICE1, </span><span style="color:#98C379;">&quot;sensor_3&quot;</span><span style="color:#ABB2BF;">), </span><span style="color:#E5C07B;">ValueFilter</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">gtEq</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">20L</span><span style="color:#ABB2BF;">));</span></span>
<span class="line"><span style="color:#E5C07B;">    IExpression</span><span style="color:#E06C75;"> finalFilter</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> BinaryExpression</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">and</span><span style="color:#ABB2BF;">(timeFilter, valueFilter);</span></span>
<span class="line"><span style="color:#61AFEF;">    queryAndPrint</span><span style="color:#ABB2BF;">(paths, readTsFile, finalFilter);</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="修改-tsfile-配置项" tabindex="-1"><a class="header-anchor" href="#修改-tsfile-配置项"><span>修改 TsFile 配置项</span></a></h2><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#E5C07B;">TSFileConfig</span><span style="color:#E06C75;"> config </span><span style="color:#56B6C2;">=</span><span style="color:#E5C07B;"> TSFileDescriptor</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getInstance</span><span style="color:#ABB2BF;">().</span><span style="color:#61AFEF;">getConfig</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E5C07B;">config</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">setXXX</span><span style="color:#ABB2BF;">();</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div>`,94)]))}const i=a(o,[["render",p],["__file","Programming-TsFile-API.html.vue"]]),c=JSON.parse('{"path":"/zh/UserGuide/V1.2.x/API/Programming-TsFile-API.html","title":"TsFile API","lang":"zh-CN","frontmatter":{"description":"TsFile API TsFile 是在 IoTDB 中使用的时间序列的文件格式。在这个章节中，我们将介绍这种文件格式的用法。 安装 TsFile library 在您自己的项目中有两种方法使用 TsFile . 使用 jar 包：编译源码生成 jar 包 命令执行完成之后，所有的 jar 包都可以从 target/ 目录下找到。之后您可以在自己的工程...","head":[["link",{"rel":"alternate","hreflang":"en-us","href":"https://iotdb.apache.org/UserGuide/V1.2.x/API/Programming-TsFile-API.html"}],["meta",{"property":"og:url","content":"https://iotdb.apache.org/zh/UserGuide/V1.2.x/API/Programming-TsFile-API.html"}],["meta",{"property":"og:site_name","content":"IoTDB Website"}],["meta",{"property":"og:title","content":"TsFile API"}],["meta",{"property":"og:description","content":"TsFile API TsFile 是在 IoTDB 中使用的时间序列的文件格式。在这个章节中，我们将介绍这种文件格式的用法。 安装 TsFile library 在您自己的项目中有两种方法使用 TsFile . 使用 jar 包：编译源码生成 jar 包 命令执行完成之后，所有的 jar 包都可以从 target/ 目录下找到。之后您可以在自己的工程..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2023-08-01T06:02:08.000Z"}],["meta",{"property":"article:modified_time","content":"2023-08-01T06:02:08.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"TsFile API\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-08-01T06:02:08.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"安装 TsFile library","slug":"安装-tsfile-library","link":"#安装-tsfile-library","children":[]},{"level":2,"title":"TsFile 的使用","slug":"tsfile-的使用","link":"#tsfile-的使用","children":[{"level":3,"title":"写入 TsFile","slug":"写入-tsfile","link":"#写入-tsfile","children":[]},{"level":3,"title":"写入 TsFile 示例","slug":"写入-tsfile-示例","link":"#写入-tsfile-示例","children":[]},{"level":3,"title":"读取 TsFile 接口","slug":"读取-tsfile-接口","link":"#读取-tsfile-接口","children":[]},{"level":3,"title":"读取现有 TsFile 示例","slug":"读取现有-tsfile-示例","link":"#读取现有-tsfile-示例","children":[]}]},{"level":2,"title":"修改 TsFile 配置项","slug":"修改-tsfile-配置项","link":"#修改-tsfile-配置项","children":[]}],"git":{"createdTime":1688958677000,"updatedTime":1690869728000,"contributors":[{"name":"Lei","username":"Lei","email":"33376433+LeiRui@users.noreply.github.com","commits":1,"url":"https://github.com/Lei"},{"name":"wanghui42","username":"wanghui42","email":"105700158+wanghui42@users.noreply.github.com","commits":1,"url":"https://github.com/wanghui42"},{"name":"Haonan","username":"Haonan","email":"hhaonan@outlook.com","commits":1,"url":"https://github.com/Haonan"},{"name":"CritasWang","username":"CritasWang","email":"critas@outlook.com","commits":1,"url":"https://github.com/CritasWang"}]},"readingTime":{"minutes":10.94,"words":3282},"filePathRelative":"zh/UserGuide/V1.2.x/API/Programming-TsFile-API.md","localizedDate":"2023年7月10日","autoDesc":true}');export{i as comp,c as data};
