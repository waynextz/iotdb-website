import{_ as l,c as o,b as a,d as e,e as n,a as p,f as c,r,o as i}from"./app-DE_BslX7.js";const d={};function B(y,s){const t=r("RouteLink");return i(),o("div",null,[s[4]||(s[4]=a('<h1 id="session原生api" tabindex="-1"><a class="header-anchor" href="#session原生api"><span>Session原生API</span></a></h1><p>IoTDB 原生 API 中的 Session 是实现与数据库交互的核心接口，它集成了丰富的方法，支持数据写入、查询以及元数据操作等功能。通过实例化 Session，能够建立与 IoTDB 服务器的连接，在该连接所构建的环境中执行各类数据库操作。Session为非线程安全，不能被多线程同时调用。</p><p>SessionPool 是 Session 的连接池，推荐使用SessionPool编程。在多线程并发的情形下，SessionPool 能够合理地管理和分配连接资源，以提升系统性能与资源利用效率。</p><h2 id="_1-步骤概览" tabindex="-1"><a class="header-anchor" href="#_1-步骤概览"><span>1 步骤概览</span></a></h2><ol><li>创建连接池实例：初始化一个SessionPool对象，用于管理多个Session实例。</li><li>执行操作：直接从SessionPool中获取Session实例，并执行数据库操作，无需每次都打开和关闭连接。</li><li>关闭连接池资源：在不再需要进行数据库操作时，关闭SessionPool，释放所有相关资源。</li></ol><h2 id="_2-详细步骤" tabindex="-1"><a class="header-anchor" href="#_2-详细步骤"><span>2 详细步骤</span></a></h2>',6)),e("p",null,[s[1]||(s[1]=n("本章节用于说明开发的核心流程，并未演示所有的参数和接口，如需了解全部功能及参数请参见: ")),p(t,{to:"/zh/UserGuide/latest/API/Programming-Java-Native-API.html#3-%E5%85%A8%E9%87%8F%E6%8E%A5%E5%8F%A3%E8%AF%B4%E6%98%8E"},{default:c(()=>s[0]||(s[0]=[n("全量接口说明")])),_:1}),s[2]||(s[2]=n(" 或 查阅: ")),s[3]||(s[3]=e("a",{href:"https://github.com/apache/iotdb/tree/master/example/session/src/main/java/org/apache/iotdb",target:"_blank",rel:"noopener noreferrer"},"源码",-1))]),s[5]||(s[5]=a(`<h3 id="_2-1-创建maven项目" tabindex="-1"><a class="header-anchor" href="#_2-1-创建maven项目"><span>2.1 创建maven项目</span></a></h3><p>创建一个maven项目，并在pom.xml文件中添加以下依赖（JDK &gt;= 1.8, Maven &gt;= 3.6）</p><div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" data-title="xml" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">dependencies</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">    &lt;</span><span style="color:#E06C75;">dependency</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">      &lt;</span><span style="color:#E06C75;">groupId</span><span style="color:#ABB2BF;">&gt;org.apache.iotdb&lt;/</span><span style="color:#E06C75;">groupId</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">      &lt;</span><span style="color:#E06C75;">artifactId</span><span style="color:#ABB2BF;">&gt;iotdb-session&lt;/</span><span style="color:#E06C75;">artifactId</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        &lt;!-- 版本号与数据库版本号相同 --&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">      &lt;</span><span style="color:#E06C75;">version</span><span style="color:#ABB2BF;">&gt;\${project.version}&lt;/</span><span style="color:#E06C75;">version</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">    &lt;/</span><span style="color:#E06C75;">dependency</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;/</span><span style="color:#E06C75;">dependencies</span><span style="color:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-2-创建连接池实例" tabindex="-1"><a class="header-anchor" href="#_2-2-创建连接池实例"><span>2.2 创建连接池实例</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">import</span><span style="color:#E5C07B;"> java.util.ArrayList</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E5C07B;"> java.util.List</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E5C07B;"> org.apache.iotdb.session.pool.SessionPool</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">public</span><span style="color:#C678DD;"> class</span><span style="color:#E5C07B;"> IoTDBSessionPoolExample</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">    private</span><span style="color:#C678DD;"> static</span><span style="color:#E5C07B;"> SessionPool</span><span style="color:#E06C75;"> sessionPool</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">    public</span><span style="color:#C678DD;"> static</span><span style="color:#C678DD;"> void</span><span style="color:#61AFEF;"> main</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">String</span><span style="color:#ABB2BF;">[] </span><span style="color:#E06C75;font-style:italic;">args</span><span style="color:#ABB2BF;">)</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        // Using nodeUrls ensures that when one node goes down, other nodes are automatically connected to retry</span></span>
<span class="line"><span style="color:#E5C07B;">        List</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">String</span><span style="color:#ABB2BF;">&gt; </span><span style="color:#E06C75;">nodeUrls</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#E5C07B;"> ArrayList</span><span style="color:#ABB2BF;">&lt;&gt;();</span></span>
<span class="line"><span style="color:#E5C07B;">        nodeUrls</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">add</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;127.0.0.1:6667&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">        nodeUrls</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">add</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;127.0.0.1:6668&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">        sessionPool </span><span style="color:#56B6C2;">=</span></span>
<span class="line"><span style="color:#C678DD;">                new</span><span style="color:#ABB2BF;"> SessionPool.</span><span style="color:#61AFEF;">Builder</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#ABB2BF;">                        .</span><span style="color:#61AFEF;">nodeUrls</span><span style="color:#ABB2BF;">(nodeUrls)</span></span>
<span class="line"><span style="color:#ABB2BF;">                        .</span><span style="color:#61AFEF;">user</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;root&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">                        .</span><span style="color:#61AFEF;">password</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;root&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">                        .</span><span style="color:#61AFEF;">maxSize</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">3</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">                        .</span><span style="color:#61AFEF;">build</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-3-执行数据库操作" tabindex="-1"><a class="header-anchor" href="#_2-3-执行数据库操作"><span>2.3 执行数据库操作</span></a></h3><h4 id="_2-3-1-数据写入" tabindex="-1"><a class="header-anchor" href="#_2-3-1-数据写入"><span>2.3.1 数据写入</span></a></h4><p>在工业场景中，数据写入可分为以下几类：多行数据写入、单设备多行数据写入，下面按不同场景对写入接口进行介绍。</p><h5 id="多行数据写入接口" tabindex="-1"><a class="header-anchor" href="#多行数据写入接口"><span>多行数据写入接口</span></a></h5><p>接口说明：支持一次写入多行数据，每一行对应一个设备一个时间戳的多个测点值。</p><p>接口列表：</p><table><thead><tr><th>接口名称</th><th>功能描述</th></tr></thead><tbody><tr><td><code>insertRecords(List&lt;String&gt; deviceIds, List&lt;Long&gt; times, List&lt;List&lt;String&gt;&gt; measurementsList, List&lt;List&lt;TSDataType&gt;&gt; typesList, List&lt;List&lt;Object&gt;&gt; valuesList)</code></td><td>插入多行数据，适用于不同测点独立采集的场景</td></tr></tbody></table><p>代码案例：</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">import</span><span style="color:#E5C07B;"> java.util.ArrayList</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E5C07B;"> java.util.List</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E5C07B;"> org.apache.iotdb.rpc.IoTDBConnectionException</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E5C07B;"> org.apache.iotdb.rpc.StatementExecutionException</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E5C07B;"> org.apache.iotdb.session.pool.SessionPool</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E5C07B;"> org.apache.tsfile.enums.TSDataType</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">public</span><span style="color:#C678DD;"> class</span><span style="color:#E5C07B;"> SessionPoolExample</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;"> private</span><span style="color:#C678DD;"> static</span><span style="color:#E5C07B;"> SessionPool</span><span style="color:#E06C75;"> sessionPool</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">     public</span><span style="color:#C678DD;"> static</span><span style="color:#C678DD;"> void</span><span style="color:#61AFEF;"> main</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">String</span><span style="color:#ABB2BF;">[] </span><span style="color:#E06C75;font-style:italic;">args</span><span style="color:#ABB2BF;">)</span><span style="color:#C678DD;"> throws</span><span style="color:#E5C07B;"> IoTDBConnectionException</span><span style="color:#ABB2BF;">,</span><span style="color:#E5C07B;"> StatementExecutionException</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">          // 1. init SessionPool</span></span>
<span class="line"><span style="color:#61AFEF;">        constructSessionPool</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">          // 2. execute insert data</span></span>
<span class="line"><span style="color:#61AFEF;">        insertRecordsExample</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">          // 3. close SessionPool</span></span>
<span class="line"><span style="color:#61AFEF;">        closeSessionPool</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">  private</span><span style="color:#C678DD;"> static</span><span style="color:#C678DD;"> void</span><span style="color:#61AFEF;"> constructSessionPool</span><span style="color:#ABB2BF;">()</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        // Using nodeUrls ensures that when one node goes down, other nodes are automatically connected to retry</span></span>
<span class="line"><span style="color:#E5C07B;">        List</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">String</span><span style="color:#ABB2BF;">&gt; </span><span style="color:#E06C75;">nodeUrls</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#E5C07B;"> ArrayList</span><span style="color:#ABB2BF;">&lt;&gt;();</span></span>
<span class="line"><span style="color:#E5C07B;">        nodeUrls</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">add</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;127.0.0.1:6667&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">        nodeUrls</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">add</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;127.0.0.1:6668&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">        sessionPool </span><span style="color:#56B6C2;">=</span></span>
<span class="line"><span style="color:#C678DD;">                new</span><span style="color:#ABB2BF;"> SessionPool.</span><span style="color:#61AFEF;">Builder</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#ABB2BF;">                        .</span><span style="color:#61AFEF;">nodeUrls</span><span style="color:#ABB2BF;">(nodeUrls)</span></span>
<span class="line"><span style="color:#ABB2BF;">                        .</span><span style="color:#61AFEF;">user</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;root&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">                        .</span><span style="color:#61AFEF;">password</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;root&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">                        .</span><span style="color:#61AFEF;">maxSize</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">3</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">                        .</span><span style="color:#61AFEF;">build</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">    public</span><span style="color:#C678DD;"> static</span><span style="color:#C678DD;"> void</span><span style="color:#61AFEF;"> insertRecordsExample</span><span style="color:#ABB2BF;">()</span><span style="color:#C678DD;"> throws</span><span style="color:#E5C07B;"> IoTDBConnectionException</span><span style="color:#ABB2BF;">,</span><span style="color:#E5C07B;"> StatementExecutionException</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">        String</span><span style="color:#E06C75;"> deviceId</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &quot;root.sg1.d1&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">        List</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">String</span><span style="color:#ABB2BF;">&gt; </span><span style="color:#E06C75;">measurements</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#E5C07B;"> ArrayList</span><span style="color:#ABB2BF;">&lt;&gt;();</span></span>
<span class="line"><span style="color:#E5C07B;">        measurements</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">add</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;s1&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">        measurements</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">add</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;s2&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">        measurements</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">add</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;s3&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">        List</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">String</span><span style="color:#ABB2BF;">&gt; </span><span style="color:#E06C75;">deviceIds</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#E5C07B;"> ArrayList</span><span style="color:#ABB2BF;">&lt;&gt;();</span></span>
<span class="line"><span style="color:#E5C07B;">        List</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">List</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">String</span><span style="color:#ABB2BF;">&gt;&gt; </span><span style="color:#E06C75;">measurementsList</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#E5C07B;"> ArrayList</span><span style="color:#ABB2BF;">&lt;&gt;();</span></span>
<span class="line"><span style="color:#E5C07B;">        List</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">List</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">Object</span><span style="color:#ABB2BF;">&gt;&gt; </span><span style="color:#E06C75;">valuesList</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#E5C07B;"> ArrayList</span><span style="color:#ABB2BF;">&lt;&gt;();</span></span>
<span class="line"><span style="color:#E5C07B;">        List</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">Long</span><span style="color:#ABB2BF;">&gt; </span><span style="color:#E06C75;">timestamps</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#E5C07B;"> ArrayList</span><span style="color:#ABB2BF;">&lt;&gt;();</span></span>
<span class="line"><span style="color:#E5C07B;">        List</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">List</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">TSDataType</span><span style="color:#ABB2BF;">&gt;&gt; </span><span style="color:#E06C75;">typesList</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#E5C07B;"> ArrayList</span><span style="color:#ABB2BF;">&lt;&gt;();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">        for</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">long</span><span style="color:#E06C75;"> time</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">; time </span><span style="color:#56B6C2;">&lt;</span><span style="color:#D19A66;"> 500</span><span style="color:#ABB2BF;">; time++) {</span></span>
<span class="line"><span style="color:#E5C07B;">            List</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">Object</span><span style="color:#ABB2BF;">&gt; </span><span style="color:#E06C75;">values</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#E5C07B;"> ArrayList</span><span style="color:#ABB2BF;">&lt;&gt;();</span></span>
<span class="line"><span style="color:#E5C07B;">            List</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">TSDataType</span><span style="color:#ABB2BF;">&gt; </span><span style="color:#E06C75;">types</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#E5C07B;"> ArrayList</span><span style="color:#ABB2BF;">&lt;&gt;();</span></span>
<span class="line"><span style="color:#E5C07B;">            values</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">add</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">1L</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">            values</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">add</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">2L</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">            values</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">add</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">3L</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">            types</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">add</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">TSDataType</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">INT64</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">            types</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">add</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">TSDataType</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">INT64</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">            types</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">add</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">TSDataType</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">INT64</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">            deviceIds</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">add</span><span style="color:#ABB2BF;">(deviceId);</span></span>
<span class="line"><span style="color:#E5C07B;">            measurementsList</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">add</span><span style="color:#ABB2BF;">(measurements);</span></span>
<span class="line"><span style="color:#E5C07B;">            valuesList</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">add</span><span style="color:#ABB2BF;">(values);</span></span>
<span class="line"><span style="color:#E5C07B;">            typesList</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">add</span><span style="color:#ABB2BF;">(types);</span></span>
<span class="line"><span style="color:#E5C07B;">            timestamps</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">add</span><span style="color:#ABB2BF;">(time);</span></span>
<span class="line"><span style="color:#C678DD;">            if</span><span style="color:#ABB2BF;"> (time </span><span style="color:#56B6C2;">!=</span><span style="color:#D19A66;"> 0</span><span style="color:#56B6C2;"> &amp;&amp;</span><span style="color:#ABB2BF;"> time </span><span style="color:#56B6C2;">%</span><span style="color:#D19A66;"> 100</span><span style="color:#56B6C2;"> ==</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">                try</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">                    sessionPool</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">insertRecords</span><span style="color:#ABB2BF;">(deviceIds, timestamps, measurementsList, typesList, valuesList);</span></span>
<span class="line"><span style="color:#ABB2BF;">                } </span><span style="color:#C678DD;">catch</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">IoTDBConnectionException</span><span style="color:#ABB2BF;"> | </span><span style="color:#E5C07B;">StatementExecutionException</span><span style="color:#E06C75;font-style:italic;"> e</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">                    // solve exception</span></span>
<span class="line"><span style="color:#ABB2BF;">                }</span></span>
<span class="line"><span style="color:#E5C07B;">                deviceIds</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">clear</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E5C07B;">                measurementsList</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">clear</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E5C07B;">                valuesList</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">clear</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E5C07B;">                typesList</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">clear</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E5C07B;">                timestamps</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">clear</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">            }</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#C678DD;">        try</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">            sessionPool</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">insertRecords</span><span style="color:#ABB2BF;">(deviceIds, timestamps, measurementsList, typesList, valuesList);</span></span>
<span class="line"><span style="color:#ABB2BF;">        } </span><span style="color:#C678DD;">catch</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">IoTDBConnectionException</span><span style="color:#ABB2BF;"> | </span><span style="color:#E5C07B;">StatementExecutionException</span><span style="color:#E06C75;font-style:italic;"> e</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">            // solve exception</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#E06C75;">    </span></span>
<span class="line"><span style="color:#C678DD;">      public</span><span style="color:#C678DD;"> static</span><span style="color:#C678DD;"> void</span><span style="color:#61AFEF;"> closeSessionPool</span><span style="color:#ABB2BF;">(){</span></span>
<span class="line"><span style="color:#E5C07B;">        sessionPool</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">close</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="单设备多行数据写入接口" tabindex="-1"><a class="header-anchor" href="#单设备多行数据写入接口"><span>单设备多行数据写入接口</span></a></h5><p>接口说明：支持一次写入单个设备的多行数据，每一行对应一个时间戳的多个测点值。</p><p>接口列表：</p><table><thead><tr><th>接口名称</th><th>功能描述</th></tr></thead><tbody><tr><td><code>insertTablet(Tablet tablet)</code></td><td>插入单个设备的多行数据，适用于不同测点独立采集的场景</td></tr></tbody></table><p>代码案例：</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">import</span><span style="color:#E5C07B;"> java.util.ArrayList</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E5C07B;"> java.util.List</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E5C07B;"> java.util.Random</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E5C07B;"> org.apache.iotdb.rpc.IoTDBConnectionException</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E5C07B;"> org.apache.iotdb.rpc.StatementExecutionException</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E5C07B;"> org.apache.iotdb.session.pool.SessionPool</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E5C07B;"> org.apache.tsfile.enums.TSDataType</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E5C07B;"> org.apache.tsfile.write.record.Tablet</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E5C07B;"> org.apache.tsfile.write.schema.MeasurementSchema</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">public</span><span style="color:#C678DD;"> class</span><span style="color:#E5C07B;"> SessionPoolExample</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">      private</span><span style="color:#C678DD;"> static</span><span style="color:#E5C07B;"> SessionPool</span><span style="color:#E06C75;"> sessionPool</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">      public</span><span style="color:#C678DD;"> static</span><span style="color:#C678DD;"> void</span><span style="color:#61AFEF;"> main</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">String</span><span style="color:#ABB2BF;">[] </span><span style="color:#E06C75;font-style:italic;">args</span><span style="color:#ABB2BF;">)</span><span style="color:#C678DD;"> throws</span><span style="color:#E5C07B;"> IoTDBConnectionException</span><span style="color:#ABB2BF;">,</span><span style="color:#E5C07B;"> StatementExecutionException</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        // 1. init SessionPool</span></span>
<span class="line"><span style="color:#61AFEF;">        constructSessionPool</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        // 2. execute insert data</span></span>
<span class="line"><span style="color:#61AFEF;">        insertTabletExample</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        // 3. close SessionPool</span></span>
<span class="line"><span style="color:#61AFEF;">        closeSessionPool</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">          }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">        private</span><span style="color:#C678DD;"> static</span><span style="color:#C678DD;"> void</span><span style="color:#61AFEF;"> constructSessionPool</span><span style="color:#ABB2BF;">()</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        // Using nodeUrls ensures that when one node goes down, other nodes are automatically connected to retry</span></span>
<span class="line"><span style="color:#E5C07B;">        List</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">String</span><span style="color:#ABB2BF;">&gt; </span><span style="color:#E06C75;">nodeUrls</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#E5C07B;"> ArrayList</span><span style="color:#ABB2BF;">&lt;&gt;();</span></span>
<span class="line"><span style="color:#E5C07B;">        nodeUrls</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">add</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;127.0.0.1:6667&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">        nodeUrls</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">add</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;127.0.0.1:6668&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">        sessionPool </span><span style="color:#56B6C2;">=</span></span>
<span class="line"><span style="color:#C678DD;">                new</span><span style="color:#ABB2BF;"> SessionPool.</span><span style="color:#61AFEF;">Builder</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#ABB2BF;">                        .</span><span style="color:#61AFEF;">nodeUrls</span><span style="color:#ABB2BF;">(nodeUrls)</span></span>
<span class="line"><span style="color:#ABB2BF;">                        .</span><span style="color:#61AFEF;">user</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;root&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">                        .</span><span style="color:#61AFEF;">password</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;root&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">                        .</span><span style="color:#61AFEF;">maxSize</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">3</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">                        .</span><span style="color:#61AFEF;">build</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">    private</span><span style="color:#C678DD;"> static</span><span style="color:#C678DD;"> void</span><span style="color:#61AFEF;"> insertTabletExample</span><span style="color:#ABB2BF;">()</span><span style="color:#C678DD;"> throws</span><span style="color:#E5C07B;"> IoTDBConnectionException</span><span style="color:#ABB2BF;">,</span><span style="color:#E5C07B;"> StatementExecutionException</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        /*</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">         * A Tablet example:</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">         *      device1</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">         * time s1, s2, s3</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">         * 1,   1,  1,  1</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">         * 2,   2,  2,  2</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">         * 3,   3,  3,  3</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">         */</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        // The schema of measurements of one device</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        // only measurementId and data type in MeasurementSchema take effects in Tablet</span></span>
<span class="line"><span style="color:#E5C07B;">        List</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">MeasurementSchema</span><span style="color:#ABB2BF;">&gt; </span><span style="color:#E06C75;">schemaList</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#E5C07B;"> ArrayList</span><span style="color:#ABB2BF;">&lt;&gt;();</span></span>
<span class="line"><span style="color:#E5C07B;">        schemaList</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">add</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">new</span><span style="color:#61AFEF;"> MeasurementSchema</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;s1&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">TSDataType</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">INT64</span><span style="color:#ABB2BF;">));</span></span>
<span class="line"><span style="color:#E5C07B;">        schemaList</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">add</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">new</span><span style="color:#61AFEF;"> MeasurementSchema</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;s2&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">TSDataType</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">INT64</span><span style="color:#ABB2BF;">));</span></span>
<span class="line"><span style="color:#E5C07B;">        schemaList</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">add</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">new</span><span style="color:#61AFEF;"> MeasurementSchema</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;s3&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">TSDataType</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">INT64</span><span style="color:#ABB2BF;">));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">        Tablet</span><span style="color:#E06C75;"> tablet</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> Tablet</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;root.sg.d1&quot;</span><span style="color:#ABB2BF;">, schemaList, </span><span style="color:#D19A66;">100</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        // Method 1 to add tablet data</span></span>
<span class="line"><span style="color:#C678DD;">        long</span><span style="color:#E06C75;"> timestamp</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> System</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">currentTimeMillis</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">        Random</span><span style="color:#E06C75;"> random</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> Random</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#C678DD;">        for</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">long</span><span style="color:#E06C75;"> row</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">; row </span><span style="color:#56B6C2;">&lt;</span><span style="color:#D19A66;"> 100</span><span style="color:#ABB2BF;">; row++) {</span></span>
<span class="line"><span style="color:#C678DD;">            int</span><span style="color:#E06C75;"> rowIndex</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> tablet</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">rowSize</span><span style="color:#ABB2BF;">++;</span></span>
<span class="line"><span style="color:#E5C07B;">            tablet</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">addTimestamp</span><span style="color:#ABB2BF;">(rowIndex, timestamp);</span></span>
<span class="line"><span style="color:#C678DD;">            for</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">int</span><span style="color:#E06C75;"> s</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">; s </span><span style="color:#56B6C2;">&lt;</span><span style="color:#D19A66;"> 3</span><span style="color:#ABB2BF;">; s++) {</span></span>
<span class="line"><span style="color:#C678DD;">                long</span><span style="color:#E06C75;"> value</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> random</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">nextLong</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E5C07B;">                tablet</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">addValue</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">schemaList</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">get</span><span style="color:#ABB2BF;">(s).</span><span style="color:#61AFEF;">getMeasurementId</span><span style="color:#ABB2BF;">(), rowIndex, value);</span></span>
<span class="line"><span style="color:#ABB2BF;">            }</span></span>
<span class="line"><span style="color:#C678DD;">            if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">tablet</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">rowSize</span><span style="color:#56B6C2;"> ==</span><span style="color:#E5C07B;"> tablet</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getMaxRowNumber</span><span style="color:#ABB2BF;">()) {</span></span>
<span class="line"><span style="color:#E5C07B;">                sessionPool</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">insertTablet</span><span style="color:#ABB2BF;">(tablet);</span></span>
<span class="line"><span style="color:#E5C07B;">                tablet</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">reset</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">            }</span></span>
<span class="line"><span style="color:#ABB2BF;">            timestamp++;</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#C678DD;">        if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">tablet</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">rowSize</span><span style="color:#56B6C2;"> !=</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">            sessionPool</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">insertTablet</span><span style="color:#ABB2BF;">(tablet);</span></span>
<span class="line"><span style="color:#E5C07B;">            tablet</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">reset</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">    public</span><span style="color:#C678DD;"> static</span><span style="color:#C678DD;"> void</span><span style="color:#61AFEF;"> closeSessionPool</span><span style="color:#ABB2BF;">(){</span></span>
<span class="line"><span style="color:#E5C07B;">        sessionPool</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">close</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-3-2-sql操作" tabindex="-1"><a class="header-anchor" href="#_2-3-2-sql操作"><span>2.3.2 SQL操作</span></a></h4><p>SQL操作分为查询和非查询两类操作，对应的接口为<code>executeQuery</code>和<code>executeNonQuery</code>操作，其区别为前者执行的是具体的查询语句，会返回一个结果集，后者是执行的是增、删、改操作，不返回结果集。</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">import</span><span style="color:#E5C07B;"> java.util.ArrayList</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E5C07B;"> java.util.List</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E5C07B;"> org.apache.iotdb.isession.pool.SessionDataSetWrapper</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E5C07B;"> org.apache.iotdb.rpc.IoTDBConnectionException</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E5C07B;"> org.apache.iotdb.rpc.StatementExecutionException</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E5C07B;"> org.apache.iotdb.session.pool.SessionPool</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">public</span><span style="color:#C678DD;"> class</span><span style="color:#E5C07B;"> SessionPoolExample</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">  private</span><span style="color:#C678DD;"> static</span><span style="color:#E5C07B;"> SessionPool</span><span style="color:#E06C75;"> sessionPool</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">  public</span><span style="color:#C678DD;"> static</span><span style="color:#C678DD;"> void</span><span style="color:#61AFEF;"> main</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">String</span><span style="color:#ABB2BF;">[] </span><span style="color:#E06C75;font-style:italic;">args</span><span style="color:#ABB2BF;">)</span><span style="color:#C678DD;"> throws</span><span style="color:#E5C07B;"> IoTDBConnectionException</span><span style="color:#ABB2BF;">,</span><span style="color:#E5C07B;"> StatementExecutionException</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        // 1. init SessionPool</span></span>
<span class="line"><span style="color:#61AFEF;">        constructSessionPool</span><span style="color:#ABB2BF;">(); </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        // 2. executes a non-query SQL statement, such as a DDL or DML command.</span></span>
<span class="line"><span style="color:#61AFEF;">        executeQueryExample</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        // 3. executes a query SQL statement and returns the result set.</span></span>
<span class="line"><span style="color:#61AFEF;">        executeNonQueryExample</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        // 4. close SessionPool</span></span>
<span class="line"><span style="color:#61AFEF;">        closeSessionPool</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">    private</span><span style="color:#C678DD;"> static</span><span style="color:#C678DD;"> void</span><span style="color:#61AFEF;"> executeNonQueryExample</span><span style="color:#ABB2BF;">()</span><span style="color:#C678DD;"> throws</span><span style="color:#E5C07B;"> IoTDBConnectionException</span><span style="color:#ABB2BF;">,</span><span style="color:#E5C07B;"> StatementExecutionException</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        // 1. create a nonAligned time series</span></span>
<span class="line"><span style="color:#E5C07B;">        sessionPool</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">executeNonQueryStatement</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;create timeseries root.test.d1.s1 with dataType = int32&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        // 2. set ttl</span></span>
<span class="line"><span style="color:#E5C07B;">        sessionPool</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">executeNonQueryStatement</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;set TTL to root.test.** 10000&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        // 3. delete time series</span></span>
<span class="line"><span style="color:#E5C07B;">        sessionPool</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">executeNonQueryStatement</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;delete timeseries root.test.d1.s1&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">        private</span><span style="color:#C678DD;"> static</span><span style="color:#C678DD;"> void</span><span style="color:#61AFEF;"> executeQueryExample</span><span style="color:#ABB2BF;">() throws IoTDBConnectionException, StatementExecutionException {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        // 1. execute normal query</span></span>
<span class="line"><span style="color:#C678DD;">        try</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">SessionDataSetWrapper</span><span style="color:#E06C75;"> wrapper</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> sessionPool</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">executeQueryStatement</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;select s1 from root.sg1.d1 limit 10&quot;</span><span style="color:#ABB2BF;">)) {</span></span>
<span class="line"><span style="color:#C678DD;">            while</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">wrapper</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">hasNext</span><span style="color:#ABB2BF;">()) {</span></span>
<span class="line"><span style="color:#E5C07B;">                System</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">out</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">println</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">wrapper</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">next</span><span style="color:#ABB2BF;">());</span></span>
<span class="line"><span style="color:#ABB2BF;">            }</span></span>
<span class="line"><span style="color:#ABB2BF;">                }</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        // 2. execute aggregate query</span></span>
<span class="line"><span style="color:#C678DD;">        try</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">SessionDataSetWrapper</span><span style="color:#E06C75;"> wrapper</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> sessionPool</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">executeQueryStatement</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;select count(s1) from root.sg1.d1 group by ([0, 40), 5ms) &quot;</span><span style="color:#ABB2BF;">)) {</span></span>
<span class="line"><span style="color:#C678DD;">            while</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">wrapper</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">hasNext</span><span style="color:#ABB2BF;">()) {</span></span>
<span class="line"><span style="color:#E5C07B;">                System</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">out</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">println</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">wrapper</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">next</span><span style="color:#ABB2BF;">());</span></span>
<span class="line"><span style="color:#ABB2BF;">            }</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#ABB2BF;">          }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">        private</span><span style="color:#C678DD;"> static</span><span style="color:#C678DD;"> void</span><span style="color:#61AFEF;"> constructSessionPool</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        // Using nodeUrls ensures that when one node goes down, other nodes are automatically connected to retry</span></span>
<span class="line"><span style="color:#E5C07B;">        List</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">String</span><span style="color:#ABB2BF;">&gt; </span><span style="color:#E06C75;">nodeUrls</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#E5C07B;"> ArrayList</span><span style="color:#ABB2BF;">&lt;&gt;();</span></span>
<span class="line"><span style="color:#E5C07B;">        nodeUrls</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">add</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;127.0.0.1:6667&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">        nodeUrls</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">add</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;127.0.0.1:6668&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">        sessionPool </span><span style="color:#56B6C2;">=</span></span>
<span class="line"><span style="color:#C678DD;">                new</span><span style="color:#ABB2BF;"> SessionPool.</span><span style="color:#61AFEF;">Builder</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#ABB2BF;">                        .</span><span style="color:#61AFEF;">nodeUrls</span><span style="color:#ABB2BF;">(nodeUrls)</span></span>
<span class="line"><span style="color:#ABB2BF;">                        .</span><span style="color:#61AFEF;">user</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;root&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">                        .</span><span style="color:#61AFEF;">password</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;root&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">                        .</span><span style="color:#61AFEF;">maxSize</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">3</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">                        .</span><span style="color:#61AFEF;">build</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">    public</span><span style="color:#C678DD;"> static</span><span style="color:#C678DD;"> void</span><span style="color:#61AFEF;"> closeSessionPool</span><span style="color:#ABB2BF;">(){</span></span>
<span class="line"><span style="color:#E5C07B;">        sessionPool</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">close</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-全量接口说明" tabindex="-1"><a class="header-anchor" href="#_3-全量接口说明"><span>3 全量接口说明</span></a></h3><h4 id="_3-1-参数列表" tabindex="-1"><a class="header-anchor" href="#_3-1-参数列表"><span>3.1 参数列表</span></a></h4><p>Session具有如下的字段，可以通过构造函数或Session.Builder方式设置如下参数</p><table><thead><tr><th>字段名</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td><code>nodeUrls</code></td><td><code>List&lt;String&gt;</code></td><td>数据库节点的 URL 列表，支持多节点连接</td></tr><tr><td><code>username</code></td><td><code>String</code></td><td>用户名</td></tr><tr><td><code>password</code></td><td><code>String</code></td><td>密码</td></tr><tr><td><code>fetchSize</code></td><td><code>int</code></td><td>查询结果的默认批量返回大小</td></tr><tr><td><code>useSSL</code></td><td><code>boolean</code></td><td>是否启用 SSL</td></tr><tr><td><code>trustStore</code></td><td><code>String</code></td><td>信任库路径</td></tr><tr><td><code>trustStorePwd</code></td><td><code>String</code></td><td>信任库密码</td></tr><tr><td><code>queryTimeoutInMs</code></td><td><code>long</code></td><td>查询的超时时间，单位毫秒</td></tr><tr><td><code>enableRPCCompression</code></td><td><code>boolean</code></td><td>是否启用 RPC 压缩</td></tr><tr><td><code>connectionTimeoutInMs</code></td><td><code>int</code></td><td>连接超时时间，单位毫秒</td></tr><tr><td><code>zoneId</code></td><td><code>ZoneId</code></td><td>会话的时区设置</td></tr><tr><td><code>thriftDefaultBufferSize</code></td><td><code>int</code></td><td>Thrift 默认缓冲区大小</td></tr><tr><td><code>thriftMaxFrameSize</code></td><td><code>int</code></td><td>Thrift 最大帧大小</td></tr><tr><td><code>defaultEndPoint</code></td><td><code>TEndPoint</code></td><td>默认的数据库端点信息</td></tr><tr><td><code>defaultSessionConnection</code></td><td><code>SessionConnection</code></td><td>默认的会话连接对象</td></tr><tr><td><code>isClosed</code></td><td><code>boolean</code></td><td>当前会话是否已关闭</td></tr><tr><td><code>enableRedirection</code></td><td><code>boolean</code></td><td>是否启用重定向功能</td></tr><tr><td><code>enableRecordsAutoConvertTablet</code></td><td><code>boolean</code></td><td>是否启用记录自动转换为 Tablet 的功能</td></tr><tr><td><code>deviceIdToEndpoint</code></td><td><code>Map&lt;String, TEndPoint&gt;</code></td><td>设备 ID 和数据库端点的映射关系</td></tr><tr><td><code>endPointToSessionConnection</code></td><td><code>Map&lt;TEndPoint, SessionConnection&gt;</code></td><td>数据库端点和会话连接的映射关系</td></tr><tr><td><code>executorService</code></td><td><code>ScheduledExecutorService</code></td><td>用于定期更新节点列表的线程池</td></tr><tr><td><code>availableNodes</code></td><td><code>INodeSupplier</code></td><td>可用节点的供应器</td></tr><tr><td><code>enableQueryRedirection</code></td><td><code>boolean</code></td><td>是否启用查询重定向功能</td></tr><tr><td><code>version</code></td><td><code>Version</code></td><td>客户端的版本号，用于与服务端的兼容性判断</td></tr><tr><td><code>enableAutoFetch</code></td><td><code>boolean</code></td><td>是否启用自动获取功能</td></tr><tr><td><code>maxRetryCount</code></td><td><code>int</code></td><td>最大重试次数</td></tr><tr><td><code>retryIntervalInMs</code></td><td><code>long</code></td><td>重试的间隔时间，单位毫秒</td></tr></tbody></table><h4 id="_3-2-接口列表" tabindex="-1"><a class="header-anchor" href="#_3-2-接口列表"><span>3.2 接口列表</span></a></h4><h5 id="_3-2-1-元数据管理" tabindex="-1"><a class="header-anchor" href="#_3-2-1-元数据管理"><span>3.2.1 元数据管理</span></a></h5><table><thead><tr><th>方法名</th><th>功能描述</th><th>参数解释</th></tr></thead><tbody><tr><td><code>createDatabase(String database)</code></td><td>创建数据库</td><td><code>database</code>: 数据库名称</td></tr><tr><td><code>deleteDatabase(String database)</code></td><td>删除指定数据库</td><td><code>database</code>: 要删除的数据库名称</td></tr><tr><td><code>deleteDatabases(List&lt;String&gt; databases)</code></td><td>批量删除数据库</td><td><code>databases</code>: 要删除的数据库名称列表</td></tr><tr><td><code>createTimeseries(String path, TSDataType dataType, TSEncoding encoding, CompressionType compressor)</code></td><td>创建单个时间序列</td><td><code>path</code>: 时间序列路径，<code>dataType</code>: 数据类型，<code>encoding</code>: 编码类型，<code>compressor</code>: 压缩类型</td></tr><tr><td><code>createAlignedTimeseries(...)</code></td><td>创建对齐时间序列</td><td>设备ID、测点列表、数据类型列表、编码列表、压缩类型列表</td></tr><tr><td><code>createMultiTimeseries(...)</code></td><td>批量创建时间序列</td><td>多个路径、数据类型、编码、压缩类型、属性、标签、别名等</td></tr><tr><td><code>deleteTimeseries(String path)</code></td><td>删除时间序列</td><td><code>path</code>: 要删除的时间序列路径</td></tr><tr><td><code>deleteTimeseries(List&lt;String&gt; paths)</code></td><td>批量删除时间序列</td><td><code>paths</code>: 要删除的时间序列路径列表</td></tr><tr><td><code>setSchemaTemplate(String templateName, String prefixPath)</code></td><td>设置模式模板</td><td><code>templateName</code>: 模板名称，<code>prefixPath</code>: 应用模板的路径</td></tr><tr><td><code>createSchemaTemplate(Template template)</code></td><td>创建模式模板</td><td><code>template</code>: 模板对象</td></tr><tr><td><code>dropSchemaTemplate(String templateName)</code></td><td>删除模式模板</td><td><code>templateName</code>: 要删除的模板名称</td></tr><tr><td><code>addAlignedMeasurementsInTemplate(...)</code></td><td>添加对齐测点到模板</td><td>模板名称、测点路径列表、数据类型、编码类型、压缩类型</td></tr><tr><td><code>addUnalignedMeasurementsInTemplate(...)</code></td><td>添加非对齐测点到模板</td><td>同上</td></tr><tr><td><code>deleteNodeInTemplate(String templateName, String path)</code></td><td>删除模板中的节点</td><td><code>templateName</code>: 模板名称，<code>path</code>: 要删除的路径</td></tr><tr><td><code>countMeasurementsInTemplate(String name)</code></td><td>统计模板中测点数量</td><td><code>name</code>: 模板名称</td></tr><tr><td><code>isMeasurementInTemplate(String templateName, String path)</code></td><td>检查模板中是否存在某测点</td><td><code>templateName</code>: 模板名称，<code>path</code>: 测点路径</td></tr><tr><td><code>isPathExistInTemplate(String templateName, String path)</code></td><td>检查模板中路径是否存在</td><td>同上</td></tr><tr><td><code>showMeasurementsInTemplate(String templateName)</code></td><td>显示模板中的测点</td><td><code>templateName</code>: 模板名称</td></tr><tr><td><code>showMeasurementsInTemplate(String templateName, String pattern)</code></td><td>按模式显示模板中的测点</td><td><code>templateName</code>: 模板名称，<code>pattern</code>: 匹配模式</td></tr><tr><td><code>showAllTemplates()</code></td><td>显示所有模板</td><td>无参数</td></tr><tr><td><code>showPathsTemplateSetOn(String templateName)</code></td><td>显示模板应用的路径</td><td><code>templateName</code>: 模板名称</td></tr><tr><td><code>showPathsTemplateUsingOn(String templateName)</code></td><td>显示模板实际使用的路径</td><td>同上</td></tr><tr><td><code>unsetSchemaTemplate(String prefixPath, String templateName)</code></td><td>取消路径的模板设置</td><td><code>prefixPath</code>: 路径，<code>templateName</code>: 模板名称</td></tr></tbody></table><h5 id="_3-2-2-数据写入" tabindex="-1"><a class="header-anchor" href="#_3-2-2-数据写入"><span>3.2.2 数据写入</span></a></h5><table><thead><tr><th>方法名</th><th>功能描述</th><th>参数解释</th></tr></thead><tbody><tr><td><code>insertRecord(String deviceId, long time, List&lt;String&gt; measurements, List&lt;TSDataType&gt; types, Object... values)</code></td><td>插入单条记录</td><td><code>deviceId</code>: 设备ID，<code>time</code>: 时间戳，<code>measurements</code>: 测点列表，<code>types</code>: 数据类型列表，<code>values</code>: 值列表</td></tr><tr><td><code>insertRecord(String deviceId, long time, List&lt;String&gt; measurements, List&lt;String&gt; values)</code></td><td>插入单条记录</td><td><code>deviceId</code>: 设备ID，<code>time</code>: 时间戳，<code>measurements</code>: 测点列表，<code>values</code>: 值列表</td></tr><tr><td><code>insertRecords(List&lt;String&gt; deviceIds, List&lt;Long&gt; times, List&lt;List&lt;String&gt;&gt; measurementsList, List&lt;List&lt;Object&gt;&gt; valuesList)</code></td><td>插入多条记录</td><td><code>deviceIds</code>: 设备ID列表，<code>times</code>: 时间戳列表，<code>measurementsList</code>: 测点列表列表，<code>valuesList</code>: 值列表</td></tr><tr><td><code>insertRecords(List&lt;String&gt; deviceIds, List&lt;Long&gt; times, List&lt;List&lt;String&gt;&gt; measurementsList, List&lt;List&lt;TSDataType&gt;&gt; typesList, List&lt;List&lt;Object&gt;&gt; valuesList)</code></td><td>插入多条记录</td><td>同上，增加 <code>typesList</code>: 数据类型列表</td></tr><tr><td><code>insertRecordsOfOneDevice(String deviceId, List&lt;Long&gt; times, List&lt;List&lt;String&gt;&gt; measurementsList, List&lt;List&lt;TSDataType&gt;&gt; typesList, List&lt;List&lt;Object&gt;&gt; valuesList)</code></td><td>插入单设备的多条记录</td><td><code>deviceId</code>: 设备ID，<code>times</code>: 时间戳列表，<code>measurementsList</code>: 测点列表列表，<code>typesList</code>: 类型列表，<code>valuesList</code>: 值列表</td></tr><tr><td><code>insertRecordsOfOneDevice(String deviceId, List&lt;Long&gt; times, List&lt;List&lt;String&gt;&gt; measurementsList, List&lt;List&lt;TSDataType&gt;&gt; typesList, List&lt;List&lt;Object&gt;&gt; valuesList, boolean haveSorted)</code></td><td>插入排序后的单设备多条记录</td><td>同上，增加 <code>haveSorted</code>: 数据是否已排序</td></tr><tr><td><code>insertStringRecordsOfOneDevice(String deviceId, List&lt;Long&gt; times, List&lt;List&lt;String&gt;&gt; measurementsList, List&lt;List&lt;String&gt;&gt; valuesList)</code></td><td>插入字符串格式的单设备记录</td><td><code>deviceId</code>: 设备ID，<code>times</code>: 时间戳列表，<code>measurementsList</code>: 测点列表，<code>valuesList</code>: 值列表</td></tr><tr><td><code>insertStringRecordsOfOneDevice(String deviceId, List&lt;Long&gt; times, List&lt;List&lt;String&gt;&gt; measurementsList, List&lt;List&lt;String&gt;&gt; valuesList, boolean haveSorted)</code></td><td>插入排序的字符串格式单设备记录</td><td>同上，增加 <code>haveSorted</code>: 数据是否已排序</td></tr><tr><td><code>insertAlignedRecord(String deviceId, long time, List&lt;String&gt; measurements, List&lt;TSDataType&gt; types, List&lt;Object&gt; values)</code></td><td>插入单条对齐记录</td><td><code>deviceId</code>: 设备ID，<code>time</code>: 时间戳，<code>measurements</code>: 测点列表，<code>types</code>: 类型列表，<code>values</code>: 值列表</td></tr><tr><td><code>insertAlignedRecord(String deviceId, long time, List&lt;String&gt; measurements, List&lt;String&gt; values)</code></td><td>插入字符串格式的单条对齐记录</td><td><code>deviceId</code>: 设备ID，<code>time</code>: 时间戳，<code>measurements</code>: 测点列表，<code>values</code>: 值列表</td></tr><tr><td><code>insertAlignedRecords(List&lt;String&gt; deviceIds, List&lt;Long&gt; times, List&lt;List&lt;String&gt;&gt; measurementsList, List&lt;List&lt;Object&gt;&gt; valuesList)</code></td><td>插入多条对齐记录</td><td><code>deviceIds</code>: 设备ID列表，<code>times</code>: 时间戳列表，<code>measurementsList</code>: 测点列表，<code>valuesList</code>: 值列表</td></tr><tr><td><code>insertAlignedRecords(List&lt;String&gt; deviceIds, List&lt;Long&gt; times, List&lt;List&lt;String&gt;&gt; measurementsList, List&lt;List&lt;TSDataType&gt;&gt; typesList, List&lt;List&lt;Object&gt;&gt; valuesList)</code></td><td>插入多条对齐记录</td><td>同上，增加 <code>typesList</code>: 数据类型列表</td></tr><tr><td><code>insertAlignedRecordsOfOneDevice(String deviceId, List&lt;Long&gt; times, List&lt;List&lt;String&gt;&gt; measurementsList, List&lt;List&lt;TSDataType&gt;&gt; typesList, List&lt;List&lt;Object&gt;&gt; valuesList)</code></td><td>插入单设备的多条对齐记录</td><td>同上</td></tr><tr><td><code>insertAlignedRecordsOfOneDevice(String deviceId, List&lt;Long&gt; times, List&lt;List&lt;String&gt;&gt; measurementsList, List&lt;List&lt;TSDataType&gt;&gt; typesList, List&lt;List&lt;Object&gt;&gt; valuesList, boolean haveSorted)</code></td><td>插入排序的单设备多条对齐记录</td><td>同上，增加 <code>haveSorted</code>: 数据是否已排序</td></tr><tr><td><code>insertAlignedStringRecordsOfOneDevice(String deviceId, List&lt;Long&gt; times, List&lt;List&lt;String&gt;&gt; measurementsList, List&lt;List&lt;String&gt;&gt; valuesList)</code></td><td>插入字符串格式的单设备对齐记录</td><td><code>deviceId</code>: 设备ID，<code>times</code>: 时间戳列表，<code>measurementsList</code>: 测点列表，<code>valuesList</code>: 值列表</td></tr><tr><td><code>insertAlignedStringRecordsOfOneDevice(String deviceId, List&lt;Long&gt; times, List&lt;List&lt;String&gt;&gt; measurementsList, List&lt;List&lt;String&gt;&gt; valuesList, boolean haveSorted)</code></td><td>插入排序的字符串格式单设备对齐记录</td><td>同上，增加 <code>haveSorted</code>: 数据是否已排序</td></tr><tr><td><code>insertTablet(Tablet tablet)</code></td><td>插入单个Tablet数据</td><td><code>tablet</code>: 要插入的Tablet数据</td></tr><tr><td><code>insertTablet(Tablet tablet, boolean sorted)</code></td><td>插入排序的Tablet数据</td><td>同上，增加 <code>sorted</code>: 数据是否已排序</td></tr><tr><td><code>insertAlignedTablet(Tablet tablet)</code></td><td>插入对齐的Tablet数据</td><td><code>tablet</code>: 要插入的Tablet数据</td></tr><tr><td><code>insertAlignedTablet(Tablet tablet, boolean sorted)</code></td><td>插入排序的对齐Tablet数据</td><td>同上，增加 <code>sorted</code>: 数据是否已排序</td></tr><tr><td><code>insertTablets(Map&lt;String, Tablet&gt; tablets)</code></td><td>批量插入多个Tablet数据</td><td><code>tablets</code>: 设备ID到Tablet的映射表</td></tr><tr><td><code>insertTablets(Map&lt;String, Tablet&gt; tablets, boolean sorted)</code></td><td>批量插入排序的多个Tablet数据</td><td>同上，增加 <code>sorted</code>: 数据是否已排序</td></tr><tr><td><code>insertAlignedTablets(Map&lt;String, Tablet&gt; tablets)</code></td><td>批量插入多个对齐Tablet数据</td><td><code>tablets</code>: 设备ID到Tablet的映射表</td></tr><tr><td><code>insertAlignedTablets(Map&lt;String, Tablet&gt; tablets, boolean sorted)</code></td><td>批量插入排序的多个对齐Tablet数据</td><td>同上，增加 <code>sorted</code>: 数据是否已排序</td></tr></tbody></table><h5 id="_3-2-3-数据删除" tabindex="-1"><a class="header-anchor" href="#_3-2-3-数据删除"><span>3.2.3 数据删除</span></a></h5><table><thead><tr><th>方法名</th><th>功能描述</th><th>参数解释</th></tr></thead><tbody><tr><td><code>deleteTimeseries(String path)</code></td><td>删除单个时间序列</td><td><code>path</code>: 时间序列路径</td></tr><tr><td><code>deleteTimeseries(List&lt;String&gt; paths)</code></td><td>批量删除时间序列</td><td><code>paths</code>: 时间序列路径列表</td></tr><tr><td><code>deleteData(String path, long endTime)</code></td><td>删除指定路径的历史数据</td><td><code>path</code>: 路径，<code>endTime</code>: 结束时间戳</td></tr><tr><td><code>deleteData(List&lt;String&gt; paths, long endTime)</code></td><td>批量删除路径的历史数据</td><td><code>paths</code>: 路径列表，<code>endTime</code>: 结束时间戳</td></tr><tr><td><code>deleteData(List&lt;String&gt; paths, long startTime, long endTime)</code></td><td>删除路径时间范围内的历史数据</td><td>同上，增加 <code>startTime</code>: 起始时间戳</td></tr></tbody></table><h5 id="_3-2-4-数据查询" tabindex="-1"><a class="header-anchor" href="#_3-2-4-数据查询"><span>3.2.4 数据查询</span></a></h5><table><thead><tr><th>方法名</th><th>功能描述</th><th>参数解释</th></tr></thead><tbody><tr><td><code>executeQueryStatement(String sql)</code></td><td>执行查询语句</td><td><code>sql</code>: 查询SQL语句</td></tr><tr><td><code>executeQueryStatement(String sql, long timeoutInMs)</code></td><td>执行带超时的查询语句</td><td><code>sql</code>: 查询SQL语句，<code>timeoutInMs</code>: 查询超时时间（毫秒）</td></tr><tr><td><code>executeRawDataQuery(List&lt;String&gt; paths, long startTime, long endTime)</code></td><td>查询指定路径的原始数据</td><td><code>paths</code>: 查询路径列表，<code>startTime</code>: 起始时间戳，<code>endTime</code>: 结束时间戳</td></tr><tr><td><code>executeRawDataQuery(List&lt;String&gt; paths, long startTime, long endTime, long timeOut)</code></td><td>查询指定路径的原始数据（带超时）</td><td>同上，增加 <code>timeOut</code>: 超时时间</td></tr><tr><td><code>executeLastDataQuery(List&lt;String&gt; paths)</code></td><td>查询最新数据</td><td><code>paths</code>: 查询路径列表</td></tr><tr><td><code>executeLastDataQuery(List&lt;String&gt; paths, long lastTime)</code></td><td>查询指定时间的最新数据</td><td><code>paths</code>: 查询路径列表，<code>lastTime</code>: 指定的时间戳</td></tr><tr><td><code>executeLastDataQuery(List&lt;String&gt; paths, long lastTime, long timeOut)</code></td><td>查询指定时间的最新数据（带超时）</td><td>同上，增加 <code>timeOut</code>: 超时时间</td></tr><tr><td><code>executeLastDataQueryForOneDevice(String db, String device, List&lt;String&gt; sensors, boolean isLegalPathNodes)</code></td><td>查询单个设备的最新数据</td><td><code>db</code>: 数据库名，<code>device</code>: 设备名，<code>sensors</code>: 传感器列表，<code>isLegalPathNodes</code>: 是否合法路径节点</td></tr><tr><td><code>executeAggregationQuery(List&lt;String&gt; paths, List&lt;TAggregationType&gt; aggregations)</code></td><td>执行聚合查询</td><td><code>paths</code>: 查询路径列表，<code>aggregations</code>: 聚合类型列表</td></tr><tr><td><code>executeAggregationQuery(List&lt;String&gt; paths, List&lt;TAggregationType&gt; aggregations, long startTime, long endTime)</code></td><td>执行带时间范围的聚合查询</td><td>同上，增加 <code>startTime</code>: 起始时间戳，<code>endTime</code>: 结束时间戳</td></tr><tr><td><code>executeAggregationQuery(List&lt;String&gt; paths, List&lt;TAggregationType&gt; aggregations, long startTime, long endTime, long interval)</code></td><td>执行带时间间隔的聚合查询</td><td>同上，增加 <code>interval</code>: 时间间隔</td></tr><tr><td><code>executeAggregationQuery(List&lt;String&gt; paths, List&lt;TAggregationType&gt; aggregations, long startTime, long endTime, long interval, long slidingStep)</code></td><td>执行滑动窗口聚合查询</td><td>同上，增加 <code>slidingStep</code>: 滑动步长</td></tr><tr><td><code>fetchAllConnections()</code></td><td>获取所有活动连接信息</td><td>无参数</td></tr></tbody></table><h5 id="_3-2-5-系统状态与备份" tabindex="-1"><a class="header-anchor" href="#_3-2-5-系统状态与备份"><span>3.2.5 系统状态与备份</span></a></h5><table><thead><tr><th>方法名</th><th>功能描述</th><th>参数解释</th></tr></thead><tbody><tr><td><code>getBackupConfiguration()</code></td><td>获取备份配置信息</td><td>无参数</td></tr><tr><td><code>fetchAllConnections()</code></td><td>获取所有活动的连接信息</td><td>无参数</td></tr><tr><td><code>getSystemStatus()</code></td><td>获取系统状态</td><td>已废弃，默认返回 <code>SystemStatus.NORMAL</code></td></tr></tbody></table>`,38))])}const v=l(d,[["render",B],["__file","Programming-Java-Native-API.html.vue"]]),u=JSON.parse('{"path":"/zh/UserGuide/latest/API/Programming-Java-Native-API.html","title":"Session原生API","lang":"zh-CN","frontmatter":{"description":"Session原生API IoTDB 原生 API 中的 Session 是实现与数据库交互的核心接口，它集成了丰富的方法，支持数据写入、查询以及元数据操作等功能。通过实例化 Session，能够建立与 IoTDB 服务器的连接，在该连接所构建的环境中执行各类数据库操作。Session为非线程安全，不能被多线程同时调用。 SessionPool 是 S...","head":[["link",{"rel":"alternate","hreflang":"en-us","href":"https://iotdb.apache.org/UserGuide/latest/API/Programming-Java-Native-API.html"}],["meta",{"property":"og:url","content":"https://iotdb.apache.org/zh/UserGuide/latest/API/Programming-Java-Native-API.html"}],["meta",{"property":"og:site_name","content":"IoTDB Website"}],["meta",{"property":"og:title","content":"Session原生API"}],["meta",{"property":"og:description","content":"Session原生API IoTDB 原生 API 中的 Session 是实现与数据库交互的核心接口，它集成了丰富的方法，支持数据写入、查询以及元数据操作等功能。通过实例化 Session，能够建立与 IoTDB 服务器的连接，在该连接所构建的环境中执行各类数据库操作。Session为非线程安全，不能被多线程同时调用。 SessionPool 是 S..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-01-21T05:16:03.000Z"}],["meta",{"property":"article:modified_time","content":"2025-01-21T05:16:03.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Session原生API\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-01-21T05:16:03.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"1 步骤概览","slug":"_1-步骤概览","link":"#_1-步骤概览","children":[]},{"level":2,"title":"2 详细步骤","slug":"_2-详细步骤","link":"#_2-详细步骤","children":[{"level":3,"title":"2.1 创建maven项目","slug":"_2-1-创建maven项目","link":"#_2-1-创建maven项目","children":[]},{"level":3,"title":"2.2 创建连接池实例","slug":"_2-2-创建连接池实例","link":"#_2-2-创建连接池实例","children":[]},{"level":3,"title":"2.3 执行数据库操作","slug":"_2-3-执行数据库操作","link":"#_2-3-执行数据库操作","children":[]},{"level":3,"title":"3 全量接口说明","slug":"_3-全量接口说明","link":"#_3-全量接口说明","children":[]}]}],"git":{"createdTime":1688958677000,"updatedTime":1737436563000,"contributors":[{"name":"W1y1r","username":"W1y1r","email":"150988475+W1y1r@users.noreply.github.com","commits":4,"url":"https://github.com/W1y1r"},{"name":"CritasWang","username":"CritasWang","email":"critas@outlook.com","commits":4,"url":"https://github.com/CritasWang"},{"name":"VGalaxies","username":"VGalaxies","email":"dyc1904821183@gmail.com","commits":1,"url":"https://github.com/VGalaxies"},{"name":"StefanieZhao7","username":"StefanieZhao7","email":"131440380+StefanieZhao7@users.noreply.github.com","commits":1,"url":"https://github.com/StefanieZhao7"},{"name":"Xinyi Zhao","username":"Xinyi Zhao","email":"xinyizhao@XinyideMacBook-Pro.local","commits":1,"url":"https://github.com/Xinyi Zhao"},{"name":"Haonan","username":"Haonan","email":"hhaonan@outlook.com","commits":2,"url":"https://github.com/Haonan"},{"name":"majialin","username":"majialin","email":"107627937+mal117@users.noreply.github.com","commits":1,"url":"https://github.com/majialin"},{"name":"Chen YZ","username":"Chen YZ","email":"43774645+Cpaulyz@users.noreply.github.com","commits":1,"url":"https://github.com/Chen YZ"},{"name":"wanghui42","username":"wanghui42","email":"105700158+wanghui42@users.noreply.github.com","commits":1,"url":"https://github.com/wanghui42"},{"name":"Lei","username":"Lei","email":"33376433+LeiRui@users.noreply.github.com","commits":1,"url":"https://github.com/Lei"},{"name":"Summer","username":"Summer","email":"43237967+2b3c511@users.noreply.github.com","commits":1,"url":"https://github.com/Summer"},{"name":"Weihao Li","username":"Weihao Li","email":"60659567+Wei-hao-Li@users.noreply.github.com","commits":1,"url":"https://github.com/Weihao Li"}]},"readingTime":{"minutes":13.13,"words":3938},"filePathRelative":"zh/UserGuide/latest/API/Programming-Java-Native-API.md","localizedDate":"2023年7月10日","autoDesc":true}');export{v as comp,u as data};
