import{_ as n,c as a,b as l,o as e}from"./app-CLygX6ac.js";const o={};function p(t,s){return e(),a("div",null,s[0]||(s[0]=[l(`<h1 id="python-原生接口" tabindex="-1"><a class="header-anchor" href="#python-原生接口"><span>Python 原生接口</span></a></h1><h2 id="依赖" tabindex="-1"><a class="header-anchor" href="#依赖"><span>依赖</span></a></h2><p>在使用 Python 原生接口包前，您需要安装 thrift (&gt;=0.13) 依赖。</p><h2 id="如何使用-示例" tabindex="-1"><a class="header-anchor" href="#如何使用-示例"><span>如何使用 （示例）</span></a></h2><p>首先下载包：<code>pip3 install apache-iotdb</code></p><p>您可以从这里得到一个使用该包进行数据读写的例子：<a href="https://github.com/apache/iotdb/blob/rc/1.3.0/iotdb-client/client-py/SessionExample.py" target="_blank" rel="noopener noreferrer">Session Example</a></p><p>关于对齐时间序列读写的例子：<a href="https://github.com/apache/iotdb/blob/rc/1.3.0/iotdb-client/client-py/SessionAlignedTimeseriesExample.py" target="_blank" rel="noopener noreferrer">Aligned Timeseries Session Example</a></p><p>（您需要在文件的头部添加<code>import iotdb</code>）</p><p>或者：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">from</span><span style="color:#ABB2BF;"> iotdb.Session </span><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> Session</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">ip </span><span style="color:#56B6C2;">=</span><span style="color:#98C379;"> &quot;127.0.0.1&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">port_ </span><span style="color:#56B6C2;">=</span><span style="color:#98C379;"> &quot;6667&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">username_ </span><span style="color:#56B6C2;">=</span><span style="color:#98C379;"> &quot;root&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">password_ </span><span style="color:#56B6C2;">=</span><span style="color:#98C379;"> &quot;root&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">session </span><span style="color:#56B6C2;">=</span><span style="color:#61AFEF;"> Session</span><span style="color:#ABB2BF;">(ip, port_, username_, password_)</span></span>
<span class="line"><span style="color:#ABB2BF;">session.</span><span style="color:#61AFEF;">open</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">False</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">zone </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> session.</span><span style="color:#61AFEF;">get_time_zone</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#ABB2BF;">session.</span><span style="color:#61AFEF;">close</span><span style="color:#ABB2BF;">()</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="基本接口说明" tabindex="-1"><a class="header-anchor" href="#基本接口说明"><span>基本接口说明</span></a></h2><p>下面将给出 Session 对应的接口的简要介绍和对应参数：</p><h3 id="初始化" tabindex="-1"><a class="header-anchor" href="#初始化"><span>初始化</span></a></h3><ul><li>初始化 Session</li></ul><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#ABB2BF;">session </span><span style="color:#56B6C2;">=</span><span style="color:#61AFEF;"> Session</span><span style="color:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#E06C75;font-style:italic;">    ip</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;127.0.0.1&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;font-style:italic;">    port</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;6667&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;font-style:italic;">    user</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;root&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;font-style:italic;">    password</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;root&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;font-style:italic;">    fetch_size</span><span style="color:#56B6C2;">=</span><span style="color:#D19A66;">1024</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;font-style:italic;">    zone_id</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;UTC+8&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;font-style:italic;">    enable_redirection</span><span style="color:#56B6C2;">=</span><span style="color:#D19A66;">True</span></span>
<span class="line"><span style="color:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>初始化可连接多节点的 Session</li></ul><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#ABB2BF;">session </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> Session.</span><span style="color:#61AFEF;">init_from_node_urls</span><span style="color:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#E06C75;font-style:italic;">    node_urls</span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;">[</span><span style="color:#98C379;">&quot;127.0.0.1:6667&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;127.0.0.1:6668&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;127.0.0.1:6669&quot;</span><span style="color:#ABB2BF;">],</span></span>
<span class="line"><span style="color:#E06C75;font-style:italic;">    user</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;root&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;font-style:italic;">    password</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;root&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;font-style:italic;">    fetch_size</span><span style="color:#56B6C2;">=</span><span style="color:#D19A66;">1024</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;font-style:italic;">    zone_id</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;UTC+8&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;font-style:italic;">    enable_redirection</span><span style="color:#56B6C2;">=</span><span style="color:#D19A66;">True</span></span>
<span class="line"><span style="color:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>开启 Session，并决定是否开启 RPC 压缩</li></ul><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#ABB2BF;">session.</span><span style="color:#61AFEF;">open</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">enable_rpc_compression</span><span style="color:#56B6C2;">=</span><span style="color:#D19A66;">False</span><span style="color:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>注意: 客户端的 RPC 压缩开启状态需和服务端一致</p><ul><li>关闭 Session</li></ul><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#ABB2BF;">session.</span><span style="color:#61AFEF;">close</span><span style="color:#ABB2BF;">()</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="通过sessionpool管理session连接" tabindex="-1"><a class="header-anchor" href="#通过sessionpool管理session连接"><span>通过SessionPool管理session连接</span></a></h3><p>利用SessionPool管理session，不需要再考虑如何重用session。当session连接到达pool的最大值时，获取session的请求会被阻塞，可以通过参数设置阻塞等待时间。每次session使用完需要使用putBack方法将session归还到SessionPool中管理。</p><h4 id="创建sessionpool" tabindex="-1"><a class="header-anchor" href="#创建sessionpool"><span>创建SessionPool</span></a></h4><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#ABB2BF;">pool_config </span><span style="color:#56B6C2;">=</span><span style="color:#61AFEF;"> PoolConfig</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">host</span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;">ip,</span><span style="color:#E06C75;font-style:italic;">port</span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;">port, </span><span style="color:#E06C75;font-style:italic;">user_name</span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;">username,</span></span>
<span class="line"><span style="color:#E06C75;font-style:italic;">                         password</span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;">password, </span><span style="color:#E06C75;font-style:italic;">fetch_size</span><span style="color:#56B6C2;">=</span><span style="color:#D19A66;">1024</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;font-style:italic;">                         time_zone</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;UTC+8&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">max_retry</span><span style="color:#56B6C2;">=</span><span style="color:#D19A66;">3</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">max_pool_size </span><span style="color:#56B6C2;">=</span><span style="color:#D19A66;"> 5</span></span>
<span class="line"><span style="color:#ABB2BF;">wait_timeout_in_ms </span><span style="color:#56B6C2;">=</span><span style="color:#D19A66;"> 3000</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 通过配置参数创建连接池</span></span>
<span class="line"><span style="color:#ABB2BF;">session_pool </span><span style="color:#56B6C2;">=</span><span style="color:#61AFEF;"> SessionPool</span><span style="color:#ABB2BF;">(pool_config, max_pool_size, wait_timeout_in_ms)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="通过分布式节点创建sessionpool" tabindex="-1"><a class="header-anchor" href="#通过分布式节点创建sessionpool"><span>通过分布式节点创建SessionPool</span></a></h4><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#ABB2BF;">pool_config </span><span style="color:#56B6C2;">=</span><span style="color:#61AFEF;"> PoolConfig</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">node_urls</span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;font-style:italic;">node_urls</span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;">[</span><span style="color:#98C379;">&quot;127.0.0.1:6667&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;127.0.0.1:6668&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;127.0.0.1:6669&quot;</span><span style="color:#ABB2BF;">], </span><span style="color:#E06C75;font-style:italic;">user_name</span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;">username,</span></span>
<span class="line"><span style="color:#E06C75;font-style:italic;">                         password</span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;">password, </span><span style="color:#E06C75;font-style:italic;">fetch_size</span><span style="color:#56B6C2;">=</span><span style="color:#D19A66;">1024</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;font-style:italic;">                         time_zone</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;UTC+8&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">max_retry</span><span style="color:#56B6C2;">=</span><span style="color:#D19A66;">3</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">max_pool_size </span><span style="color:#56B6C2;">=</span><span style="color:#D19A66;"> 5</span></span>
<span class="line"><span style="color:#ABB2BF;">wait_timeout_in_ms </span><span style="color:#56B6C2;">=</span><span style="color:#D19A66;"> 3000</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="通过sessionpool获取session-使用完手动调用putback" tabindex="-1"><a class="header-anchor" href="#通过sessionpool获取session-使用完手动调用putback"><span>通过SessionPool获取session，使用完手动调用PutBack</span></a></h4><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#ABB2BF;">session </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> session_pool.</span><span style="color:#61AFEF;">get_session</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#ABB2BF;">session.</span><span style="color:#61AFEF;">set_storage_group</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">STORAGE_GROUP_NAME</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">session.</span><span style="color:#61AFEF;">create_time_series</span><span style="color:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#D19A66;">  TIMESERIES_PATH</span><span style="color:#ABB2BF;">, TSDataType.</span><span style="color:#D19A66;">BOOLEAN</span><span style="color:#ABB2BF;">, TSEncoding.</span><span style="color:#D19A66;">PLAIN</span><span style="color:#ABB2BF;">, Compressor.</span><span style="color:#D19A66;">SNAPPY</span></span>
<span class="line"><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 使用完调用putBack归还</span></span>
<span class="line"><span style="color:#ABB2BF;">session_pool.</span><span style="color:#61AFEF;">put_back</span><span style="color:#ABB2BF;">(session)</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 关闭sessionPool时同时关闭管理的session</span></span>
<span class="line"><span style="color:#ABB2BF;">session_pool.</span><span style="color:#61AFEF;">close</span><span style="color:#ABB2BF;">()</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="数据定义接口-ddl" tabindex="-1"><a class="header-anchor" href="#数据定义接口-ddl"><span>数据定义接口 DDL</span></a></h2><h3 id="database-管理" tabindex="-1"><a class="header-anchor" href="#database-管理"><span>Database 管理</span></a></h3><ul><li>设置 database</li></ul><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#ABB2BF;">session.</span><span style="color:#61AFEF;">set_storage_group</span><span style="color:#ABB2BF;">(group_name)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>删除单个或多个 database</li></ul><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#ABB2BF;">session.</span><span style="color:#61AFEF;">delete_storage_group</span><span style="color:#ABB2BF;">(group_name)</span></span>
<span class="line"><span style="color:#ABB2BF;">session.</span><span style="color:#61AFEF;">delete_storage_groups</span><span style="color:#ABB2BF;">(group_name_lst)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="时间序列管理" tabindex="-1"><a class="header-anchor" href="#时间序列管理"><span>时间序列管理</span></a></h3><ul><li>创建单个或多个时间序列</li></ul><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#ABB2BF;">session.</span><span style="color:#61AFEF;">create_time_series</span><span style="color:#ABB2BF;">(ts_path, data_type, encoding, compressor,</span></span>
<span class="line"><span style="color:#E06C75;font-style:italic;">    props</span><span style="color:#56B6C2;">=</span><span style="color:#D19A66;">None</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">tags</span><span style="color:#56B6C2;">=</span><span style="color:#D19A66;">None</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">attributes</span><span style="color:#56B6C2;">=</span><span style="color:#D19A66;">None</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">alias</span><span style="color:#56B6C2;">=</span><span style="color:#D19A66;">None</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span></span>
<span class="line"><span style="color:#ABB2BF;">session.</span><span style="color:#61AFEF;">create_multi_time_series</span><span style="color:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#ABB2BF;">    ts_path_lst, data_type_lst, encoding_lst, compressor_lst,</span></span>
<span class="line"><span style="color:#E06C75;font-style:italic;">    props_lst</span><span style="color:#56B6C2;">=</span><span style="color:#D19A66;">None</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">tags_lst</span><span style="color:#56B6C2;">=</span><span style="color:#D19A66;">None</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">attributes_lst</span><span style="color:#56B6C2;">=</span><span style="color:#D19A66;">None</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">alias_lst</span><span style="color:#56B6C2;">=</span><span style="color:#D19A66;">None</span></span>
<span class="line"><span style="color:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>创建对齐时间序列</li></ul><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#ABB2BF;">session.</span><span style="color:#61AFEF;">create_aligned_time_series</span><span style="color:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#ABB2BF;">    device_id, measurements_lst, data_type_lst, encoding_lst, compressor_lst</span></span>
<span class="line"><span style="color:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意：目前<strong>暂不支持</strong>使用传感器别名。</p><ul><li>删除一个或多个时间序列</li></ul><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#ABB2BF;">session.</span><span style="color:#61AFEF;">delete_time_series</span><span style="color:#ABB2BF;">(paths_list)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>检测时间序列是否存在</li></ul><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#ABB2BF;">session.</span><span style="color:#61AFEF;">check_time_series_exists</span><span style="color:#ABB2BF;">(path)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="数据操作接口-dml" tabindex="-1"><a class="header-anchor" href="#数据操作接口-dml"><span>数据操作接口 DML</span></a></h2><h3 id="数据写入" tabindex="-1"><a class="header-anchor" href="#数据写入"><span>数据写入</span></a></h3><p>推荐使用 insert_tablet 帮助提高写入效率</p><ul><li>插入一个 Tablet，Tablet 是一个设备若干行数据块，每一行的列都相同 <ul><li><strong>写入效率高</strong></li><li><strong>支持写入空值</strong> （0.13 版本起）</li></ul></li></ul><p>Python API 里目前有两种 Tablet 实现</p><ul><li>普通 Tablet</li></ul><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#ABB2BF;">values_ </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> [</span></span>
<span class="line"><span style="color:#ABB2BF;">    [</span><span style="color:#D19A66;">False</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">10</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">11</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">1.1</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">10011.1</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;test01&quot;</span><span style="color:#ABB2BF;">],</span></span>
<span class="line"><span style="color:#ABB2BF;">    [</span><span style="color:#D19A66;">True</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">100</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">11111</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">1.25</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">101.0</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;test02&quot;</span><span style="color:#ABB2BF;">],</span></span>
<span class="line"><span style="color:#ABB2BF;">    [</span><span style="color:#D19A66;">False</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">100</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">188.1</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">688.25</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;test03&quot;</span><span style="color:#ABB2BF;">],</span></span>
<span class="line"><span style="color:#ABB2BF;">    [</span><span style="color:#D19A66;">True</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">6.25</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;test04&quot;</span><span style="color:#ABB2BF;">],</span></span>
<span class="line"><span style="color:#ABB2BF;">]</span></span>
<span class="line"><span style="color:#ABB2BF;">timestamps_ </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> [</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">3</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">4</span><span style="color:#ABB2BF;">]</span></span>
<span class="line"><span style="color:#ABB2BF;">tablet_ </span><span style="color:#56B6C2;">=</span><span style="color:#61AFEF;"> Tablet</span><span style="color:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#ABB2BF;">    device_id, measurements_, data_types_, values_, timestamps_</span></span>
<span class="line"><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">session.</span><span style="color:#61AFEF;">insert_tablet</span><span style="color:#ABB2BF;">(tablet_)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">values_ </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> [</span></span>
<span class="line"><span style="color:#ABB2BF;">    [</span><span style="color:#D19A66;">None</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">10</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">11</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">1.1</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">10011.1</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;test01&quot;</span><span style="color:#ABB2BF;">],</span></span>
<span class="line"><span style="color:#ABB2BF;">    [</span><span style="color:#D19A66;">True</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">None</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">11111</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">1.25</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">101.0</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;test02&quot;</span><span style="color:#ABB2BF;">],</span></span>
<span class="line"><span style="color:#ABB2BF;">    [</span><span style="color:#D19A66;">False</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">100</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">None</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">188.1</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">688.25</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;test03&quot;</span><span style="color:#ABB2BF;">],</span></span>
<span class="line"><span style="color:#ABB2BF;">    [</span><span style="color:#D19A66;">True</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">None</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">None</span><span style="color:#ABB2BF;">],</span></span>
<span class="line"><span style="color:#ABB2BF;">]</span></span>
<span class="line"><span style="color:#ABB2BF;">timestamps_ </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> [</span><span style="color:#D19A66;">16</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">17</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">18</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">19</span><span style="color:#ABB2BF;">]</span></span>
<span class="line"><span style="color:#ABB2BF;">tablet_ </span><span style="color:#56B6C2;">=</span><span style="color:#61AFEF;"> Tablet</span><span style="color:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#ABB2BF;">    device_id, measurements_, data_types_, values_, timestamps_</span></span>
<span class="line"><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">session.</span><span style="color:#61AFEF;">insert_tablet</span><span style="color:#ABB2BF;">(tablet_)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Numpy Tablet</li></ul><p>相较于普通 Tablet，Numpy Tablet 使用 <a href="https://numpy.org/doc/stable/reference/generated/numpy.ndarray.html" target="_blank" rel="noopener noreferrer">numpy.ndarray</a> 来记录数值型数据。<br> 内存占用和序列化耗时会降低很多，写入效率也会有很大提升。</p><p><strong>注意</strong></p><ol><li>Tablet 中的每一列时间戳和值记录为一个 ndarray</li><li>Numpy Tablet 只支持大端类型数据，ndarray 构建时如果不指定数据类型会使用小端，因此推荐在构建 ndarray 时指定下面例子中类型使用大端。如果不指定，IoTDB Python客户端也会进行大小端转换，不影响使用正确性。</li></ol><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> numpy </span><span style="color:#C678DD;">as</span><span style="color:#ABB2BF;"> np</span></span>
<span class="line"><span style="color:#ABB2BF;">data_types_ </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> [</span></span>
<span class="line"><span style="color:#ABB2BF;">    TSDataType.</span><span style="color:#D19A66;">BOOLEAN</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">    TSDataType.</span><span style="color:#D19A66;">INT32</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">    TSDataType.</span><span style="color:#D19A66;">INT64</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">    TSDataType.</span><span style="color:#D19A66;">FLOAT</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">    TSDataType.</span><span style="color:#D19A66;">DOUBLE</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">    TSDataType.</span><span style="color:#D19A66;">TEXT</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">]</span></span>
<span class="line"><span style="color:#ABB2BF;">np_values_ </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> [</span></span>
<span class="line"><span style="color:#ABB2BF;">    np.</span><span style="color:#61AFEF;">array</span><span style="color:#ABB2BF;">([</span><span style="color:#D19A66;">False</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">True</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">False</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">True</span><span style="color:#ABB2BF;">], TSDataType.</span><span style="color:#D19A66;">BOOLEAN</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">np_dtype</span><span style="color:#ABB2BF;">()),</span></span>
<span class="line"><span style="color:#ABB2BF;">    np.</span><span style="color:#61AFEF;">array</span><span style="color:#ABB2BF;">([</span><span style="color:#D19A66;">10</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">100</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">100</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">], TSDataType.</span><span style="color:#D19A66;">INT32</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">np_dtype</span><span style="color:#ABB2BF;">()),</span></span>
<span class="line"><span style="color:#ABB2BF;">    np.</span><span style="color:#61AFEF;">array</span><span style="color:#ABB2BF;">([</span><span style="color:#D19A66;">11</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">11111</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">], TSDataType.</span><span style="color:#D19A66;">INT64</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">np_dtype</span><span style="color:#ABB2BF;">()),</span></span>
<span class="line"><span style="color:#ABB2BF;">    np.</span><span style="color:#61AFEF;">array</span><span style="color:#ABB2BF;">([</span><span style="color:#D19A66;">1.1</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">1.25</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">188.1</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">], TSDataType.</span><span style="color:#D19A66;">FLOAT</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">np_dtype</span><span style="color:#ABB2BF;">()),</span></span>
<span class="line"><span style="color:#ABB2BF;">    np.</span><span style="color:#61AFEF;">array</span><span style="color:#ABB2BF;">([</span><span style="color:#D19A66;">10011.1</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">101.0</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">688.25</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">6.25</span><span style="color:#ABB2BF;">], TSDataType.</span><span style="color:#D19A66;">DOUBLE</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">np_dtype</span><span style="color:#ABB2BF;">()),</span></span>
<span class="line"><span style="color:#ABB2BF;">    np.</span><span style="color:#61AFEF;">array</span><span style="color:#ABB2BF;">([</span><span style="color:#98C379;">&quot;test01&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;test02&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;test03&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;test04&quot;</span><span style="color:#ABB2BF;">], TSDataType.</span><span style="color:#D19A66;">TEXT</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">np_dtype</span><span style="color:#ABB2BF;">()),</span></span>
<span class="line"><span style="color:#ABB2BF;">]</span></span>
<span class="line"><span style="color:#ABB2BF;">np_timestamps_ </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> np.</span><span style="color:#61AFEF;">array</span><span style="color:#ABB2BF;">([</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">3</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">4</span><span style="color:#ABB2BF;">], TSDataType.</span><span style="color:#D19A66;">INT64</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">np_dtype</span><span style="color:#ABB2BF;">())</span></span>
<span class="line"><span style="color:#ABB2BF;">np_tablet_ </span><span style="color:#56B6C2;">=</span><span style="color:#61AFEF;"> NumpyTablet</span><span style="color:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#ABB2BF;">  device_id, measurements_, data_types_, np_values_, np_timestamps_</span></span>
<span class="line"><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">session.</span><span style="color:#61AFEF;">insert_tablet</span><span style="color:#ABB2BF;">(np_tablet_)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># insert one numpy tablet with None into the database.</span></span>
<span class="line"><span style="color:#ABB2BF;">np_values_ </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> [</span></span>
<span class="line"><span style="color:#ABB2BF;">    np.</span><span style="color:#61AFEF;">array</span><span style="color:#ABB2BF;">([</span><span style="color:#D19A66;">False</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">True</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">False</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">True</span><span style="color:#ABB2BF;">], TSDataType.</span><span style="color:#D19A66;">BOOLEAN</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">np_dtype</span><span style="color:#ABB2BF;">()),</span></span>
<span class="line"><span style="color:#ABB2BF;">    np.</span><span style="color:#61AFEF;">array</span><span style="color:#ABB2BF;">([</span><span style="color:#D19A66;">10</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">100</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">100</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">], TSDataType.</span><span style="color:#D19A66;">INT32</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">np_dtype</span><span style="color:#ABB2BF;">()),</span></span>
<span class="line"><span style="color:#ABB2BF;">    np.</span><span style="color:#61AFEF;">array</span><span style="color:#ABB2BF;">([</span><span style="color:#D19A66;">11</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">11111</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">], TSDataType.</span><span style="color:#D19A66;">INT64</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">np_dtype</span><span style="color:#ABB2BF;">()),</span></span>
<span class="line"><span style="color:#ABB2BF;">    np.</span><span style="color:#61AFEF;">array</span><span style="color:#ABB2BF;">([</span><span style="color:#D19A66;">1.1</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">1.25</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">188.1</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">], TSDataType.</span><span style="color:#D19A66;">FLOAT</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">np_dtype</span><span style="color:#ABB2BF;">()),</span></span>
<span class="line"><span style="color:#ABB2BF;">    np.</span><span style="color:#61AFEF;">array</span><span style="color:#ABB2BF;">([</span><span style="color:#D19A66;">10011.1</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">101.0</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">688.25</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">6.25</span><span style="color:#ABB2BF;">], TSDataType.</span><span style="color:#D19A66;">DOUBLE</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">np_dtype</span><span style="color:#ABB2BF;">()),</span></span>
<span class="line"><span style="color:#ABB2BF;">    np.</span><span style="color:#61AFEF;">array</span><span style="color:#ABB2BF;">([</span><span style="color:#98C379;">&quot;test01&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;test02&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;test03&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;test04&quot;</span><span style="color:#ABB2BF;">], TSDataType.</span><span style="color:#D19A66;">TEXT</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">np_dtype</span><span style="color:#ABB2BF;">()),</span></span>
<span class="line"><span style="color:#ABB2BF;">]</span></span>
<span class="line"><span style="color:#ABB2BF;">np_timestamps_ </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> np.</span><span style="color:#61AFEF;">array</span><span style="color:#ABB2BF;">([</span><span style="color:#D19A66;">98</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">99</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">100</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">101</span><span style="color:#ABB2BF;">], TSDataType.</span><span style="color:#D19A66;">INT64</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">np_dtype</span><span style="color:#ABB2BF;">())</span></span>
<span class="line"><span style="color:#ABB2BF;">np_bitmaps_ </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> []</span></span>
<span class="line"><span style="color:#C678DD;">for</span><span style="color:#ABB2BF;"> i </span><span style="color:#C678DD;">in</span><span style="color:#56B6C2;"> range</span><span style="color:#ABB2BF;">(</span><span style="color:#56B6C2;">len</span><span style="color:#ABB2BF;">(measurements_)):</span></span>
<span class="line"><span style="color:#ABB2BF;">    np_bitmaps_.</span><span style="color:#61AFEF;">append</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">BitMap</span><span style="color:#ABB2BF;">(</span><span style="color:#56B6C2;">len</span><span style="color:#ABB2BF;">(np_timestamps_)))</span></span>
<span class="line"><span style="color:#ABB2BF;">np_bitmaps_[</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">].</span><span style="color:#61AFEF;">mark</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">np_bitmaps_[</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">].</span><span style="color:#61AFEF;">mark</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">np_bitmaps_[</span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">].</span><span style="color:#61AFEF;">mark</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">np_bitmaps_[</span><span style="color:#D19A66;">4</span><span style="color:#ABB2BF;">].</span><span style="color:#61AFEF;">mark</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">3</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">np_bitmaps_[</span><span style="color:#D19A66;">5</span><span style="color:#ABB2BF;">].</span><span style="color:#61AFEF;">mark</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">3</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">np_tablet_with_none </span><span style="color:#56B6C2;">=</span><span style="color:#61AFEF;"> NumpyTablet</span><span style="color:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#ABB2BF;">    device_id, measurements_, data_types_, np_values_, np_timestamps_, np_bitmaps_</span></span>
<span class="line"><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">session.</span><span style="color:#61AFEF;">insert_tablet</span><span style="color:#ABB2BF;">(np_tablet_with_none)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>插入多个 Tablet</li></ul><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#ABB2BF;">session.</span><span style="color:#61AFEF;">insert_tablets</span><span style="color:#ABB2BF;">(tablet_lst)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>插入一个 Record，一个 Record 是一个设备一个时间戳下多个测点的数据。</li></ul><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#ABB2BF;">session.</span><span style="color:#61AFEF;">insert_record</span><span style="color:#ABB2BF;">(device_id, timestamp, measurements_, data_types_, values_)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>插入多个 Record</li></ul><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#ABB2BF;">session.</span><span style="color:#61AFEF;">insert_records</span><span style="color:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#ABB2BF;">    device_ids_, time_list_, measurements_list_, data_type_list_, values_list_</span></span>
<span class="line"><span style="color:#ABB2BF;">    )</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>插入同属于一个 device 的多个 Record</li></ul><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#ABB2BF;">session.</span><span style="color:#61AFEF;">insert_records_of_one_device</span><span style="color:#ABB2BF;">(device_id, time_list, measurements_list, data_types_list, values_list)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="带有类型推断的写入" tabindex="-1"><a class="header-anchor" href="#带有类型推断的写入"><span>带有类型推断的写入</span></a></h3><p>当数据均是 String 类型时，我们可以使用如下接口，根据 value 的值进行类型推断。例如：value 为 &quot;true&quot; ，就可以自动推断为布尔类型。value 为 &quot;3.2&quot; ，就可以自动推断为数值类型。服务器需要做类型推断，可能会有额外耗时，速度较无需类型推断的写入慢</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#ABB2BF;">session.</span><span style="color:#61AFEF;">insert_str_record</span><span style="color:#ABB2BF;">(device_id, timestamp, measurements, string_values)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="对齐时间序列的写入" tabindex="-1"><a class="header-anchor" href="#对齐时间序列的写入"><span>对齐时间序列的写入</span></a></h3><p>对齐时间序列的写入使用 insert_aligned_xxx 接口，其余与上述接口类似：</p><ul><li>insert_aligned_record</li><li>insert_aligned_records</li><li>insert_aligned_records_of_one_device</li><li>insert_aligned_tablet</li><li>insert_aligned_tablets</li></ul><h2 id="iotdb-sql-接口" tabindex="-1"><a class="header-anchor" href="#iotdb-sql-接口"><span>IoTDB-SQL 接口</span></a></h2><ul><li>执行查询语句</li></ul><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#ABB2BF;">session.</span><span style="color:#61AFEF;">execute_query_statement</span><span style="color:#ABB2BF;">(sql)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>执行非查询语句</li></ul><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#ABB2BF;">session.</span><span style="color:#61AFEF;">execute_non_query_statement</span><span style="color:#ABB2BF;">(sql)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>执行语句</li></ul><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#ABB2BF;">session.</span><span style="color:#61AFEF;">execute_statement</span><span style="color:#ABB2BF;">(sql)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="元数据模版接口" tabindex="-1"><a class="header-anchor" href="#元数据模版接口"><span>元数据模版接口</span></a></h2><h3 id="构建元数据模版" tabindex="-1"><a class="header-anchor" href="#构建元数据模版"><span>构建元数据模版</span></a></h3><ol><li>首先构建 Template 类</li><li>添加子节点 MeasurementNode</li><li>调用创建元数据模版接口</li></ol><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#ABB2BF;">template </span><span style="color:#56B6C2;">=</span><span style="color:#61AFEF;"> Template</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">name</span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;">template_name, </span><span style="color:#E06C75;font-style:italic;">share_time</span><span style="color:#56B6C2;">=</span><span style="color:#D19A66;">True</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">m_node_x </span><span style="color:#56B6C2;">=</span><span style="color:#61AFEF;"> MeasurementNode</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;x&quot;</span><span style="color:#ABB2BF;">, TSDataType.</span><span style="color:#D19A66;">FLOAT</span><span style="color:#ABB2BF;">, TSEncoding.</span><span style="color:#D19A66;">RLE</span><span style="color:#ABB2BF;">, Compressor.</span><span style="color:#D19A66;">SNAPPY</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">m_node_y </span><span style="color:#56B6C2;">=</span><span style="color:#61AFEF;"> MeasurementNode</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;y&quot;</span><span style="color:#ABB2BF;">, TSDataType.</span><span style="color:#D19A66;">FLOAT</span><span style="color:#ABB2BF;">, TSEncoding.</span><span style="color:#D19A66;">RLE</span><span style="color:#ABB2BF;">, Compressor.</span><span style="color:#D19A66;">SNAPPY</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">m_node_z </span><span style="color:#56B6C2;">=</span><span style="color:#61AFEF;"> MeasurementNode</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;z&quot;</span><span style="color:#ABB2BF;">, TSDataType.</span><span style="color:#D19A66;">FLOAT</span><span style="color:#ABB2BF;">, TSEncoding.</span><span style="color:#D19A66;">RLE</span><span style="color:#ABB2BF;">, Compressor.</span><span style="color:#D19A66;">SNAPPY</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">template.</span><span style="color:#61AFEF;">add_template</span><span style="color:#ABB2BF;">(m_node_x)</span></span>
<span class="line"><span style="color:#ABB2BF;">template.</span><span style="color:#61AFEF;">add_template</span><span style="color:#ABB2BF;">(m_node_y)</span></span>
<span class="line"><span style="color:#ABB2BF;">template.</span><span style="color:#61AFEF;">add_template</span><span style="color:#ABB2BF;">(m_node_z)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">session.</span><span style="color:#61AFEF;">create_schema_template</span><span style="color:#ABB2BF;">(template)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="修改模版节点信息" tabindex="-1"><a class="header-anchor" href="#修改模版节点信息"><span>修改模版节点信息</span></a></h3><p>修改模版节点，其中修改的模版必须已经被创建。以下函数能够在已经存在的模版中增加或者删除物理量</p><ul><li>在模版中增加实体</li></ul><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#ABB2BF;">session.</span><span style="color:#61AFEF;">add_measurements_in_template</span><span style="color:#ABB2BF;">(template_name, measurements_path, data_types, encodings, compressors, is_aligned)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>在模版中删除物理量</li></ul><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#ABB2BF;">session.</span><span style="color:#61AFEF;">delete_node_in_template</span><span style="color:#ABB2BF;">(template_name, path)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="挂载元数据模板" tabindex="-1"><a class="header-anchor" href="#挂载元数据模板"><span>挂载元数据模板</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#ABB2BF;">session.</span><span style="color:#61AFEF;">set_schema_template</span><span style="color:#ABB2BF;">(template_name, prefix_path)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="卸载元数据模版" tabindex="-1"><a class="header-anchor" href="#卸载元数据模版"><span>卸载元数据模版</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#ABB2BF;">session.</span><span style="color:#61AFEF;">unset_schema_template</span><span style="color:#ABB2BF;">(template_name, prefix_path)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="查看元数据模版" tabindex="-1"><a class="header-anchor" href="#查看元数据模版"><span>查看元数据模版</span></a></h3><ul><li>查看所有的元数据模版</li></ul><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#ABB2BF;">session.</span><span style="color:#61AFEF;">show_all_templates</span><span style="color:#ABB2BF;">()</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>查看元数据模版中的物理量个数</li></ul><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#ABB2BF;">session.</span><span style="color:#61AFEF;">count_measurements_in_template</span><span style="color:#ABB2BF;">(template_name)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>判断某个节点是否为物理量，该节点必须已经在元数据模版中</li></ul><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#ABB2BF;">session.</span><span style="color:#61AFEF;">count_measurements_in_template</span><span style="color:#ABB2BF;">(template_name, path)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>判断某个路径是否在元数据模版中，这个路径有可能不在元数据模版中</li></ul><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#ABB2BF;">session.</span><span style="color:#61AFEF;">is_path_exist_in_template</span><span style="color:#ABB2BF;">(template_name, path)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>查看某个元数据模板下的物理量</li></ul><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#ABB2BF;">session.</span><span style="color:#61AFEF;">show_measurements_in_template</span><span style="color:#ABB2BF;">(template_name)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>查看挂载了某个元数据模板的路径前缀</li></ul><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#ABB2BF;">session.</span><span style="color:#61AFEF;">show_paths_template_set_on</span><span style="color:#ABB2BF;">(template_name)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>查看使用了某个元数据模板（即序列已创建）的路径前缀</li></ul><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#ABB2BF;">session.</span><span style="color:#61AFEF;">show_paths_template_using_on</span><span style="color:#ABB2BF;">(template_name)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="删除元数据模版" tabindex="-1"><a class="header-anchor" href="#删除元数据模版"><span>删除元数据模版</span></a></h3><p>删除已经存在的元数据模版，不支持删除已经挂载的模版</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#ABB2BF;">session.</span><span style="color:#61AFEF;">drop_schema_template</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;template_python&quot;</span><span style="color:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="对-pandas-的支持" tabindex="-1"><a class="header-anchor" href="#对-pandas-的支持"><span>对 Pandas 的支持</span></a></h2><p>我们支持将查询结果轻松地转换为 <a href="https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.html" target="_blank" rel="noopener noreferrer">Pandas Dataframe</a>。</p><p>SessionDataSet 有一个方法<code>.todf()</code>，它的作用是消费 SessionDataSet 中的数据，并将数据转换为 pandas dataframe。</p><p>例子：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">from</span><span style="color:#ABB2BF;"> iotdb.Session </span><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> Session</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">ip </span><span style="color:#56B6C2;">=</span><span style="color:#98C379;"> &quot;127.0.0.1&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">port_ </span><span style="color:#56B6C2;">=</span><span style="color:#98C379;"> &quot;6667&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">username_ </span><span style="color:#56B6C2;">=</span><span style="color:#98C379;"> &quot;root&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">password_ </span><span style="color:#56B6C2;">=</span><span style="color:#98C379;"> &quot;root&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">session </span><span style="color:#56B6C2;">=</span><span style="color:#61AFEF;"> Session</span><span style="color:#ABB2BF;">(ip, port_, username_, password_)</span></span>
<span class="line"><span style="color:#ABB2BF;">session.</span><span style="color:#61AFEF;">open</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">False</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">result </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> session.</span><span style="color:#61AFEF;">execute_query_statement</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;SELECT ** FROM root&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># Transform to Pandas Dataset</span></span>
<span class="line"><span style="color:#ABB2BF;">df </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> result.</span><span style="color:#61AFEF;">todf</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">session.</span><span style="color:#61AFEF;">close</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># Now you can work with the dataframe</span></span>
<span class="line"><span style="color:#ABB2BF;">df </span><span style="color:#56B6C2;">=</span><span style="color:#D19A66;"> ...</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="iotdb-testcontainer" tabindex="-1"><a class="header-anchor" href="#iotdb-testcontainer"><span>IoTDB Testcontainer</span></a></h2><p>Python 客户端对测试的支持是基于<code>testcontainers</code>库 (<a href="https://testcontainers-python.readthedocs.io/en/latest/index.html" target="_blank" rel="noopener noreferrer">https://testcontainers-python.readthedocs.io/en/latest/index.html</a>) 的，如果您想使用该特性，就需要将其安装到您的项目中。</p><p>要在 Docker 容器中启动（和停止）一个 IoTDB 数据库，只需这样做：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">class</span><span style="color:#E5C07B;"> MyTestCase</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">unittest</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">TestCase</span><span style="color:#ABB2BF;">):</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">    def</span><span style="color:#61AFEF;"> test_something</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;font-style:italic;">self</span><span style="color:#ABB2BF;">):</span></span>
<span class="line"><span style="color:#C678DD;">        with</span><span style="color:#61AFEF;"> IoTDBContainer</span><span style="color:#ABB2BF;">() </span><span style="color:#C678DD;">as</span><span style="color:#ABB2BF;"> c:</span></span>
<span class="line"><span style="color:#ABB2BF;">            session </span><span style="color:#56B6C2;">=</span><span style="color:#61AFEF;"> Session</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;localhost&quot;</span><span style="color:#ABB2BF;">, c.</span><span style="color:#61AFEF;">get_exposed_port</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">6667</span><span style="color:#ABB2BF;">), </span><span style="color:#98C379;">&quot;root&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;root&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">            session.</span><span style="color:#61AFEF;">open</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">False</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">            result </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> session.</span><span style="color:#61AFEF;">execute_query_statement</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;SHOW TIMESERIES&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#56B6C2;">            print</span><span style="color:#ABB2BF;">(result)</span></span>
<span class="line"><span style="color:#ABB2BF;">            session.</span><span style="color:#61AFEF;">close</span><span style="color:#ABB2BF;">()</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>默认情况下，它会拉取最新的 IoTDB 镜像 <code>apache/iotdb:latest</code>进行测试，如果您想指定待测 IoTDB 的版本，您只需要将版本信息像这样声明：<code>IoTDBContainer(&quot;apache/iotdb:0.12.0&quot;)</code>，此时，您就会得到一个<code>0.12.0</code>版本的 IoTDB 实例。</p><h2 id="iotdb-dbapi" tabindex="-1"><a class="header-anchor" href="#iotdb-dbapi"><span>IoTDB DBAPI</span></a></h2><p>IoTDB DBAPI 遵循 Python DB API 2.0 规范 (<a href="https://peps.python.org/pep-0249/" target="_blank" rel="noopener noreferrer">https://peps.python.org/pep-0249/</a>)，实现了通过Python语言访问数据库的通用接口。</p><h3 id="例子" tabindex="-1"><a class="header-anchor" href="#例子"><span>例子</span></a></h3><ul><li>初始化</li></ul><p>初始化的参数与Session部分保持一致（sqlalchemy_mode参数除外，该参数仅在SQLAlchemy方言中使用）</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">from</span><span style="color:#ABB2BF;"> iotdb.dbapi </span><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> connect</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">ip </span><span style="color:#56B6C2;">=</span><span style="color:#98C379;"> &quot;127.0.0.1&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">port_ </span><span style="color:#56B6C2;">=</span><span style="color:#98C379;"> &quot;6667&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">username_ </span><span style="color:#56B6C2;">=</span><span style="color:#98C379;"> &quot;root&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">password_ </span><span style="color:#56B6C2;">=</span><span style="color:#98C379;"> &quot;root&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">conn </span><span style="color:#56B6C2;">=</span><span style="color:#61AFEF;"> connect</span><span style="color:#ABB2BF;">(ip, port_, username_, password_,</span><span style="color:#E06C75;font-style:italic;">fetch_size</span><span style="color:#56B6C2;">=</span><span style="color:#D19A66;">1024</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;font-style:italic;">zone_id</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;UTC+8&quot;</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;font-style:italic;">sqlalchemy_mode</span><span style="color:#56B6C2;">=</span><span style="color:#D19A66;">False</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">cursor </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> conn.</span><span style="color:#61AFEF;">cursor</span><span style="color:#ABB2BF;">()</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>执行简单的SQL语句</li></ul><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#ABB2BF;">cursor.</span><span style="color:#61AFEF;">execute</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;SELECT ** FROM root&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#C678DD;">for</span><span style="color:#ABB2BF;"> row </span><span style="color:#C678DD;">in</span><span style="color:#ABB2BF;"> cursor.</span><span style="color:#61AFEF;">fetchall</span><span style="color:#ABB2BF;">():</span></span>
<span class="line"><span style="color:#56B6C2;">    print</span><span style="color:#ABB2BF;">(row)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>执行带有参数的SQL语句</li></ul><p>IoTDB DBAPI 支持pyformat风格的参数</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#ABB2BF;">cursor.</span><span style="color:#61AFEF;">execute</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;SELECT ** FROM root WHERE time &lt; </span><span style="color:#D19A66;">%(time)s</span><span style="color:#98C379;">&quot;</span><span style="color:#ABB2BF;">,{</span><span style="color:#98C379;">&quot;time&quot;</span><span style="color:#ABB2BF;">:</span><span style="color:#98C379;">&quot;2017-11-01T00:08:00.000&quot;</span><span style="color:#ABB2BF;">})</span></span>
<span class="line"><span style="color:#C678DD;">for</span><span style="color:#ABB2BF;"> row </span><span style="color:#C678DD;">in</span><span style="color:#ABB2BF;"> cursor.</span><span style="color:#61AFEF;">fetchall</span><span style="color:#ABB2BF;">():</span></span>
<span class="line"><span style="color:#56B6C2;">    print</span><span style="color:#ABB2BF;">(row)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>批量执行带有参数的SQL语句</li></ul><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#ABB2BF;">seq_of_parameters </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> [</span></span>
<span class="line"><span style="color:#ABB2BF;">    {</span><span style="color:#98C379;">&quot;timestamp&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;temperature&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">},</span></span>
<span class="line"><span style="color:#ABB2BF;">    {</span><span style="color:#98C379;">&quot;timestamp&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;temperature&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">},</span></span>
<span class="line"><span style="color:#ABB2BF;">    {</span><span style="color:#98C379;">&quot;timestamp&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">3</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;temperature&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">3</span><span style="color:#ABB2BF;">},</span></span>
<span class="line"><span style="color:#ABB2BF;">    {</span><span style="color:#98C379;">&quot;timestamp&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">4</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;temperature&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">4</span><span style="color:#ABB2BF;">},</span></span>
<span class="line"><span style="color:#ABB2BF;">    {</span><span style="color:#98C379;">&quot;timestamp&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">5</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;temperature&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">5</span><span style="color:#ABB2BF;">},</span></span>
<span class="line"><span style="color:#ABB2BF;">]</span></span>
<span class="line"><span style="color:#ABB2BF;">sql </span><span style="color:#56B6C2;">=</span><span style="color:#98C379;"> &quot;insert into root.cursor(timestamp,temperature) values(</span><span style="color:#D19A66;">%(timestamp)s</span><span style="color:#98C379;">,</span><span style="color:#D19A66;">%(temperature)s</span><span style="color:#98C379;">)&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">cursor.</span><span style="color:#61AFEF;">executemany</span><span style="color:#ABB2BF;">(sql,seq_of_parameters)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>关闭连接</li></ul><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#ABB2BF;">cursor.</span><span style="color:#61AFEF;">close</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#ABB2BF;">conn.</span><span style="color:#61AFEF;">close</span><span style="color:#ABB2BF;">()</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="iotdb-sqlalchemy-dialect-实验性" tabindex="-1"><a class="header-anchor" href="#iotdb-sqlalchemy-dialect-实验性"><span>IoTDB SQLAlchemy Dialect（实验性）</span></a></h2><p>IoTDB的SQLAlchemy方言主要是为了适配Apache superset而编写的，该部分仍在完善中，请勿在生产环境中使用！</p><h3 id="元数据模型映射" tabindex="-1"><a class="header-anchor" href="#元数据模型映射"><span>元数据模型映射</span></a></h3><p>SQLAlchemy 所使用的数据模型为关系数据模型，这种数据模型通过表格来描述不同实体之间的关系。<br> 而 IoTDB 的数据模型为层次数据模型，通过树状结构来对数据进行组织。<br> 为了使 IoTDB 能够适配 SQLAlchemy 的方言，需要对 IoTDB 中原有的数据模型进行重新组织，<br> 把 IoTDB 的数据模型转换成 SQLAlchemy 的数据模型。</p><p>IoTDB 中的元数据有：</p><ol><li>Database：数据库</li><li>Path：存储路径</li><li>Entity：实体</li><li>Measurement：物理量</li></ol><p>SQLAlchemy 中的元数据有：</p><ol><li>Schema：数据模式</li><li>Table：数据表</li><li>Column：数据列</li></ol><p>它们之间的映射关系为：</p><table><thead><tr><th>SQLAlchemy中的元数据</th><th>IoTDB中对应的元数据</th></tr></thead><tbody><tr><td>Schema</td><td>Database</td></tr><tr><td>Table</td><td>Path ( from database to entity ) + Entity</td></tr><tr><td>Column</td><td>Measurement</td></tr></tbody></table><p>下图更加清晰的展示了二者的映射关系：</p><figure><img src="https://alioss.timecho.com/docs/img/UserGuide/API/IoTDB-SQLAlchemy/sqlalchemy-to-iotdb.png?raw=true" alt="sqlalchemy-to-iotdb" tabindex="0" loading="lazy"><figcaption>sqlalchemy-to-iotdb</figcaption></figure><h3 id="数据类型映射" tabindex="-1"><a class="header-anchor" href="#数据类型映射"><span>数据类型映射</span></a></h3><table><thead><tr><th>IoTDB 中的数据类型</th><th>SQLAlchemy 中的数据类型</th></tr></thead><tbody><tr><td>BOOLEAN</td><td>Boolean</td></tr><tr><td>INT32</td><td>Integer</td></tr><tr><td>INT64</td><td>BigInteger</td></tr><tr><td>FLOAT</td><td>Float</td></tr><tr><td>DOUBLE</td><td>Float</td></tr><tr><td>TEXT</td><td>Text</td></tr><tr><td>LONG</td><td>BigInteger</td></tr></tbody></table><h3 id="example" tabindex="-1"><a class="header-anchor" href="#example"><span>Example</span></a></h3><ul><li>执行语句</li></ul><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">from</span><span style="color:#ABB2BF;"> sqlalchemy </span><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> create_engine</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">engine </span><span style="color:#56B6C2;">=</span><span style="color:#61AFEF;"> create_engine</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;iotdb://root:root@127.0.0.1:6667&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">connect </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> engine.</span><span style="color:#61AFEF;">connect</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#ABB2BF;">result </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> connect.</span><span style="color:#61AFEF;">execute</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;SELECT ** FROM root&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#C678DD;">for</span><span style="color:#ABB2BF;"> row </span><span style="color:#C678DD;">in</span><span style="color:#ABB2BF;"> result.</span><span style="color:#61AFEF;">fetchall</span><span style="color:#ABB2BF;">():</span></span>
<span class="line"><span style="color:#56B6C2;">    print</span><span style="color:#ABB2BF;">(row)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>ORM (目前只支持简单的查询)</li></ul><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">from</span><span style="color:#ABB2BF;"> sqlalchemy </span><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> create_engine, Column, Float, BigInteger, MetaData</span></span>
<span class="line"><span style="color:#C678DD;">from</span><span style="color:#ABB2BF;"> sqlalchemy.ext.declarative </span><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> declarative_base</span></span>
<span class="line"><span style="color:#C678DD;">from</span><span style="color:#ABB2BF;"> sqlalchemy.orm </span><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> sessionmaker</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">metadata </span><span style="color:#56B6C2;">=</span><span style="color:#61AFEF;"> MetaData</span><span style="color:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#E06C75;font-style:italic;">    schema</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&#39;root.factory&#39;</span></span>
<span class="line"><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">Base </span><span style="color:#56B6C2;">=</span><span style="color:#61AFEF;"> declarative_base</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">metadata</span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;">metadata)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">class</span><span style="color:#E5C07B;"> Device</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">Base</span><span style="color:#ABB2BF;">):</span></span>
<span class="line"><span style="color:#ABB2BF;">    __tablename__ </span><span style="color:#56B6C2;">=</span><span style="color:#98C379;"> &quot;room2.device1&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">    Time </span><span style="color:#56B6C2;">=</span><span style="color:#61AFEF;"> Column</span><span style="color:#ABB2BF;">(BigInteger, </span><span style="color:#E06C75;font-style:italic;">primary_key</span><span style="color:#56B6C2;">=</span><span style="color:#D19A66;">True</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">    temperature </span><span style="color:#56B6C2;">=</span><span style="color:#61AFEF;"> Column</span><span style="color:#ABB2BF;">(Float)</span></span>
<span class="line"><span style="color:#ABB2BF;">    status </span><span style="color:#56B6C2;">=</span><span style="color:#61AFEF;"> Column</span><span style="color:#ABB2BF;">(Float)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">engine </span><span style="color:#56B6C2;">=</span><span style="color:#61AFEF;"> create_engine</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;iotdb://root:root@127.0.0.1:6667&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">DbSession </span><span style="color:#56B6C2;">=</span><span style="color:#61AFEF;"> sessionmaker</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">bind</span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;">engine)</span></span>
<span class="line"><span style="color:#ABB2BF;">session </span><span style="color:#56B6C2;">=</span><span style="color:#61AFEF;"> DbSession</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">res </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> session.</span><span style="color:#61AFEF;">query</span><span style="color:#ABB2BF;">(Device.status).</span><span style="color:#61AFEF;">filter</span><span style="color:#ABB2BF;">(Device.temperature </span><span style="color:#56B6C2;">&gt;</span><span style="color:#D19A66;"> 1</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">for</span><span style="color:#ABB2BF;"> row </span><span style="color:#C678DD;">in</span><span style="color:#ABB2BF;"> res:</span></span>
<span class="line"><span style="color:#56B6C2;">    print</span><span style="color:#ABB2BF;">(row)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="给开发人员" tabindex="-1"><a class="header-anchor" href="#给开发人员"><span>给开发人员</span></a></h2><h3 id="介绍" tabindex="-1"><a class="header-anchor" href="#介绍"><span>介绍</span></a></h3><p>这是一个使用 thrift rpc 接口连接到 IoTDB 的示例。在 Windows 和 Linux 上操作几乎是一样的，但要注意路径分隔符等不同之处。</p><h3 id="依赖-1" tabindex="-1"><a class="header-anchor" href="#依赖-1"><span>依赖</span></a></h3><p>首选 Python3.7 或更高版本。</p><p>必须安装 thrift（0.11.0 或更高版本）才能将 thrift 文件编译为 Python 代码。下面是官方的安装教程，最终，您应该得到一个 thrift 可执行文件。</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>http://thrift.apache.org/docs/install/</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>在开始之前，您还需要在 Python 环境中安装<code>requirements_dev.txt</code>中的其他依赖：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#61AFEF;">pip</span><span style="color:#98C379;"> install</span><span style="color:#D19A66;"> -r</span><span style="color:#98C379;"> requirements_dev.txt</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="编译-thrift-库并调试" tabindex="-1"><a class="header-anchor" href="#编译-thrift-库并调试"><span>编译 thrift 库并调试</span></a></h3><p>在 IoTDB 源代码文件夹的根目录下，运行<code>mvn clean generate-sources -pl iotdb-client/client-py -am</code>，</p><p>这个指令将自动删除<code>iotdb/thrift</code>中的文件，并使用新生成的 thrift 文件重新填充该文件夹。</p><p>这个文件夹在 git 中会被忽略，并且<strong>永远不应该被推到 git 中！</strong></p><p><strong>注意</strong>不要将<code>iotdb/thrift</code>上传到 git 仓库中 ！</p><h3 id="session-客户端-使用示例" tabindex="-1"><a class="header-anchor" href="#session-客户端-使用示例"><span>Session 客户端 &amp; 使用示例</span></a></h3><p>我们将 thrift 接口打包到<code>client-py/src/iotdb/session.py </code>中（与 Java 版本类似），还提供了一个示例文件<code>client-py/src/SessionExample.py</code>来说明如何使用 Session 模块。请仔细阅读。</p><p>另一个简单的例子：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">from</span><span style="color:#ABB2BF;"> iotdb.Session </span><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> Session</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">ip </span><span style="color:#56B6C2;">=</span><span style="color:#98C379;"> &quot;127.0.0.1&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">port_ </span><span style="color:#56B6C2;">=</span><span style="color:#98C379;"> &quot;6667&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">username_ </span><span style="color:#56B6C2;">=</span><span style="color:#98C379;"> &quot;root&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">password_ </span><span style="color:#56B6C2;">=</span><span style="color:#98C379;"> &quot;root&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">session </span><span style="color:#56B6C2;">=</span><span style="color:#61AFEF;"> Session</span><span style="color:#ABB2BF;">(ip, port_, username_, password_)</span></span>
<span class="line"><span style="color:#ABB2BF;">session.</span><span style="color:#61AFEF;">open</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">False</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">zone </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> session.</span><span style="color:#61AFEF;">get_time_zone</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#ABB2BF;">session.</span><span style="color:#61AFEF;">close</span><span style="color:#ABB2BF;">()</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="测试" tabindex="-1"><a class="header-anchor" href="#测试"><span>测试</span></a></h3><p>请在<code>tests</code>文件夹中添加自定义测试。</p><p>要运行所有的测试，只需在根目录中运行<code>pytest . </code>即可。</p><p><strong>注意</strong>一些测试需要在您的系统上使用 docker，因为测试的 IoTDB 实例是使用 <a href="https://testcontainers-python.readthedocs.io/en/latest/index.html" target="_blank" rel="noopener noreferrer">testcontainers</a> 在 docker 容器中启动的。</p><h3 id="其他工具" tabindex="-1"><a class="header-anchor" href="#其他工具"><span>其他工具</span></a></h3><p><a href="https://pypi.org/project/black/" target="_blank" rel="noopener noreferrer">black</a> 和 <a href="https://pypi.org/project/flake8/" target="_blank" rel="noopener noreferrer">flake8</a> 分别用于自动格式化和 linting。<br> 它们可以通过 <code>black .</code> 或 <code>flake8 .</code> 分别运行。</p><h2 id="发版" tabindex="-1"><a class="header-anchor" href="#发版"><span>发版</span></a></h2><p>要进行发版，</p><p>只需确保您生成了正确的 thrift 代码，</p><p>运行了 linting 并进行了自动格式化，</p><p>然后，确保所有测试都正常通过（通过<code>pytest . </code>），</p><p>最后，您就可以将包发布到 pypi 了。</p><h3 id="准备您的环境" tabindex="-1"><a class="header-anchor" href="#准备您的环境"><span>准备您的环境</span></a></h3><p>首先，通过<code>pip install -r requirements_dev.txt</code>安装所有必要的开发依赖。</p><h3 id="发版-1" tabindex="-1"><a class="header-anchor" href="#发版-1"><span>发版</span></a></h3><p>有一个脚本<code>release.sh</code>可以用来执行发版的所有步骤。</p><p>这些步骤包括：</p><ul><li><p>删除所有临时目录（如果存在）</p></li><li><p>（重新）通过 mvn 生成所有必须的源代码</p></li><li><p>运行 linting （flke8）</p></li><li><p>通过 pytest 运行测试</p></li><li><p>Build</p></li><li><p>发布到 pypi</p></li></ul>`,191)]))}const i=n(o,[["render",p],["__file","Programming-Python-Native-API.html.vue"]]),c=JSON.parse('{"path":"/zh/UserGuide/V1.3.0-2/API/Programming-Python-Native-API.html","title":"Python 原生接口","lang":"zh-CN","frontmatter":{"description":"Python 原生接口 依赖 在使用 Python 原生接口包前，您需要安装 thrift (>=0.13) 依赖。 如何使用 （示例） 首先下载包：pip3 install apache-iotdb 您可以从这里得到一个使用该包进行数据读写的例子：Session Example 关于对齐时间序列读写的例子：Aligned Timeseries Ses...","head":[["link",{"rel":"alternate","hreflang":"en-us","href":"https://iotdb.apache.org/UserGuide/V1.3.0-2/API/Programming-Python-Native-API.html"}],["meta",{"property":"og:url","content":"https://iotdb.apache.org/zh/UserGuide/V1.3.0-2/API/Programming-Python-Native-API.html"}],["meta",{"property":"og:site_name","content":"IoTDB Website"}],["meta",{"property":"og:title","content":"Python 原生接口"}],["meta",{"property":"og:description","content":"Python 原生接口 依赖 在使用 Python 原生接口包前，您需要安装 thrift (>=0.13) 依赖。 如何使用 （示例） 首先下载包：pip3 install apache-iotdb 您可以从这里得到一个使用该包进行数据读写的例子：Session Example 关于对齐时间序列读写的例子：Aligned Timeseries Ses..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://alioss.timecho.com/docs/img/UserGuide/API/IoTDB-SQLAlchemy/sqlalchemy-to-iotdb.png?raw=true"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-12-13T09:49:59.000Z"}],["meta",{"property":"article:modified_time","content":"2024-12-13T09:49:59.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Python 原生接口\\",\\"image\\":[\\"https://alioss.timecho.com/docs/img/UserGuide/API/IoTDB-SQLAlchemy/sqlalchemy-to-iotdb.png?raw=true\\"],\\"dateModified\\":\\"2024-12-13T09:49:59.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"依赖","slug":"依赖","link":"#依赖","children":[]},{"level":2,"title":"如何使用 （示例）","slug":"如何使用-示例","link":"#如何使用-示例","children":[]},{"level":2,"title":"基本接口说明","slug":"基本接口说明","link":"#基本接口说明","children":[{"level":3,"title":"初始化","slug":"初始化","link":"#初始化","children":[]},{"level":3,"title":"通过SessionPool管理session连接","slug":"通过sessionpool管理session连接","link":"#通过sessionpool管理session连接","children":[]}]},{"level":2,"title":"数据定义接口 DDL","slug":"数据定义接口-ddl","link":"#数据定义接口-ddl","children":[{"level":3,"title":"Database 管理","slug":"database-管理","link":"#database-管理","children":[]},{"level":3,"title":"时间序列管理","slug":"时间序列管理","link":"#时间序列管理","children":[]}]},{"level":2,"title":"数据操作接口 DML","slug":"数据操作接口-dml","link":"#数据操作接口-dml","children":[{"level":3,"title":"数据写入","slug":"数据写入","link":"#数据写入","children":[]},{"level":3,"title":"带有类型推断的写入","slug":"带有类型推断的写入","link":"#带有类型推断的写入","children":[]},{"level":3,"title":"对齐时间序列的写入","slug":"对齐时间序列的写入","link":"#对齐时间序列的写入","children":[]}]},{"level":2,"title":"IoTDB-SQL 接口","slug":"iotdb-sql-接口","link":"#iotdb-sql-接口","children":[]},{"level":2,"title":"元数据模版接口","slug":"元数据模版接口","link":"#元数据模版接口","children":[{"level":3,"title":"构建元数据模版","slug":"构建元数据模版","link":"#构建元数据模版","children":[]},{"level":3,"title":"修改模版节点信息","slug":"修改模版节点信息","link":"#修改模版节点信息","children":[]},{"level":3,"title":"挂载元数据模板","slug":"挂载元数据模板","link":"#挂载元数据模板","children":[]},{"level":3,"title":"卸载元数据模版","slug":"卸载元数据模版","link":"#卸载元数据模版","children":[]},{"level":3,"title":"查看元数据模版","slug":"查看元数据模版","link":"#查看元数据模版","children":[]},{"level":3,"title":"删除元数据模版","slug":"删除元数据模版","link":"#删除元数据模版","children":[]}]},{"level":2,"title":"对 Pandas 的支持","slug":"对-pandas-的支持","link":"#对-pandas-的支持","children":[]},{"level":2,"title":"IoTDB Testcontainer","slug":"iotdb-testcontainer","link":"#iotdb-testcontainer","children":[]},{"level":2,"title":"IoTDB DBAPI","slug":"iotdb-dbapi","link":"#iotdb-dbapi","children":[{"level":3,"title":"例子","slug":"例子","link":"#例子","children":[]}]},{"level":2,"title":"IoTDB SQLAlchemy Dialect（实验性）","slug":"iotdb-sqlalchemy-dialect-实验性","link":"#iotdb-sqlalchemy-dialect-实验性","children":[{"level":3,"title":"元数据模型映射","slug":"元数据模型映射","link":"#元数据模型映射","children":[]},{"level":3,"title":"数据类型映射","slug":"数据类型映射","link":"#数据类型映射","children":[]},{"level":3,"title":"Example","slug":"example","link":"#example","children":[]}]},{"level":2,"title":"给开发人员","slug":"给开发人员","link":"#给开发人员","children":[{"level":3,"title":"介绍","slug":"介绍","link":"#介绍","children":[]},{"level":3,"title":"依赖","slug":"依赖-1","link":"#依赖-1","children":[]},{"level":3,"title":"编译 thrift 库并调试","slug":"编译-thrift-库并调试","link":"#编译-thrift-库并调试","children":[]},{"level":3,"title":"Session 客户端 & 使用示例","slug":"session-客户端-使用示例","link":"#session-客户端-使用示例","children":[]},{"level":3,"title":"测试","slug":"测试","link":"#测试","children":[]},{"level":3,"title":"其他工具","slug":"其他工具","link":"#其他工具","children":[]}]},{"level":2,"title":"发版","slug":"发版","link":"#发版","children":[{"level":3,"title":"准备您的环境","slug":"准备您的环境","link":"#准备您的环境","children":[]},{"level":3,"title":"发版","slug":"发版-1","link":"#发版-1","children":[]}]}],"git":{"createdTime":1688958677000,"updatedTime":1734083399000,"contributors":[{"name":"W1y1r","username":"W1y1r","email":"150988475+W1y1r@users.noreply.github.com","commits":2,"url":"https://github.com/W1y1r"},{"name":"wanghui42","username":"wanghui42","email":"105700158+wanghui42@users.noreply.github.com","commits":1,"url":"https://github.com/wanghui42"},{"name":"Lei","username":"Lei","email":"33376433+LeiRui@users.noreply.github.com","commits":1,"url":"https://github.com/Lei"},{"name":"YangCaiyin","username":"YangCaiyin","email":"ycycse@gmail.com","commits":1,"url":"https://github.com/YangCaiyin"},{"name":"CritasWang","username":"CritasWang","email":"critas@outlook.com","commits":1,"url":"https://github.com/CritasWang"}]},"readingTime":{"minutes":10.89,"words":3266},"filePathRelative":"zh/UserGuide/V1.3.0-2/API/Programming-Python-Native-API.md","localizedDate":"2023年7月10日","autoDesc":true}');export{i as comp,c as data};
