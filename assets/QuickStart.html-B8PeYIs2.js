import{_ as r,c as d,d as a,e as s,a as i,f as l,b as t,r as o,o as p}from"./app-CBPT9zqK.js";const c={};function u(b,e){const n=o("RouteLink");return p(),d("div",null,[e[6]||(e[6]=a("h1",{id:"快速上手",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#快速上手"},[a("span",null,"快速上手")])],-1)),e[7]||(e[7]=a("h2",{id:"快速上手-1",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#快速上手-1"},[a("span",null,"快速上手")])],-1)),a("p",null,[e[1]||(e[1]=s("本文将介绍关于 IoTDB 使用的基本流程，如果需要更多信息，请浏览我们官网的 ")),i(n,{to:"/zh/UserGuide/V0.13.x/IoTDB-Introduction/What-is-IoTDB.html"},{default:l(()=>e[0]||(e[0]=[s("指引")])),_:1}),e[2]||(e[2]=s("."))]),e[8]||(e[8]=t(`<h3 id="安装环境" tabindex="-1"><a class="header-anchor" href="#安装环境"><span>安装环境</span></a></h3><p>安装前需要保证设备上配有 JDK&gt;=1.8 的运行环境，并配置好 JAVA_HOME 环境变量。</p><p>设置最大文件打开数为 65535。</p><h3 id="安装步骤" tabindex="-1"><a class="header-anchor" href="#安装步骤"><span>安装步骤</span></a></h3><p>IoTDB 支持多种安装途径。用户可以使用三种方式对 IoTDB 进行安装——下载二进制可运行程序、使用源码、使用 docker 镜像。</p><ul><li><p>使用源码：您可以从代码仓库下载源码并编译，具体编译方法见下方。</p></li><li><p>二进制可运行程序：请从 <a href="https://iotdb.apache.org/Download/" target="_blank" rel="noopener noreferrer">下载</a> 页面下载最新的安装包，解压后即完成安装。</p></li><li><p>使用 Docker 镜像：dockerfile 文件位于 <a href="https://github.com/apache/iotdb/blob/master/docker/src/main" target="_blank" rel="noopener noreferrer">github</a></p></li></ul><h3 id="软件目录结构" tabindex="-1"><a class="header-anchor" href="#软件目录结构"><span>软件目录结构</span></a></h3><ul><li>sbin 启动和停止脚本目录</li><li>conf 配置文件目录</li><li>tools 系统工具目录</li><li>lib 依赖包目录</li></ul><h3 id="iotdb-试用" tabindex="-1"><a class="header-anchor" href="#iotdb-试用"><span>IoTDB 试用</span></a></h3><p>用户可以根据以下操作对 IoTDB 进行简单的试用，若以下操作均无误，则说明 IoTDB 安装成功。</p><h4 id="启动-iotdb" tabindex="-1"><a class="header-anchor" href="#启动-iotdb"><span>启动 IoTDB</span></a></h4><p>用户可以使用 sbin 文件夹下的 start-server 脚本启动 IoTDB。</p><p>Linux 系统与 MacOS 系统启动命令如下：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>&gt; nohup sbin/start-server.sh -f &gt;/dev/null 2&gt;&amp;1 &amp;</span></span>
<span class="line"><span>or</span></span>
<span class="line"><span>&gt; nohup sbin/start-server.sh -b</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可选参数:</p><ul><li>默认不含任何参数时, iotdb 将在后台启动，并且不在控制台打印日志</li><li>&quot;-v&quot;: 查看iotdb版本</li><li>&quot;-f&quot;: 在控制台前台启动iotdb (v0.14前是默认设置)</li><li>&quot;-b&quot;: 在后台启动iotdb，控制台不打印日志</li><li>&quot;-p &lt;pidfile&gt;&quot;: 将pid保存到指定的文件中</li><li>&quot;-h&quot;: 查看帮助</li><li>&quot;printgc&quot;(必须是最后一个参数): 打印GC日志 (从v0.14起，该参数将被-g取代)</li><li>&quot;-g&quot;: 打印GC日志</li><li>&quot;-c &lt;config folder&gt;&quot;: 设置IOTDB_CONF变量的值，从而修改配置文件所在文件夹</li><li>&quot;-D &lt;a=b&gt;&quot;: 设置Java的系统环境变量或其他参数</li><li>&quot;-H &lt;filePath&gt; 当OOM异常时存储堆快照到&lt;filePath&gt; (仅 Linux/Mac生效, 且要求iotdb内存小于16GB)&quot;</li><li>&quot;-E &lt;\\filePath&gt; save error file of JVM to &lt;filePath&gt; (仅 Linux/Mac生效)&quot;</li><li>&quot;-X &lt;command&gt; 等价于JVM中 -XX:&lt;command&gt;&quot;</li><li></li></ul><p>Windows 系统启动命令如下：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>&gt; sbin\\start-server.bat</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Windows 系统支持 -c, -v, -f, -b 四个参数。</p><h4 id="使用-cli-工具" tabindex="-1"><a class="header-anchor" href="#使用-cli-工具"><span>使用 Cli 工具</span></a></h4><p>IoTDB 为用户提供多种与服务器交互的方式，在此我们介绍使用 Cli 工具进行写入、查询数据的基本步骤。</p><p>初始安装后的 IoTDB 中有一个默认用户：root，默认密码为 root。用户可以使用该用户运行 Cli 工具操作 IoTDB。Cli 工具启动脚本为 sbin 文件夹下的 start-cli 脚本。启动脚本时需要指定运行 ip、port、username 和 password。若脚本未给定对应参数，则默认参数为&quot;-h 127.0.0.1 -p 6667 -u root -pw -root&quot;</p><p>以下启动语句为服务器在本机运行，且用户未更改运行端口号的示例。</p><p>Linux 系统与 MacOS 系统启动命令如下：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>&gt; sbin/start-cli.sh -h 127.0.0.1 -p 6667 -u root -pw root</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Windows 系统启动命令如下：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>&gt; sbin\\start-cli.bat -h 127.0.0.1 -p 6667 -u root -pw root</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>启动后出现如图提示即为启动成功。</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span> _____       _________  ______   ______</span></span>
<span class="line"><span>|_   _|     |  _   _  ||_   _ \`.|_   _ \\</span></span>
<span class="line"><span>  | |   .--.|_/ | | \\_|  | | \`. \\ | |_) |</span></span>
<span class="line"><span>  | | / .&#39;\`\\ \\  | |      | |  | | |  __&#39;.</span></span>
<span class="line"><span> _| |_| \\__. | _| |_    _| |_.&#39; /_| |__) |</span></span>
<span class="line"><span>|_____|&#39;.__.&#39; |_____|  |______.&#39;|_______/  version x.x.x</span></span>
<span class="line"><span></span></span>
<span class="line"><span>IoTDB&gt; login successfully</span></span>
<span class="line"><span>IoTDB&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="iotdb-的基本操作" tabindex="-1"><a class="header-anchor" href="#iotdb-的基本操作"><span>IoTDB 的基本操作</span></a></h4><p>在这里，我们首先介绍一下使用 Cli 工具创建时间序列、插入数据并查看数据的方法。</p><p>数据在 IoTDB 中的组织形式是以时间序列为单位，每一个时间序列中有若干个数据-时间点对，每一个时间序列属于一个存储组。在定义时间序列之前，要首先使用 SET STORAGE GROUP 语句定义存储组。SQL 语句如下：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>IoTDB&gt; SET STORAGE GROUP TO root.ln</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>我们可以使用 SHOW STORAGE GROUP 语句来查看系统当前所有的存储组，SQL 语句如下：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>IoTDB&gt; SHOW STORAGE GROUP</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>执行结果为：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-------------+</span></span>
<span class="line"><span>|storage group|</span></span>
<span class="line"><span>+-------------+</span></span>
<span class="line"><span>|      root.ln|</span></span>
<span class="line"><span>+-------------+</span></span>
<span class="line"><span>Total line number = 1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>存储组设定后，使用 CREATE TIMESERIES 语句可以创建新的时间序列，创建时间序列时需要定义数据的类型和编码方式。此处我们创建两个时间序列，SQL 语句如下：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>IoTDB&gt; CREATE TIMESERIES root.ln.wf01.wt01.status WITH DATATYPE=BOOLEAN, ENCODING=PLAIN</span></span>
<span class="line"><span>IoTDB&gt; CREATE TIMESERIES root.ln.wf01.wt01.temperature WITH DATATYPE=FLOAT, ENCODING=RLE</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>为了查看指定的时间序列，我们可以使用 SHOW TIMESERIES &lt;Path&gt;语句，其中、&lt;Path&gt;表示时间序列对应的路径，默认值为空，表示查看系统中所有的时间序列。下面是两个例子：</p><p>使用 SHOW TIMESERIES 语句查看系统中存在的所有时间序列，SQL 语句如下：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>IoTDB&gt; SHOW TIMESERIES</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>执行结果为：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+-----+-------------+--------+--------+-----------+----+----------+</span></span>
<span class="line"><span>|                   timeseries|alias|storage group|dataType|encoding|compression|tags|attributes|</span></span>
<span class="line"><span>+-----------------------------+-----+-------------+--------+--------+-----------+----+----------+</span></span>
<span class="line"><span>|root.ln.wf01.wt01.temperature| null|      root.ln|   FLOAT|     RLE|     SNAPPY|null|      null|</span></span>
<span class="line"><span>|     root.ln.wf01.wt01.status| null|      root.ln| BOOLEAN|   PLAIN|     SNAPPY|null|      null|</span></span>
<span class="line"><span>+-----------------------------+-----+-------------+--------+--------+-----------+----+----------+</span></span>
<span class="line"><span>Total line number = 2</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查看具体的时间序列 root.ln.wf01.wt01.status 的 SQL 语句如下：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>IoTDB&gt; SHOW TIMESERIES root.ln.wf01.wt01.status</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>执行结果为：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+------------------------+-----+-------------+--------+--------+-----------+----+----------+</span></span>
<span class="line"><span>|              timeseries|alias|storage group|dataType|encoding|compression|tags|attributes|</span></span>
<span class="line"><span>+------------------------+-----+-------------+--------+--------+-----------+----+----------+</span></span>
<span class="line"><span>|root.ln.wf01.wt01.status| null|      root.ln| BOOLEAN|   PLAIN|     SNAPPY|null|      null|</span></span>
<span class="line"><span>+------------------------+-----+-------------+--------+--------+-----------+----+----------+</span></span>
<span class="line"><span>Total line number = 1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>接下来，我们使用 INSERT 语句向 root.ln.wf01.wt01.status 时间序列中插入数据，在插入数据时需要首先指定时间戳和路径后缀名称：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>IoTDB&gt; INSERT INTO root.ln.wf01.wt01(timestamp,status) values(100,true);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>我们也可以向多个时间序列中同时插入数据，这些时间序列同属于一个时间戳：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>IoTDB&gt; INSERT INTO root.ln.wf01.wt01(timestamp,status,temperature) values(200,false,20.71)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>最后，我们查询之前插入的数据。使用 SELECT 语句我们可以查询指定的时间序列的数据结果，SQL 语句如下：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>IoTDB&gt; SELECT status FROM root.ln.wf01.wt01</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>查询结果如下：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------+------------------------+</span></span>
<span class="line"><span>|                   Time|root.ln.wf01.wt01.status|</span></span>
<span class="line"><span>+-----------------------+------------------------+</span></span>
<span class="line"><span>|1970-01-01T08:00:00.100|                    true|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.200|                   false|</span></span>
<span class="line"><span>+-----------------------+------------------------+</span></span>
<span class="line"><span>Total line number = 2</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们也可以查询多个时间序列的数据结果，SQL 语句如下：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>IoTDB&gt; SELECT * FROM root.ln.wf01.wt01</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>查询结果如下：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------+--------------------------+-----------------------------+</span></span>
<span class="line"><span>|                   Time|  root.ln.wf01.wt01.status|root.ln.wf01.wt01.temperature|</span></span>
<span class="line"><span>+-----------------------+--------------------------+-----------------------------+</span></span>
<span class="line"><span>|1970-01-01T08:00:00.100|                      true|                         null|</span></span>
<span class="line"><span>|1970-01-01T08:00:00.200|                     false|                        20.71|</span></span>
<span class="line"><span>+-----------------------+--------------------------+-----------------------------+</span></span>
<span class="line"><span>Total line number = 2</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输入 quit 或 exit 可退出 Cli 结束本次会话。</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>IoTDB&gt; quit</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>或</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>IoTDB&gt; exit</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,64)),a("p",null,[e[4]||(e[4]=s("想要浏览更多 IoTDB 数据库支持的命令，请浏览 ")),i(n,{to:"/zh/UserGuide/V0.13.x/Reference/SQL-Reference.html"},{default:l(()=>e[3]||(e[3]=[s("SQL Reference")])),_:1}),e[5]||(e[5]=s("."))]),e[9]||(e[9]=t(`<h4 id="停止-iotdb" tabindex="-1"><a class="header-anchor" href="#停止-iotdb"><span>停止 IoTDB</span></a></h4><p>用户可以使用$IOTDB_HOME/sbin 文件夹下的 stop-server 脚本停止 IoTDB。</p><p>Linux 系统与 MacOS 系统停止命令如下：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>&gt; $sbin/stop-server.sh</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Windows 系统停止命令如下：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>&gt; $sbin\\stop-server.bat</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="iotdb-的权限管理" tabindex="-1"><a class="header-anchor" href="#iotdb-的权限管理"><span>IoTDB 的权限管理</span></a></h4><p>初始安装后的 IoTDB 中有一个默认用户：root，默认密码为 root。该用户为管理员用户，固定拥有所有权限，无法被赋予、撤销权限，也无法被删除。</p><p>您可以通过以下命令修改其密码：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>ALTER USER &lt;username&gt; SET PASSWORD &lt;password&gt;;</span></span>
<span class="line"><span>Example: IoTDB &gt; ALTER USER root SET PASSWORD &#39;newpwd&#39;;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>权限管理的具体内容可以参考：<a href="https://iotdb.apache.org/zh/UserGuide/V0.13.x/Administration-Management/Administration.html" target="_blank" rel="noopener noreferrer">权限管理</a></p><h3 id="基础配置" tabindex="-1"><a class="header-anchor" href="#基础配置"><span>基础配置</span></a></h3><p>配置文件在&quot;conf&quot;文件夹下，包括：</p><ul><li>环境配置模块 (<code>iotdb-env.bat</code>, <code>iotdb-env.sh</code>),</li><li>系统配置模块 (<code>iotdb-engine.properties</code>)</li><li>日志配置模块 (<code>logback.xml</code>).</li></ul>`,14))])}const h=r(c,[["render",u],["__file","QuickStart.html.vue"]]),m=JSON.parse('{"path":"/zh/UserGuide/V0.13.x/QuickStart/QuickStart.html","title":"快速上手","lang":"zh-CN","frontmatter":{"description":"快速上手 快速上手 本文将介绍关于 IoTDB 使用的基本流程，如果需要更多信息，请浏览我们官网的 . 安装环境 安装前需要保证设备上配有 JDK>=1.8 的运行环境，并配置好 JAVA_HOME 环境变量。 设置最大文件打开数为 65535。 安装步骤 IoTDB 支持多种安装途径。用户可以使用三种方式对 IoTDB 进行安装——下载二进制可运行程...","head":[["link",{"rel":"alternate","hreflang":"en-us","href":"https://iotdb.apache.org/UserGuide/V0.13.x/QuickStart/QuickStart.html"}],["meta",{"property":"og:url","content":"https://iotdb.apache.org/zh/UserGuide/V0.13.x/QuickStart/QuickStart.html"}],["meta",{"property":"og:site_name","content":"IoTDB Website"}],["meta",{"property":"og:title","content":"快速上手"}],["meta",{"property":"og:description","content":"快速上手 快速上手 本文将介绍关于 IoTDB 使用的基本流程，如果需要更多信息，请浏览我们官网的 . 安装环境 安装前需要保证设备上配有 JDK>=1.8 的运行环境，并配置好 JAVA_HOME 环境变量。 设置最大文件打开数为 65535。 安装步骤 IoTDB 支持多种安装途径。用户可以使用三种方式对 IoTDB 进行安装——下载二进制可运行程..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2023-07-10T03:11:17.000Z"}],["meta",{"property":"article:modified_time","content":"2023-07-10T03:11:17.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"快速上手\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-07-10T03:11:17.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"快速上手","slug":"快速上手-1","link":"#快速上手-1","children":[{"level":3,"title":"安装环境","slug":"安装环境","link":"#安装环境","children":[]},{"level":3,"title":"安装步骤","slug":"安装步骤","link":"#安装步骤","children":[]},{"level":3,"title":"软件目录结构","slug":"软件目录结构","link":"#软件目录结构","children":[]},{"level":3,"title":"IoTDB 试用","slug":"iotdb-试用","link":"#iotdb-试用","children":[]},{"level":3,"title":"基础配置","slug":"基础配置","link":"#基础配置","children":[]}]}],"git":{"createdTime":1688958677000,"updatedTime":1688958677000,"contributors":[{"name":"CritasWang","username":"CritasWang","email":"critas@outlook.com","commits":1,"url":"https://github.com/CritasWang"}]},"readingTime":{"minutes":6.11,"words":1833},"filePathRelative":"zh/UserGuide/V0.13.x/QuickStart/QuickStart.md","localizedDate":"2023年7月10日","autoDesc":true}');export{h as comp,m as data};
