import{_ as n,c as a,b as e,o as l}from"./app-CBPT9zqK.js";const o={};function p(t,s){return l(),a("div",null,s[0]||(s[0]=[e(`<h1 id="odbc" tabindex="-1"><a class="header-anchor" href="#odbc"><span>ODBC</span></a></h1><p>With IoTDB JDBC, IoTDB can be accessed using the ODBC-JDBC bridge.</p><h2 id="dependencies" tabindex="-1"><a class="header-anchor" href="#dependencies"><span>Dependencies</span></a></h2><ul><li>IoTDB-JDBC&#39;s jar-with-dependency package</li><li>ODBC-JDBC bridge (e.g. ZappySys JDBC Bridge)</li></ul><h2 id="deployment" tabindex="-1"><a class="header-anchor" href="#deployment"><span>Deployment</span></a></h2><h3 id="preparing-jdbc-package" tabindex="-1"><a class="header-anchor" href="#preparing-jdbc-package"><span>Preparing JDBC package</span></a></h3><p>Download the source code of IoTDB, and execute the following command in root directory:</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#61AFEF;">mvn</span><span style="color:#98C379;"> clean</span><span style="color:#98C379;"> package</span><span style="color:#D19A66;"> -pl</span><span style="color:#98C379;"> iotdb-client/jdbc</span><span style="color:#D19A66;"> -am</span><span style="color:#D19A66;"> -DskipTests</span><span style="color:#D19A66;"> -P</span><span style="color:#98C379;"> get-jar-with-dependencies</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Then, you can see the output <code>iotdb-jdbc-1.3.2-SNAPSHOT-jar-with-dependencies.jar</code> under <code>iotdb-client/jdbc/target</code> directory.</p><h3 id="preparing-odbc-jdbc-bridge" tabindex="-1"><a class="header-anchor" href="#preparing-odbc-jdbc-bridge"><span>Preparing ODBC-JDBC Bridge</span></a></h3><p><em>Note: Here we only provide one kind of ODBC-JDBC bridge as the instance. Readers can use other ODBC-JDBC bridges to access IoTDB with the IOTDB-JDBC.</em></p><ol><li><p><strong>Download Zappy-Sys ODBC-JDBC Bridge</strong>:<br> Enter the <a href="https://zappysys.com/products/odbc-powerpack/odbc-jdbc-bridge-driver/" target="_blank" rel="noopener noreferrer">https://zappysys.com/products/odbc-powerpack/odbc-jdbc-bridge-driver/</a> website, and click &quot;download&quot;.</p><figure><img src="https://alioss.timecho.com/upload/ZappySys_website.jpg" alt="ZappySys_website.jpg" tabindex="0" loading="lazy"><figcaption>ZappySys_website.jpg</figcaption></figure></li><li><p><strong>Prepare IoTDB</strong>: Set up IoTDB cluster, and write a row of data arbitrarily.</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#ABB2BF;">IoTDB </span><span style="color:#56B6C2;">&gt;</span><span style="color:#C678DD;"> insert into</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">ln</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">wf02</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">wt02</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">timestamp</span><span style="color:#ABB2BF;">,</span><span style="color:#C678DD;">status</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">values</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">,true)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p><strong>Deploy and Test the Bridge</strong>:</p><ol><li><p>Open ODBC Data Sources(32/64 bit), depending on the bits of Windows. One possible position is <code>C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\Administrative Tools</code>.</p><figure><img src="https://alioss.timecho.com/upload/ODBC_ADD_EN.jpg" alt="ODBC_ADD_EN.jpg" tabindex="0" loading="lazy"><figcaption>ODBC_ADD_EN.jpg</figcaption></figure></li><li><p>Click on &quot;add&quot; and select ZappySys JDBC Bridge.</p><figure><img src="https://alioss.timecho.com/upload/ODBC_CREATE_EN.jpg" alt="ODBC_CREATE_EN.jpg" tabindex="0" loading="lazy"><figcaption>ODBC_CREATE_EN.jpg</figcaption></figure></li><li><p>Fill in the following settings:</p><table><thead><tr><th>Property</th><th>Content</th><th>Example</th></tr></thead><tbody><tr><td>Connection String</td><td>jdbc:iotdb://&lt;The IP of IoTDB&gt;:&lt;The rpc port of IoTDB&gt;/</td><td>jdbc:iotdb://127.0.0.1:6667/</td></tr><tr><td>Driver Class</td><td>org.apache.iotdb.jdbc.IoTDBDriver</td><td>org.apache.iotdb.jdbc.IoTDBDriver</td></tr><tr><td>JDBC driver file(s)</td><td>The path of IoTDB JDBC jar-with-dependencies</td><td>C:\\Users\\13361\\Documents\\GitHub\\iotdb\\iotdb-client\\jdbc\\target\\iotdb-jdbc-1.3.2-SNAPSHOT-jar-with-dependencies.jar</td></tr><tr><td>User name</td><td>IoTDB&#39;s user name</td><td>root</td></tr><tr><td>User password</td><td>IoTDB&#39;s password</td><td>root</td></tr></tbody></table><figure><img src="https://alioss.timecho.com/upload/ODBC_CONNECTION.png" alt="ODBC_CONNECTION.png" tabindex="0" loading="lazy"><figcaption>ODBC_CONNECTION.png</figcaption></figure></li><li><p>Click on &quot;Test Connection&quot; button, and a &quot;Test Connection: SUCCESSFUL&quot; should appear.</p><figure><img src="https://alioss.timecho.com/upload/ODBC_CONFIG_EN.jpg" alt="ODBC_CONFIG_EN.jpg" tabindex="0" loading="lazy"><figcaption>ODBC_CONFIG_EN.jpg</figcaption></figure></li><li><p>Click the &quot;Preview&quot; button above, and replace the original query text with <code>select * from root.**</code>, then click &quot;Preview Data&quot;, and the query result should correctly.</p><figure><img src="https://alioss.timecho.com/upload/ODBC_TEST.jpg" alt="ODBC_TEST.jpg" tabindex="0" loading="lazy"><figcaption>ODBC_TEST.jpg</figcaption></figure></li></ol></li><li><p><strong>Operate IoTDB&#39;s data with ODBC</strong>: After correct deployment, you can use Microsoft&#39;s ODBC library to operate IoTDB&#39;s data. Here&#39;s an example written in C#:</p><div class="language-c# line-numbers-mode" data-highlighter="shiki" data-ext="c#" data-title="c#" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">using</span><span style="color:#E5C07B;"> System</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">Data</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">Odbc</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// Get a connection</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> dbConnection</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> new </span><span style="color:#E5C07B;">OdbcConnection</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;DSN=ZappySys JDBC Bridge&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">dbConnection</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">Open</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// Execute the write commands to prepare data</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> dbCommand</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> dbConnection</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">CreateCommand</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E5C07B;">dbCommand</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">CommandText</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &quot;insert into root.Keller.Flur.Energieversorgung(time, s1) values(1715670861634, 1)&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">dbCommand</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">ExecuteNonQuery</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E5C07B;">dbCommand</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">CommandText</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &quot;insert into root.Keller.Flur.Energieversorgung(time, s2) values(1715670861634, true)&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">dbCommand</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">ExecuteNonQuery</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E5C07B;">dbCommand</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">CommandText</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &quot;insert into root.Keller.Flur.Energieversorgung(time, s3) values(1715670861634, 3.1)&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">dbCommand</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">ExecuteNonQuery</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// Execute the read command</span></span>
<span class="line"><span style="color:#E5C07B;">dbCommand</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">CommandText</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &quot;SELECT * FROM root.Keller.Flur.Energieversorgung&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> dbReader</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> dbCommand</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">ExecuteReader</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// Write the output header</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> fCount</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> dbReader</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">FieldCount</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">Console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">Write</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;:&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">for</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> i</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">; </span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;"> &lt;</span><span style="color:#E06C75;"> fCount</span><span style="color:#ABB2BF;">; </span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;">++</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#C678DD;">    var</span><span style="color:#E06C75;"> fName</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> dbReader</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">GetName</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">i</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">    Console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">Write</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">fName</span><span style="color:#56B6C2;"> +</span><span style="color:#98C379;"> &quot;:&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#E5C07B;">Console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">WriteLine</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// Output the content</span></span>
<span class="line"><span style="color:#C678DD;">while</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">dbReader</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">Read</span><span style="color:#ABB2BF;">())</span></span>
<span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#E5C07B;">    Console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">Write</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;:&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">    for</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> i</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">; </span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;"> &lt;</span><span style="color:#E06C75;"> fCount</span><span style="color:#ABB2BF;">; </span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;">++</span><span style="color:#ABB2BF;">) </span></span>
<span class="line"><span style="color:#ABB2BF;">    {</span></span>
<span class="line"><span style="color:#C678DD;">        var</span><span style="color:#E06C75;"> fieldType</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> dbReader</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">GetFieldType</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">i</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">        switch</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">fieldType</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">Name</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">        {</span></span>
<span class="line"><span style="color:#C678DD;">            case</span><span style="color:#98C379;"> &quot;DateTime&quot;</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#C678DD;">                var</span><span style="color:#E06C75;"> dateTime</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> dbReader</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">GetInt64</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">i</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">                Console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">Write</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">dateTime</span><span style="color:#56B6C2;"> +</span><span style="color:#98C379;"> &quot;:&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">                break</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">            case</span><span style="color:#98C379;"> &quot;Double&quot;</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#C678DD;">                if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">dbReader</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">IsDBNull</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">i</span><span style="color:#ABB2BF;">)) </span></span>
<span class="line"><span style="color:#ABB2BF;">                {</span></span>
<span class="line"><span style="color:#E5C07B;">                    Console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">Write</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;null:&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">                }</span></span>
<span class="line"><span style="color:#C678DD;">                else</span><span style="color:#ABB2BF;"> </span></span>
<span class="line"><span style="color:#ABB2BF;">                {</span></span>
<span class="line"><span style="color:#C678DD;">                    var</span><span style="color:#E06C75;"> fValue</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> dbReader</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">GetDouble</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">i</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">                    Console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">Write</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">fValue</span><span style="color:#56B6C2;"> +</span><span style="color:#98C379;"> &quot;:&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">                }   </span></span>
<span class="line"><span style="color:#C678DD;">                break</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">            default</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#E5C07B;">                Console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">Write</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">fieldType</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">Name</span><span style="color:#56B6C2;"> +</span><span style="color:#98C379;"> &quot;:&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">                break</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#E5C07B;">    Console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">WriteLine</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// Shut down gracefully</span></span>
<span class="line"><span style="color:#E5C07B;">dbReader</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">Close</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E5C07B;">dbCommand</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">Dispose</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E5C07B;">dbConnection</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">Close</span><span style="color:#ABB2BF;">();</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>This program can write data into IoTDB, and query the data we have just written.</p></li></ol>`,12)]))}const i=n(o,[["render",p],["__file","Programming-ODBC.html.vue"]]),c=JSON.parse(`{"path":"/UserGuide/V2.0.1/Tree/API/Programming-ODBC.html","title":"ODBC","lang":"en-US","frontmatter":{"description":"ODBC With IoTDB JDBC, IoTDB can be accessed using the ODBC-JDBC bridge. Dependencies IoTDB-JDBC's jar-with-dependency package ODBC-JDBC bridge (e.g. ZappySys JDBC Bridge) Deploy...","head":[["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://iotdb.apache.org/zh/UserGuide/V2.0.1/Tree/API/Programming-ODBC.html"}],["meta",{"property":"og:url","content":"https://iotdb.apache.org/UserGuide/V2.0.1/Tree/API/Programming-ODBC.html"}],["meta",{"property":"og:site_name","content":"IoTDB Website"}],["meta",{"property":"og:title","content":"ODBC"}],["meta",{"property":"og:description","content":"ODBC With IoTDB JDBC, IoTDB can be accessed using the ODBC-JDBC bridge. Dependencies IoTDB-JDBC's jar-with-dependency package ODBC-JDBC bridge (e.g. ZappySys JDBC Bridge) Deploy..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://alioss.timecho.com/upload/ZappySys_website.jpg"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-12-13T04:33:18.000Z"}],["meta",{"property":"article:modified_time","content":"2024-12-13T04:33:18.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"ODBC\\",\\"image\\":[\\"https://alioss.timecho.com/upload/ZappySys_website.jpg\\",\\"https://alioss.timecho.com/upload/ODBC_ADD_EN.jpg\\",\\"https://alioss.timecho.com/upload/ODBC_CREATE_EN.jpg\\",\\"https://alioss.timecho.com/upload/ODBC_CONNECTION.png\\",\\"https://alioss.timecho.com/upload/ODBC_CONFIG_EN.jpg\\",\\"https://alioss.timecho.com/upload/ODBC_TEST.jpg\\"],\\"dateModified\\":\\"2024-12-13T04:33:18.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"Dependencies","slug":"dependencies","link":"#dependencies","children":[]},{"level":2,"title":"Deployment","slug":"deployment","link":"#deployment","children":[{"level":3,"title":"Preparing JDBC package","slug":"preparing-jdbc-package","link":"#preparing-jdbc-package","children":[]},{"level":3,"title":"Preparing ODBC-JDBC Bridge","slug":"preparing-odbc-jdbc-bridge","link":"#preparing-odbc-jdbc-bridge","children":[]}]}],"git":{"createdTime":1731055543000,"updatedTime":1734064398000,"contributors":[{"name":"majialin","username":"majialin","email":"107627937+mal117@users.noreply.github.com","commits":1,"url":"https://github.com/majialin"},{"name":"W1y1r","username":"W1y1r","email":"150988475+W1y1r@users.noreply.github.com","commits":1,"url":"https://github.com/W1y1r"},{"name":"Caideyipi","username":"Caideyipi","email":"87789683+Caideyipi@users.noreply.github.com","commits":1,"url":"https://github.com/Caideyipi"}]},"readingTime":{"minutes":2.11,"words":632},"filePathRelative":"UserGuide/V2.0.1/Tree/API/Programming-ODBC.md","localizedDate":"November 8, 2024","autoDesc":true}`);export{i as comp,c as data};
